// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io/harness/delegate/ng_delegate_task.proto

package io.harness.delegate;

/**
 * Protobuf type {@code io.harness.delegate.SendTaskRequest}
 */
@javax.annotation.Generated(value = "protoc", comments = "annotations:SendTaskRequest.java.pb.meta")
public final class SendTaskRequest extends com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:io.harness.delegate.SendTaskRequest)
    SendTaskRequestOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use SendTaskRequest.newBuilder() to construct.
  private SendTaskRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SendTaskRequest() {}

  @java.
  lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new SendTaskRequest();
  }

  @java.
  lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }
  private SendTaskRequest(
      com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 18: {
            io.harness.delegate.NgAccountId.Builder subBuilder = null;
            if (accountId_ != null) {
              subBuilder = accountId_.toBuilder();
            }
            accountId_ = input.readMessage(io.harness.delegate.NgAccountId.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(accountId_);
              accountId_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            io.harness.delegate.NgTaskSetupAbstractions.Builder subBuilder = null;
            if (setupAbstractions_ != null) {
              subBuilder = setupAbstractions_.toBuilder();
            }
            setupAbstractions_ =
                input.readMessage(io.harness.delegate.NgTaskSetupAbstractions.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(setupAbstractions_);
              setupAbstractions_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            io.harness.delegate.NgTaskDetails.Builder subBuilder = null;
            if (details_ != null) {
              subBuilder = details_.toBuilder();
            }
            details_ = input.readMessage(io.harness.delegate.NgTaskDetails.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(details_);
              details_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return io.harness.delegate.NgDelegateTask.internal_static_io_harness_delegate_SendTaskRequest_descriptor;
  }

  @java.
  lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
    return io.harness.delegate.NgDelegateTask.internal_static_io_harness_delegate_SendTaskRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.harness.delegate.SendTaskRequest.class, io.harness.delegate.SendTaskRequest.Builder.class);
  }

  public static final int ACCOUNT_ID_FIELD_NUMBER = 2;
  private io.harness.delegate.NgAccountId accountId_;
  /**
   * <code>.io.harness.delegate.NgAccountId account_id = 2[json_name = "accountId"];</code>
   * @return Whether the accountId field is set.
   */
  public boolean hasAccountId() {
    return accountId_ != null;
  }
  /**
   * <code>.io.harness.delegate.NgAccountId account_id = 2[json_name = "accountId"];</code>
   * @return The accountId.
   */
  public io.harness.delegate.NgAccountId getAccountId() {
    return accountId_ == null ? io.harness.delegate.NgAccountId.getDefaultInstance() : accountId_;
  }
  /**
   * <code>.io.harness.delegate.NgAccountId account_id = 2[json_name = "accountId"];</code>
   */
  public io.harness.delegate.NgAccountIdOrBuilder getAccountIdOrBuilder() {
    return getAccountId();
  }

  public static final int SETUP_ABSTRACTIONS_FIELD_NUMBER = 3;
  private io.harness.delegate.NgTaskSetupAbstractions setupAbstractions_;
  /**
   * <code>.io.harness.delegate.NgTaskSetupAbstractions setup_abstractions = 3[json_name = "setupAbstractions"];</code>
   * @return Whether the setupAbstractions field is set.
   */
  public boolean hasSetupAbstractions() {
    return setupAbstractions_ != null;
  }
  /**
   * <code>.io.harness.delegate.NgTaskSetupAbstractions setup_abstractions = 3[json_name = "setupAbstractions"];</code>
   * @return The setupAbstractions.
   */
  public io.harness.delegate.NgTaskSetupAbstractions getSetupAbstractions() {
    return setupAbstractions_ == null ? io.harness.delegate.NgTaskSetupAbstractions.getDefaultInstance()
                                      : setupAbstractions_;
  }
  /**
   * <code>.io.harness.delegate.NgTaskSetupAbstractions setup_abstractions = 3[json_name = "setupAbstractions"];</code>
   */
  public io.harness.delegate.NgTaskSetupAbstractionsOrBuilder getSetupAbstractionsOrBuilder() {
    return getSetupAbstractions();
  }

  public static final int DETAILS_FIELD_NUMBER = 4;
  private io.harness.delegate.NgTaskDetails details_;
  /**
   * <code>.io.harness.delegate.NgTaskDetails details = 4[json_name = "details"];</code>
   * @return Whether the details field is set.
   */
  public boolean hasDetails() {
    return details_ != null;
  }
  /**
   * <code>.io.harness.delegate.NgTaskDetails details = 4[json_name = "details"];</code>
   * @return The details.
   */
  public io.harness.delegate.NgTaskDetails getDetails() {
    return details_ == null ? io.harness.delegate.NgTaskDetails.getDefaultInstance() : details_;
  }
  /**
   * <code>.io.harness.delegate.NgTaskDetails details = 4[json_name = "details"];</code>
   */
  public io.harness.delegate.NgTaskDetailsOrBuilder getDetailsOrBuilder() {
    return getDetails();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1)
      return true;
    if (isInitialized == 0)
      return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (accountId_ != null) {
      output.writeMessage(2, getAccountId());
    }
    if (setupAbstractions_ != null) {
      output.writeMessage(3, getSetupAbstractions());
    }
    if (details_ != null) {
      output.writeMessage(4, getDetails());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1)
      return size;

    size = 0;
    if (accountId_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getAccountId());
    }
    if (setupAbstractions_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getSetupAbstractions());
    }
    if (details_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, getDetails());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof io.harness.delegate.SendTaskRequest)) {
      return super.equals(obj);
    }
    io.harness.delegate.SendTaskRequest other = (io.harness.delegate.SendTaskRequest) obj;

    if (hasAccountId() != other.hasAccountId())
      return false;
    if (hasAccountId()) {
      if (!getAccountId().equals(other.getAccountId()))
        return false;
    }
    if (hasSetupAbstractions() != other.hasSetupAbstractions())
      return false;
    if (hasSetupAbstractions()) {
      if (!getSetupAbstractions().equals(other.getSetupAbstractions()))
        return false;
    }
    if (hasDetails() != other.hasDetails())
      return false;
    if (hasDetails()) {
      if (!getDetails().equals(other.getDetails()))
        return false;
    }
    if (!unknownFields.equals(other.unknownFields))
      return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasAccountId()) {
      hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getAccountId().hashCode();
    }
    if (hasSetupAbstractions()) {
      hash = (37 * hash) + SETUP_ABSTRACTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getSetupAbstractions().hashCode();
    }
    if (hasDetails()) {
      hash = (37 * hash) + DETAILS_FIELD_NUMBER;
      hash = (53 * hash) + getDetails().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.harness.delegate.SendTaskRequest parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.harness.delegate.SendTaskRequest parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.harness.delegate.SendTaskRequest parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.harness.delegate.SendTaskRequest parseFrom(
      com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.harness.delegate.SendTaskRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.harness.delegate.SendTaskRequest parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.harness.delegate.SendTaskRequest parseFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }
  public static io.harness.delegate.SendTaskRequest parseFrom(java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.harness.delegate.SendTaskRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }
  public static io.harness.delegate.SendTaskRequest parseDelimitedFrom(java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.harness.delegate.SendTaskRequest parseFrom(com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }
  public static io.harness.delegate.SendTaskRequest parseFrom(com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.harness.delegate.SendTaskRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code io.harness.delegate.SendTaskRequest}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.harness.delegate.SendTaskRequest)
      io.harness.delegate.SendTaskRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return io.harness.delegate.NgDelegateTask.internal_static_io_harness_delegate_SendTaskRequest_descriptor;
    }

    @java.
    lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
      return io.harness.delegate.NgDelegateTask.internal_static_io_harness_delegate_SendTaskRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.harness.delegate.SendTaskRequest.class, io.harness.delegate.SendTaskRequest.Builder.class);
    }

    // Construct using io.harness.delegate.SendTaskRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (accountIdBuilder_ == null) {
        accountId_ = null;
      } else {
        accountId_ = null;
        accountIdBuilder_ = null;
      }
      if (setupAbstractionsBuilder_ == null) {
        setupAbstractions_ = null;
      } else {
        setupAbstractions_ = null;
        setupAbstractionsBuilder_ = null;
      }
      if (detailsBuilder_ == null) {
        details_ = null;
      } else {
        details_ = null;
        detailsBuilder_ = null;
      }
      return this;
    }

    @java.
    lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return io.harness.delegate.NgDelegateTask.internal_static_io_harness_delegate_SendTaskRequest_descriptor;
    }

    @java.
    lang.Override
    public io.harness.delegate.SendTaskRequest getDefaultInstanceForType() {
      return io.harness.delegate.SendTaskRequest.getDefaultInstance();
    }

    @java.
    lang.Override
    public io.harness.delegate.SendTaskRequest build() {
      io.harness.delegate.SendTaskRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.
    lang.Override
    public io.harness.delegate.SendTaskRequest buildPartial() {
      io.harness.delegate.SendTaskRequest result = new io.harness.delegate.SendTaskRequest(this);
      if (accountIdBuilder_ == null) {
        result.accountId_ = accountId_;
      } else {
        result.accountId_ = accountIdBuilder_.build();
      }
      if (setupAbstractionsBuilder_ == null) {
        result.setupAbstractions_ = setupAbstractions_;
      } else {
        result.setupAbstractions_ = setupAbstractionsBuilder_.build();
      }
      if (detailsBuilder_ == null) {
        result.details_ = details_;
      } else {
        result.details_ = detailsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.harness.delegate.SendTaskRequest) {
        return mergeFrom((io.harness.delegate.SendTaskRequest) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.harness.delegate.SendTaskRequest other) {
      if (other == io.harness.delegate.SendTaskRequest.getDefaultInstance())
        return this;
      if (other.hasAccountId()) {
        mergeAccountId(other.getAccountId());
      }
      if (other.hasSetupAbstractions()) {
        mergeSetupAbstractions(other.getSetupAbstractions());
      }
      if (other.hasDetails()) {
        mergeDetails(other.getDetails());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      io.harness.delegate.SendTaskRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.harness.delegate.SendTaskRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.harness.delegate.NgAccountId accountId_;
    private com.google.protobuf.SingleFieldBuilderV3<io.harness.delegate.NgAccountId,
        io.harness.delegate.NgAccountId.Builder, io.harness.delegate.NgAccountIdOrBuilder> accountIdBuilder_;
    /**
     * <code>.io.harness.delegate.NgAccountId account_id = 2[json_name = "accountId"];</code>
     * @return Whether the accountId field is set.
     */
    public boolean hasAccountId() {
      return accountIdBuilder_ != null || accountId_ != null;
    }
    /**
     * <code>.io.harness.delegate.NgAccountId account_id = 2[json_name = "accountId"];</code>
     * @return The accountId.
     */
    public io.harness.delegate.NgAccountId getAccountId() {
      if (accountIdBuilder_ == null) {
        return accountId_ == null ? io.harness.delegate.NgAccountId.getDefaultInstance() : accountId_;
      } else {
        return accountIdBuilder_.getMessage();
      }
    }
    /**
     * <code>.io.harness.delegate.NgAccountId account_id = 2[json_name = "accountId"];</code>
     */
    public Builder setAccountId(io.harness.delegate.NgAccountId value) {
      if (accountIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        accountId_ = value;
        onChanged();
      } else {
        accountIdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.io.harness.delegate.NgAccountId account_id = 2[json_name = "accountId"];</code>
     */
    public Builder setAccountId(io.harness.delegate.NgAccountId.Builder builderForValue) {
      if (accountIdBuilder_ == null) {
        accountId_ = builderForValue.build();
        onChanged();
      } else {
        accountIdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.io.harness.delegate.NgAccountId account_id = 2[json_name = "accountId"];</code>
     */
    public Builder mergeAccountId(io.harness.delegate.NgAccountId value) {
      if (accountIdBuilder_ == null) {
        if (accountId_ != null) {
          accountId_ = io.harness.delegate.NgAccountId.newBuilder(accountId_).mergeFrom(value).buildPartial();
        } else {
          accountId_ = value;
        }
        onChanged();
      } else {
        accountIdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.io.harness.delegate.NgAccountId account_id = 2[json_name = "accountId"];</code>
     */
    public Builder clearAccountId() {
      if (accountIdBuilder_ == null) {
        accountId_ = null;
        onChanged();
      } else {
        accountId_ = null;
        accountIdBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.io.harness.delegate.NgAccountId account_id = 2[json_name = "accountId"];</code>
     */
    public io.harness.delegate.NgAccountId.Builder getAccountIdBuilder() {
      onChanged();
      return getAccountIdFieldBuilder().getBuilder();
    }
    /**
     * <code>.io.harness.delegate.NgAccountId account_id = 2[json_name = "accountId"];</code>
     */
    public io.harness.delegate.NgAccountIdOrBuilder getAccountIdOrBuilder() {
      if (accountIdBuilder_ != null) {
        return accountIdBuilder_.getMessageOrBuilder();
      } else {
        return accountId_ == null ? io.harness.delegate.NgAccountId.getDefaultInstance() : accountId_;
      }
    }
    /**
     * <code>.io.harness.delegate.NgAccountId account_id = 2[json_name = "accountId"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<io.harness.delegate.NgAccountId,
        io.harness.delegate.NgAccountId.Builder, io.harness.delegate.NgAccountIdOrBuilder>
    getAccountIdFieldBuilder() {
      if (accountIdBuilder_ == null) {
        accountIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<io.harness.delegate.NgAccountId,
            io.harness.delegate.NgAccountId.Builder, io.harness.delegate.NgAccountIdOrBuilder>(
            getAccountId(), getParentForChildren(), isClean());
        accountId_ = null;
      }
      return accountIdBuilder_;
    }

    private io.harness.delegate.NgTaskSetupAbstractions setupAbstractions_;
    private com.google.protobuf.SingleFieldBuilderV3<io.harness.delegate.NgTaskSetupAbstractions,
        io.harness.delegate.NgTaskSetupAbstractions.Builder, io.harness.delegate.NgTaskSetupAbstractionsOrBuilder>
        setupAbstractionsBuilder_;
    /**
     * <code>.io.harness.delegate.NgTaskSetupAbstractions setup_abstractions = 3[json_name =
     * "setupAbstractions"];</code>
     * @return Whether the setupAbstractions field is set.
     */
    public boolean hasSetupAbstractions() {
      return setupAbstractionsBuilder_ != null || setupAbstractions_ != null;
    }
    /**
     * <code>.io.harness.delegate.NgTaskSetupAbstractions setup_abstractions = 3[json_name =
     * "setupAbstractions"];</code>
     * @return The setupAbstractions.
     */
    public io.harness.delegate.NgTaskSetupAbstractions getSetupAbstractions() {
      if (setupAbstractionsBuilder_ == null) {
        return setupAbstractions_ == null ? io.harness.delegate.NgTaskSetupAbstractions.getDefaultInstance()
                                          : setupAbstractions_;
      } else {
        return setupAbstractionsBuilder_.getMessage();
      }
    }
    /**
     * <code>.io.harness.delegate.NgTaskSetupAbstractions setup_abstractions = 3[json_name =
     * "setupAbstractions"];</code>
     */
    public Builder setSetupAbstractions(io.harness.delegate.NgTaskSetupAbstractions value) {
      if (setupAbstractionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        setupAbstractions_ = value;
        onChanged();
      } else {
        setupAbstractionsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.io.harness.delegate.NgTaskSetupAbstractions setup_abstractions = 3[json_name =
     * "setupAbstractions"];</code>
     */
    public Builder setSetupAbstractions(io.harness.delegate.NgTaskSetupAbstractions.Builder builderForValue) {
      if (setupAbstractionsBuilder_ == null) {
        setupAbstractions_ = builderForValue.build();
        onChanged();
      } else {
        setupAbstractionsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.io.harness.delegate.NgTaskSetupAbstractions setup_abstractions = 3[json_name =
     * "setupAbstractions"];</code>
     */
    public Builder mergeSetupAbstractions(io.harness.delegate.NgTaskSetupAbstractions value) {
      if (setupAbstractionsBuilder_ == null) {
        if (setupAbstractions_ != null) {
          setupAbstractions_ = io.harness.delegate.NgTaskSetupAbstractions.newBuilder(setupAbstractions_)
                                   .mergeFrom(value)
                                   .buildPartial();
        } else {
          setupAbstractions_ = value;
        }
        onChanged();
      } else {
        setupAbstractionsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.io.harness.delegate.NgTaskSetupAbstractions setup_abstractions = 3[json_name =
     * "setupAbstractions"];</code>
     */
    public Builder clearSetupAbstractions() {
      if (setupAbstractionsBuilder_ == null) {
        setupAbstractions_ = null;
        onChanged();
      } else {
        setupAbstractions_ = null;
        setupAbstractionsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.io.harness.delegate.NgTaskSetupAbstractions setup_abstractions = 3[json_name =
     * "setupAbstractions"];</code>
     */
    public io.harness.delegate.NgTaskSetupAbstractions.Builder getSetupAbstractionsBuilder() {
      onChanged();
      return getSetupAbstractionsFieldBuilder().getBuilder();
    }
    /**
     * <code>.io.harness.delegate.NgTaskSetupAbstractions setup_abstractions = 3[json_name =
     * "setupAbstractions"];</code>
     */
    public io.harness.delegate.NgTaskSetupAbstractionsOrBuilder getSetupAbstractionsOrBuilder() {
      if (setupAbstractionsBuilder_ != null) {
        return setupAbstractionsBuilder_.getMessageOrBuilder();
      } else {
        return setupAbstractions_ == null ? io.harness.delegate.NgTaskSetupAbstractions.getDefaultInstance()
                                          : setupAbstractions_;
      }
    }
    /**
     * <code>.io.harness.delegate.NgTaskSetupAbstractions setup_abstractions = 3[json_name =
     * "setupAbstractions"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<io.harness.delegate.NgTaskSetupAbstractions,
        io.harness.delegate.NgTaskSetupAbstractions.Builder, io.harness.delegate.NgTaskSetupAbstractionsOrBuilder>
    getSetupAbstractionsFieldBuilder() {
      if (setupAbstractionsBuilder_ == null) {
        setupAbstractionsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<io.harness.delegate.NgTaskSetupAbstractions,
                io.harness.delegate.NgTaskSetupAbstractions.Builder,
                io.harness.delegate.NgTaskSetupAbstractionsOrBuilder>(
                getSetupAbstractions(), getParentForChildren(), isClean());
        setupAbstractions_ = null;
      }
      return setupAbstractionsBuilder_;
    }

    private io.harness.delegate.NgTaskDetails details_;
    private com.google.protobuf.SingleFieldBuilderV3<io.harness.delegate.NgTaskDetails,
        io.harness.delegate.NgTaskDetails.Builder, io.harness.delegate.NgTaskDetailsOrBuilder> detailsBuilder_;
    /**
     * <code>.io.harness.delegate.NgTaskDetails details = 4[json_name = "details"];</code>
     * @return Whether the details field is set.
     */
    public boolean hasDetails() {
      return detailsBuilder_ != null || details_ != null;
    }
    /**
     * <code>.io.harness.delegate.NgTaskDetails details = 4[json_name = "details"];</code>
     * @return The details.
     */
    public io.harness.delegate.NgTaskDetails getDetails() {
      if (detailsBuilder_ == null) {
        return details_ == null ? io.harness.delegate.NgTaskDetails.getDefaultInstance() : details_;
      } else {
        return detailsBuilder_.getMessage();
      }
    }
    /**
     * <code>.io.harness.delegate.NgTaskDetails details = 4[json_name = "details"];</code>
     */
    public Builder setDetails(io.harness.delegate.NgTaskDetails value) {
      if (detailsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        details_ = value;
        onChanged();
      } else {
        detailsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.io.harness.delegate.NgTaskDetails details = 4[json_name = "details"];</code>
     */
    public Builder setDetails(io.harness.delegate.NgTaskDetails.Builder builderForValue) {
      if (detailsBuilder_ == null) {
        details_ = builderForValue.build();
        onChanged();
      } else {
        detailsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.io.harness.delegate.NgTaskDetails details = 4[json_name = "details"];</code>
     */
    public Builder mergeDetails(io.harness.delegate.NgTaskDetails value) {
      if (detailsBuilder_ == null) {
        if (details_ != null) {
          details_ = io.harness.delegate.NgTaskDetails.newBuilder(details_).mergeFrom(value).buildPartial();
        } else {
          details_ = value;
        }
        onChanged();
      } else {
        detailsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.io.harness.delegate.NgTaskDetails details = 4[json_name = "details"];</code>
     */
    public Builder clearDetails() {
      if (detailsBuilder_ == null) {
        details_ = null;
        onChanged();
      } else {
        details_ = null;
        detailsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.io.harness.delegate.NgTaskDetails details = 4[json_name = "details"];</code>
     */
    public io.harness.delegate.NgTaskDetails.Builder getDetailsBuilder() {
      onChanged();
      return getDetailsFieldBuilder().getBuilder();
    }
    /**
     * <code>.io.harness.delegate.NgTaskDetails details = 4[json_name = "details"];</code>
     */
    public io.harness.delegate.NgTaskDetailsOrBuilder getDetailsOrBuilder() {
      if (detailsBuilder_ != null) {
        return detailsBuilder_.getMessageOrBuilder();
      } else {
        return details_ == null ? io.harness.delegate.NgTaskDetails.getDefaultInstance() : details_;
      }
    }
    /**
     * <code>.io.harness.delegate.NgTaskDetails details = 4[json_name = "details"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<io.harness.delegate.NgTaskDetails,
        io.harness.delegate.NgTaskDetails.Builder, io.harness.delegate.NgTaskDetailsOrBuilder>
    getDetailsFieldBuilder() {
      if (detailsBuilder_ == null) {
        detailsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<io.harness.delegate.NgTaskDetails,
            io.harness.delegate.NgTaskDetails.Builder, io.harness.delegate.NgTaskDetailsOrBuilder>(
            getDetails(), getParentForChildren(), isClean());
        details_ = null;
      }
      return detailsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:io.harness.delegate.SendTaskRequest)
  }

  // @@protoc_insertion_point(class_scope:io.harness.delegate.SendTaskRequest)
  private static final io.harness.delegate.SendTaskRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.harness.delegate.SendTaskRequest();
  }

  public static io.harness.delegate.SendTaskRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SendTaskRequest> PARSER =
      new com.google.protobuf.AbstractParser<SendTaskRequest>() {
        @java.lang.Override
        public SendTaskRequest parsePartialFrom(
            com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SendTaskRequest(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<SendTaskRequest> parser() {
    return PARSER;
  }

  @java.
  lang.Override
  public com.google.protobuf.Parser<SendTaskRequest> getParserForType() {
    return PARSER;
  }

  @java.
  lang.Override
  public io.harness.delegate.SendTaskRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
