#used to create image jenkins-slave-portal-open-8u242:kubectl_with_gcc

FROM base_jdk

USER root

COPY mongodb-org-4.4.repo /etc/yum.repos.d/

RUN yum install -y git-core hostname unzip wget mongodb-org-shell
RUN curl -o gsutil.tar.gz https://storage.googleapis.com/pub/gsutil.tar.gz
RUN tar -xzf gsutil.tar.gz -C /opt

ENV LC_ALL en_US.UTF-8

ARG user=jenkins
ARG group=jenkins
ARG uid=10000
ARG gid=10000

ENV HOME /home/${user}
RUN groupadd -g ${gid} ${group}
RUN useradd -c "Jenkins user" -d $HOME -u ${uid} -g ${gid} -m ${user}
LABEL Description="This is a base image, which provides the Jenkins agent executable (slave.jar)" Vendor="Jenkins project" Version="3.20"

ARG VERSION=3.20
ARG AGENT_WORKDIR=/home/${user}/agent

RUN curl --create-dirs -sSLo /usr/share/jenkins/slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${VERSION}/remoting-${VERSION}.jar \
  && chmod 755 /usr/share/jenkins \
  && chmod 644 /usr/share/jenkins/slave.jar

USER ${user}
ENV AGENT_WORKDIR=${AGENT_WORKDIR}
RUN mkdir /home/${user}/.jenkins && mkdir -p ${AGENT_WORKDIR}

VOLUME /home/${user}/.jenkins
VOLUME ${AGENT_WORKDIR}
WORKDIR /home/${user}

COPY jenkins-slave /usr/local/bin/jenkins-slave

USER root
ENV PATH ${PATH}:/opt/gsutil

RUN curl -O https://releases.hashicorp.com/terraform/0.12.11/terraform_0.12.11_linux_amd64.zip \
    && yum install -y unzip \
    && unzip terraform_0.12.11_linux_amd64.zip \
    && chmod 755 terraform \
    && mv terraform /usr/local/bin

#Install terragrunt BT-310
ARG TERRAGRUNT_VERSION=v0.28.18
ADD https://github.com/gruntwork-io/terragrunt/releases/download/${TERRAGRUNT_VERSION}/terragrunt_linux_amd64 /usr/local/bin/terragrunt
RUN chmod +x /usr/local/bin/terragrunt

RUN wget -O /etc/yum.repos.d/cloudfoundry-cli.repo https://packages.cloudfoundry.org/fedora/cloudfoundry-cli.repo \
    && yum install -y cf-cli

#RUN curl -o /etc/yum.repos.d/bazel.repo https://copr.fedorainfracloud.org/coprs/vbatts/bazel/repo/epel-7/vbatts-bazel-epel-7.repo
#RUN yum -y install bazel3

RUN curl -Lo /usr/local/bin/bazel https://github.com/bazelbuild/bazelisk/releases/download/v1.7.4/bazelisk-linux-amd64 && \
    chown root:root /usr/local/bin/bazel && \
    chmod 0755 /usr/local/bin/bazel
RUN bazel version

ARG KUBECTL_VERSION=v1.13.2
ARG PLATFORM=linux
RUN curl  -s -L -o kubectl https://app.harness.io/storage/harness-download/kubernetes-release/release/${KUBECTL_VERSION}/bin/${PLATFORM}/amd64/kubectl \
    && chmod +x kubectl && mv kubectl /usr/bin

#Install helm BT-310
ARG HELM_VERSION=2.17.0
RUN wget -q https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz -O - | tar -xzO linux-amd64/helm > /usr/local/bin/helm \
    && chmod +x /usr/local/bin/helm

ENV JAVA_HOME /etc/alternatives/java_sdk_1.8.0_openjdk

RUN yum group install -y "Development Tools" \
    && yum install -y centos-release-scl \
    && yum install -y devtoolset-7-gcc* \
    && yum install -y zlib-devel \
    && yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \
    && yum install -y jq \
    && scl enable devtoolset-7 bash

ENV CC /usr/bin/gcc
ENV CXX /usr/bin/g++

RUN wget https://archive.apache.org/dist/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz \
    && tar -xf apache-maven-3.6.1-bin.tar.gz && mv apache-maven-3.6.1/ /usr/local/src/apache-maven \
    && echo "export M2_HOME=/usr/local/src/apache-maven && export PATH=\${M2_HOME}/bin:\${PATH}" > /etc/profile.d/maven.sh \
    && chmod +x /etc/profile.d/maven.sh \
    && source /etc/profile.d/maven.sh \
    && rm apache-maven-3.6.1-bin.tar.gz \
    && cd / \
    && rm -rf /tmp/*

RUN cd /tmp \
    && git clone https://github.com/bazelbuild/buildtools.git \
    && cd buildtools \
    && bazel build //... \
    && cp /tmp/buildtools/bazel-bin/unused_deps/unused_deps_/unused_deps /usr/bin/unused_deps \
    && unused_deps --version \
    && cd / \
    && rm -rf /tmp/*

RUN curl -fsSL https://get.docker.com/ | sh

ENTRYPOINT ["jenkins-slave"]
