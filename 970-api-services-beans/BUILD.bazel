load("@rules_java//java:defs.bzl", "java_binary")
load("//:tools/bazel/GenTestRules.bzl", "run_tests")
load("//tools/checkstyle:rules.bzl", "checkstyle")
load("//:macros.bzl", "sources")
load("//:macros.bzl", "sonarqube_test")
load("//tools/bazel/pmd:defs.bzl", "pmd")

sources()

java_library(
    name = "module",
    srcs = glob(["src/main/**/*.java"]),
    visibility = ["//visibility:public"],
    deps = [
        "//:lombok",
        "//980-commons:module",
        "@jira_client//jar",
        "@maven//:com_amazonaws_aws_java_sdk_ec2",
        "@maven//:com_esotericsoftware_yamlbeans_yamlbeans",
        "@maven//:com_google_apis_google_api_services_monitoring",
        "@maven//:com_sumologic_api_client_sumo_java_client",
        "@maven//:io_fabric8_kubernetes_client",
        "@maven//:io_kubernetes_client_java",
        "@maven//:org_codehaus_jackson_jackson_core_asl",
        "@maven//:org_json_json",
    ],
)

java_library(
    name = "tests",
    srcs = glob(["src/test/**/*.java"]),
    resources = [
        "//970-api-services-beans/src/test/resources:resource",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":module",
        "//:lombok",
        "//990-commons-test:module",
    ],
)

run_tests()

checkstyle()

sonarqube_test(
    name = "sq_mycomponent",
    srcs = ["sources"],
    targets = [
        ":module",
    ],
)

pmd()
