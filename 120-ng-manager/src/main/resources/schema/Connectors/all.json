{
  "type": "object",
  "properties": {
    "connector": {
      "$ref": "#/definitions/ConnectorInfoDTO"
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "AppDynamicsConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "accountId",
            "accountname",
            "controllerUrl",
            "passwordRef",
            "username"
          ],
          "properties": {
            "accountId": {
              "type": "string"
            },
            "accountname": {
              "type": "string"
            },
            "controllerUrl": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ArtifactoryAuthCredentials": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ArtifactoryAuthentication": {
      "type": "object",
      "required": [
        "spec",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "UsernamePassword"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "UsernamePassword"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ArtifactoryUsernamePasswordAuth"
              }
            }
          }
        }
      ]
    },
    "ArtifactoryConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "artifactoryServerUrl"
          ],
          "properties": {
            "artifactoryServerUrl": {
              "type": "string"
            },
            "auth": {
              "$ref": "#/definitions/ArtifactoryAuthentication"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ArtifactoryUsernamePasswordAuth": {
      "allOf": [
        {
          "$ref": "#/definitions/ArtifactoryAuthCredentials"
        },
        {
          "type": "object",
          "required": [
            "passwordRef",
            "username"
          ],
          "properties": {
            "passwordRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AwsConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "credential"
          ],
          "properties": {
            "credential": {
              "$ref": "#/definitions/AwsCredential"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AwsCredential": {
      "type": "object",
      "required": [
        "spec",
        "type"
      ],
      "properties": {
        "crossAccountAccess": {
          "$ref": "#/definitions/CrossAccountAccess"
        },
        "type": {
          "type": "string",
          "enum": [
            "InheritFromDelegate",
            "ManualConfig"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "InheritFromDelegate"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/AwsInheritFromDelegateSpec"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "ManualConfig"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/AwsManualConfigSpec"
              }
            }
          }
        }
      ]
    },
    "AwsCredentialSpec": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AwsInheritFromDelegateSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsCredentialSpec"
        },
        {
          "type": "object",
          "required": [
            "delegateSelector"
          ],
          "properties": {
            "delegateSelector": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AwsManualConfigSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsCredentialSpec"
        },
        {
          "type": "object",
          "required": [
            "accessKey",
            "secretKeyRef"
          ],
          "properties": {
            "accessKey": {
              "type": "string"
            },
            "secretKeyRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Connector": {
      "type": "object",
      "properties": {
        "connector": {
          "$ref": "#/definitions/ConnectorInfoDTO"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ConnectorConfigDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ConnectorInfoDTO": {
      "type": "object",
      "required": [
        "identifier",
        "name",
        "spec",
        "type"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "K8sCluster",
            "Git",
            "Splunk",
            "AppDynamics",
            "Vault",
            "DockerRegistry",
            "Local",
            "AwsKms",
            "GcpKms",
            "Awssecretsmanager",
            "Azurevault",
            "Cyberark",
            "CustomSecretManager",
            "Gcp",
            "Aws",
            "Artifactory",
            "Jira",
            "Nexus"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "Nexus"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/NexusConnector"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Jira"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/JiraConnector"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Splunk"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/SplunkConnectorDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "K8sCluster"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/KubernetesClusterConfigDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Artifactory"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ArtifactoryConnector"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "AppDynamics"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/AppDynamicsConnectorDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Gcp"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GcpConnector"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Vault"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/VaultConnectorDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Git"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GitConfigDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "DockerRegistry"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/DockerConnectorDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Aws"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/AwsConnector"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "GcpKms"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GcpKmsConnectorDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Local"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/LocalConnectorDTO"
              }
            }
          }
        }
      ]
    },
    "CrossAccountAccess": {
      "type": "object",
      "required": [
        "crossAccountRoleArn"
      ],
      "properties": {
        "crossAccountRoleArn": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CustomCommitAttributes": {
      "type": "object",
      "properties": {
        "authorEmail": {
          "type": "string"
        },
        "authorName": {
          "type": "string"
        },
        "commitMessage": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "DockerAuthCredentialsDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "DockerAuthenticationDTO": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "UsernamePassword",
            "Anonymous"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "UsernamePassword"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/DockerUserNamePasswordDTO"
              }
            }
          }
        }
      ]
    },
    "DockerConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "dockerRegistryUrl",
            "providerType"
          ],
          "properties": {
            "auth": {
              "$ref": "#/definitions/DockerAuthenticationDTO"
            },
            "dockerRegistryUrl": {
              "type": "string"
            },
            "providerType": {
              "type": "string",
              "enum": [
                "DockerHub",
                "Harbor",
                "Quay",
                "Other"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "DockerUserNamePasswordDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/DockerAuthCredentialsDTO"
        },
        {
          "type": "object",
          "required": [
            "passwordRef",
            "username"
          ],
          "properties": {
            "passwordRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GcpConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "properties": {
            "credential": {
              "$ref": "#/definitions/GcpConnectorCredential"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GcpConnectorCredential": {
      "type": "object",
      "required": [
        "spec",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "InheritFromDelegate",
            "ManualConfig"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "InheritFromDelegate"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GcpDelegateDetails"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "ManualConfig"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GcpManualDetails"
              }
            }
          }
        }
      ]
    },
    "GcpCredentialSpec": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GcpDelegateDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/GcpCredentialSpec"
        },
        {
          "type": "object",
          "properties": {
            "delegateSelector": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GcpKmsConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "properties": {
            "credentials": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "default": {
              "type": "boolean"
            },
            "keyName": {
              "type": "string"
            },
            "keyRing": {
              "type": "string"
            },
            "projectId": {
              "type": "string"
            },
            "region": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GcpManualDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/GcpCredentialSpec"
        },
        {
          "type": "object",
          "required": [
            "secretKeyRef"
          ],
          "properties": {
            "secretKeyRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitAuthenticationDTO": {
      "type": "object",
      "discriminator": "type",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitConfigDTO": {
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "Ssh"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GitSSHAuthenticationDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Http"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GitHTTPAuthenticationDTO"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitHTTPAuthenticationDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/GitAuthenticationDTO"
        },
        {
          "type": "object",
          "required": [
            "passwordRef",
            "username"
          ],
          "properties": {
            "passwordRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitSSHAuthenticationDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/GitAuthenticationDTO"
        },
        {
          "type": "object",
          "properties": {
            "sshKeyReference": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitSyncConfig": {
      "type": "object",
      "properties": {
        "customCommitAttributes": {
          "$ref": "#/definitions/CustomCommitAttributes"
        },
        "enabled": {
          "type": "boolean"
        },
        "syncEnabled": {
          "type": "boolean"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "JiraConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "jiraUrl",
            "passwordRef"
          ],
          "properties": {
            "jiraUrl": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KubernetesAuthCredentialDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KubernetesAuthDTO": {
      "type": "object",
      "required": [
        "spec",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "UsernamePassword",
            "ClientKeyCert",
            "ServiceAccount",
            "OpenIdConnect"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "UsernamePassword"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/KubernetesUserNamePasswordDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "ClientKeyCert"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/KubernetesClientKeyCertDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "OpenIdConnect"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/KubernetesOpenIdConnectDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "ServiceAccount"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/KubernetesServiceAccountDTO"
              }
            }
          }
        }
      ]
    },
    "KubernetesClientKeyCertDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": [
            "clientCertRef",
            "clientKeyPassphraseRef",
            "clientKeyRef"
          ],
          "properties": {
            "caCertRef": {
              "type": "string"
            },
            "clientCertRef": {
              "type": "string"
            },
            "clientKeyAlgo": {
              "type": "string"
            },
            "clientKeyPassphraseRef": {
              "type": "string"
            },
            "clientKeyRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KubernetesClusterConfigDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "properties": {
            "credential": {
              "$ref": "#/definitions/KubernetesCredentialDTO"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KubernetesClusterDetailsDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesCredentialSpecDTO"
        },
        {
          "type": "object",
          "required": [
            "auth",
            "masterUrl"
          ],
          "properties": {
            "auth": {
              "$ref": "#/definitions/KubernetesAuthDTO"
            },
            "masterUrl": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KubernetesCredentialDTO": {
      "type": "object",
      "required": [
        "spec",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "InheritFromDelegate",
            "ManualConfig"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "InheritFromDelegate"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/KubernetesDelegateDetailsDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "ManualConfig"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/KubernetesClusterDetailsDTO"
              }
            }
          }
        }
      ]
    },
    "KubernetesCredentialSpecDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KubernetesDelegateDetailsDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesCredentialSpecDTO"
        },
        {
          "type": "object",
          "required": [
            "delegateName"
          ],
          "properties": {
            "delegateName": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KubernetesOpenIdConnectDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": [
            "oidcClientIdRef",
            "oidcIssuerUrl",
            "oidcPasswordRef",
            "oidcUsername"
          ],
          "properties": {
            "oidcClientIdRef": {
              "type": "string"
            },
            "oidcIssuerUrl": {
              "type": "string"
            },
            "oidcPasswordRef": {
              "type": "string"
            },
            "oidcScopes": {
              "type": "string"
            },
            "oidcSecretRef": {
              "type": "string"
            },
            "oidcUsername": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KubernetesServiceAccountDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": [
            "serviceAccountTokenRef"
          ],
          "properties": {
            "serviceAccountTokenRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KubernetesUserNamePasswordDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": [
            "passwordRef"
          ],
          "properties": {
            "passwordRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "LocalConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "properties": {
            "default": {
              "type": "boolean"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "NexusAuthCredentials": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "NexusAuthentication": {
      "type": "object",
      "required": [
        "spec",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "UsernamePassword"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "UsernamePassword"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/NexusUsernamePasswordAuth"
              }
            }
          }
        }
      ]
    },
    "NexusConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "nexusServerUrl",
            "version"
          ],
          "properties": {
            "auth": {
              "$ref": "#/definitions/NexusAuthentication"
            },
            "nexusServerUrl": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "NexusUsernamePasswordAuth": {
      "allOf": [
        {
          "$ref": "#/definitions/NexusAuthCredentials"
        },
        {
          "type": "object",
          "required": [
            "passwordRef",
            "username"
          ],
          "properties": {
            "passwordRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SplunkConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "accountId",
            "passwordRef"
          ],
          "properties": {
            "accountId": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            },
            "splunkUrl": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "VaultConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "properties": {
            "appRoleId": {
              "type": "string"
            },
            "authToken": {
              "type": "string"
            },
            "basePath": {
              "type": "string"
            },
            "default": {
              "type": "boolean"
            },
            "readOnly": {
              "type": "boolean"
            },
            "renewIntervalHours": {
              "type": "integer",
              "format": "int32"
            },
            "secretEngineName": {
              "type": "string"
            },
            "secretEngineVersion": {
              "type": "integer",
              "format": "int32"
            },
            "secretId": {
              "type": "string"
            },
            "vaultUrl": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  }
}