Var index = 0
Var tempList = []
Var one = 1
Var lengthOfItems = Env:queries.length()
Var requests = []
Var emptySpace = ""
Var queryConcat = concat(" WHERE appId = ", Env:appId, " SINCE ", Env:startTimeMillis, " UNTIL ", Env:endTimeMillis," TIMESERIES FACET transactionName")
Var returnList = []
while Var:index !=  Var:lengthOfItems {
  Var query = Env:queries[Var:index]
  Var jsonPath = Env:jsonPaths[Var:index]
  Var metricName = Env:metricNames[Var:index]
  Var fullQuery = concat(Env:baseUrl, "query?nrql=", Var:query, Var:queryConcat)
  print Var:fullQuery
  Request metricRequest = new Request(url=Var:fullQuery, header=Env:commonHeaders)
  Var resp = sync-call(url=Var:fullQuery, header=Env:commonHeaders)
  Var facets = extract(Var:resp, $.facets)
  foreach metricObject in Var:facets {
    Var txnName = extract(Var:metricObject, $.name.[0])
    Var timeseriesArr = extract(Var:metricObject, $.timeSeries)
    foreach metricData in Var:timeseriesArr {
        Var metricVal = extract(Var:metricData, Var:jsonPath)
        Var timestamp = extract(Var:metricData, $.endTimeSeconds)
        Var nullVal = null
        if Var:nullVal != Var:metricVal {
            Var tsRecord = new TimeseriesRecord(txnName=Var:txnName, metricName=Var:metricName, metricValue=Var:metricVal, timestamp=Var:timestamp)
            Var:returnList.append(Var:tsRecord)
        }
    }
  }
  index = Var:index + Var:one
}





return Var:returnList