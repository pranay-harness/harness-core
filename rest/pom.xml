<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>software.wings</groupId>
    <artifactId>rest</artifactId>

    <parent>
        <groupId>software.wings</groupId>
        <artifactId>portal</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>software.wings</groupId>
            <artifactId>api</artifactId>
            <version>${project.parent.version}</version>
        </dependency>

        <dependency>
            <groupId>software.wings</groupId>
            <artifactId>serialization-utils</artifactId>
            <version>${project.parent.version}</version>
        </dependency>

        <dependency>
            <groupId>software.wings</groupId>
            <artifactId>rest-utils</artifactId>
            <version>${project.parent.version}</version>
        </dependency>

        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-core</artifactId>
        </dependency>

        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-auth</artifactId>
        </dependency>

        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-assets</artifactId>
        </dependency>

        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-views-freemarker</artifactId>
        </dependency>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-views-mustache</artifactId>
        </dependency>

        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-metrics-graphite</artifactId>
        </dependency>

        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-http2</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mortbay.jetty.alpn</groupId>
            <artifactId>alpn-boot</artifactId>
        </dependency>

        <dependency>
            <groupId>com.newrelic.agent.java</groupId>
            <artifactId>newrelic-agent</artifactId>
        </dependency>

        <dependency>
            <groupId>org.atmosphere</groupId>
            <artifactId>atmosphere-runtime</artifactId>
        </dependency>

        <dependency>
            <groupId>org.atmosphere</groupId>
            <artifactId>atmosphere-hazelcast</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty.websocket</groupId>
            <artifactId>websocket-server</artifactId>
        </dependency>

        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm-commons</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mongodb.morphia</groupId>
            <artifactId>morphia</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mongodb.morphia</groupId>
            <artifactId>morphia-logging-slf4j</artifactId>
        </dependency>

        <dependency>
            <groupId>ru.vyarus</groupId>
            <artifactId>guice-validator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
        </dependency>

        <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jsch</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-assistedinject</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-multibindings</artifactId>
        </dependency>

        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
        </dependency>

        <dependency>
            <groupId>com.offbytwo.jenkins</groupId>
            <artifactId>jenkins-client</artifactId>
        </dependency>

        <dependency>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mindrot</groupId>
            <artifactId>jbcrypt</artifactId>
        </dependency>

        <dependency>
            <groupId>ro.fortsoft.pf4j</groupId>
            <artifactId>pf4j</artifactId>
        </dependency>

        <dependency>
            <groupId>ro.fortsoft.pf4j</groupId>
            <artifactId>pf4j-update</artifactId>
        </dependency>

        <dependency>
            <groupId>com.deftlabs</groupId>
            <artifactId>mongo-java-distributed-lock</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>joor</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.ifesdjeen</groupId>
            <artifactId>hashed-wheel-timer-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-jexl3</artifactId>
        </dependency>


        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-email</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
        </dependency>

        <dependency>
            <groupId>com.smoketurner</groupId>
            <artifactId>dropwizard-swagger</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.reinert</groupId>
            <artifactId>jjschema</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>fluent-hc</artifactId>
        </dependency>

        <dependency>
            <groupId>io.dropwizard-bundles</groupId>
            <artifactId>dropwizard-configurable-assets-bundle</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.dirkraft.dropwizard-file-assets</groupId>
            <artifactId>dropwizard-file-assets</artifactId>
        </dependency>

        <dependency>
            <groupId>com.palantir.versioninfo</groupId>
            <artifactId>dropwizard-version-info</artifactId>
        </dependency>

        <dependency>
            <groupId>de.danielbechler</groupId>
            <artifactId>java-object-diff</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jsr107.ri</groupId>
            <artifactId>cache-annotations-ri-guice</artifactId>
        </dependency>

        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast</artifactId>
        </dependency>

        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-elasticloadbalancing</artifactId>
        </dependency>

        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-ec2</artifactId>
        </dependency>

        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-cloudwatch</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.sshd</groupId>
            <artifactId>sshd-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
        </dependency>

        <dependency>
            <groupId>com.novemberain</groupId>
            <artifactId>quartz-mongodb</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.mongodb</groupId>
                    <artifactId>mongo-java-driver</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>net.redhogs.cronparser</groupId>
            <artifactId>cron-parser</artifactId>
        </dependency>

        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>retrofit</artifactId>
        </dependency>

        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>converter-jackson</artifactId>
        </dependency>

        <dependency>
            <groupId>com.nimbusds</groupId>
            <artifactId>nimbus-jose-jwt</artifactId>
        </dependency>

        <dependency>
            <groupId>com.papertrailapp</groupId>
            <artifactId>logback-syslog4j</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.zafarkhaja</groupId>
            <artifactId>java-semver</artifactId>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-testing</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>javax.el</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>de.bwaldvogel</groupId>
            <artifactId>mongo-java-server</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>pl.pragmatists</groupId>
            <artifactId>JUnitParams</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-inmemory</artifactId>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
        </dependency>

        <dependency>
            <groupId>net.javacrumbs.json-unit</groupId>
            <artifactId>json-unit-fluent</artifactId>
        </dependency>

        <dependency>
            <groupId>de.flapdoodle.embed</groupId>
            <artifactId>de.flapdoodle.embed.mongo</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
            <classifier>standalone</classifier>
        </dependency>

        <dependency>
            <groupId>com.openpojo</groupId>
            <artifactId>openpojo</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava-testlib</artifactId>
        </dependency>

        <dependency>
            <groupId>com.icegreen</groupId>
            <artifactId>greenmail</artifactId>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>

        <dependency>
            <groupId>com.shazam</groupId>
            <artifactId>shazamcrest</artifactId>
        </dependency>

        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk16</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.allbegray</groupId>
            <artifactId>slack-api</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>sg.enixsoft</groupId>
                <artifactId>capsule-maven-plugin</artifactId>
                <version>1.3.0</version>
                <configuration>
                    <appClass>software.wings.app.WingsApplication</appClass>
                    <type>fat</type>
                    <manifest>
                        <entry>
                            <key>Boot-Class-Path-P</key>
                            <value>alpn-boot-${alpnboot.version}.jar</value>
                        </entry>
                        <entry>
                            <key>Min-Java-Version</key>
                            <value>1.8.0</value>
                        </entry>
                        <entry>
                            <key>Min-Update-Version</key>
                            <value>8=91</value>
                        </entry>
                        <entry>
                            <key>Java-Agents</key>
                            <value>newrelic-agent-${newrelic.version}.jar</value>
                        </entry>
                        <entry>
                            <key>Environment-Variables</key>
                            <value>NEW_RELIC_LICENSE_KEY=b121ea34124754a7952717207b122be017f2ae76</value>
                        </entry>
                        <entry>
                            <key>Args</key>
                            <value>server $*</value>
                        </entry>
                    </manifest>
                    <fileSets>
                        <fileSet>
                            <directory>${project.basedir}</directory>
                            <includes>newrelic.yml</includes>
                        </fileSet>
                    </fileSets>
                    <execPluginConfig>root</execPluginConfig>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>generate</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>create-metadata</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <attach>true</attach>
                    <!--make it available for jar/war classpath resource -->
                    <shortRevisionLength>7</shortRevisionLength>
                    <properties>
                        <productVersion>${project.version}-${buildNumber}-${timestamp}</productVersion>
                    </properties>
                    <addOutputDirectoryToResources>true</addOutputDirectoryToResources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>software/wings/service/intfc/*.class</exclude>
                        <exclude>software/wings/beans/*.class</exclude>
                        <exclude>software/wings/waitnotify/NotifyResponse.class</exclude>
                        <exclude>software/wings/waitnotify/WaitInstance.class</exclude>
                        <exclude>software/wings/waitnotify/WaitQueue.class</exclude>
                        <exclude>software/wings/waitnotify/WaitInstanceError.class</exclude>
                        <exclude>software/wings/sm/State.class</exclude>
                        <exclude>software/wings/sm/Transition.class</exclude>
                        <exclude>software/wings/sm/StateExecutionData.class</exclude>
                        <exclude>software/wings/sm/StateEvent.class</exclude>
                        <exclude>software/wings/sm/*$Builder.class</exclude>
                        <exclude>software/wings/dl/MongoConfig.class</exclude>
                        <exclude>software/wings/dl/DatastoreSet.class</exclude>
                        <exclude>software/wings/app/WingsModule.class</exclude>
                        <exclude>software/wings/app/WingsApplication.class</exclude>
                        <exclude>software/wings/app/MainConfiguration.class</exclude>
                        <exclude>software/wings/utils/RsyslogAppenderFactory.class</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule implementation="org.jacoco.maven.RuleConfiguration">
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.62</minimum>
                                        </limit>
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.47</minimum>
                                        </limit>
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.50</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <inherited>false</inherited>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>test</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target name="deploy" description="deploy to a server via ssh">

                                <echo message="Create staging directory..."/>
                                <sshexec trust="true" failonerror="false"
                                         host="${deployHost}"
                                         username="${deployUsername}"
                                         keyfile="${user.home}/.ssh/id_${deployHost}"
                                         command="mkdir -p $HOME/staging"
                                         timeout="120000"/>

                                <echo message="copy jar"/>
                                <scp trust="true" failonerror="true" verbose="off" sftp="true"
                                     host="${deployHost}"
                                     username="${deployUsername}"
                                     keyfile="${user.home}/.ssh/id_${deployHost}"
                                     file="target/rest-0.0.1-SNAPSHOT-capsule.jar"
                                     todir="${deployUsername}@${deployHost}:/home/ubuntu/staging/"/>

                                <echo message="copy config.yml"/>
                                <scp trust="true" failonerror="true" verbose="off" sftp="true"
                                     host="${deployHost}"
                                     username="${deployUsername}"
                                     keyfile="${user.home}/.ssh/id_${deployHost}"
                                     file="config.yml"
                                     todir="${deployUsername}@${deployHost}:/home/ubuntu/staging/"/>

                                <echo message="copy deployment script"/>
                                <scp trust="true" failonerror="true" verbose="off" sftp="true"
                                     host="${deployHost}"
                                     username="${deployUsername}"
                                     keyfile="${user.home}/.ssh/id_${deployHost}"
                                     file="deployManager.sh"
                                     todir="${deployUsername}@${deployHost}:"/>

                                <echo message="run deploy"/>
                                <sshexec trust="true" failonerror="true"
                                         host="${deployHost}"
                                         username="${deployUsername}"
                                         keyfile="${user.home}/.ssh/id_${deployHost}"
                                         command="chmod +x $HOME/deployManager.sh; $HOME/deployManager.sh ${portalHost} '${app.name}'"
                                         timeout="120000"/>

                                <taskdef name="scp" classname="org.apache.tools.ant.taskdefs.optional.ssh.Scp">
                                    <classpath refid="maven.plugin.classpath"/>
                                </taskdef>
                            </target>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>ant</groupId>
                        <artifactId>ant-commons-net</artifactId>
                        <version>1.6.5</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-jsch</artifactId>
                        <version>1.9.1</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
                <configuration>
                    <aggregate>true</aggregate>
                    <failOnError>false</failOnError>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.6.201602180812</version>
                <configuration>
                    <excludes>
                        <exclude>software/wings/service/intfc/*.class</exclude>
                        <exclude>software/wings/beans/*.class</exclude>
                        <exclude>software/wings/waitnotify/NotifyResponse.class</exclude>
                        <exclude>software/wings/waitnotify/WaitInstance.class</exclude>
                        <exclude>software/wings/waitnotify/WaitQueue.class</exclude>
                        <exclude>software/wings/waitnotify/WaitInstanceError.class</exclude>
                        <exclude>software/wings/sm/State.class</exclude>
                        <exclude>software/wings/sm/Transition.class</exclude>
                        <exclude>software/wings/sm/StateExecutionData.class</exclude>
                        <exclude>software/wings/sm/StateEvent.class</exclude>
                        <exclude>software/wings/sm/*$Builder.class</exclude>
                        <exclude>software/wings/dl/MongoConfig.class</exclude>
                        <exclude>software/wings/dl/DatastoreSet.class</exclude>
                        <exclude>software/wings/app/WingsModule.class</exclude>
                        <exclude>software/wings/app/WingsApplication.class</exclude>
                        <exclude>software/wings/app/MainConfiguration.class</exclude>
                        <exclude>software/wings/utils/RsyslogAppenderFactory.class</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.9</version>

                <configuration>
                    <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>build-ui</id>
            <activation>
                <property>
                    <name>buildUI</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>exec-maven-plugin</artifactId>
                        <groupId>org.codehaus.mojo</groupId>
                        <executions>
                            <execution>
                                <id>init submodules</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>git</executable>
                                    <arguments>
                                        <argument>submodule</argument>
                                        <argument>init</argument>
                                    </arguments>
                                </configuration>
                                <phase>generate-resources</phase>
                            </execution>
                            <execution>
                                <id>fetch submodule</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>git</executable>
                                    <arguments>
                                        <argument>submodule</argument>
                                        <argument>update</argument>
                                        <argument>--remote</argument>
                                    </arguments>
                                </configuration>
                                <phase>generate-resources</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>1.2</version>
                        <configuration>
                            <workingDirectory>wingsui</workingDirectory>
                            <nodeVersion>v6.2.2</nodeVersion>
                            <installDirectory>${user.home}/.node</installDirectory>
                            <yarnVersion>v0.16.1</yarnVersion>
                        </configuration>
                        <executions>
                            <execution>
                                <!-- optional: you don't really need execution ids, but it looks nice in your build log. -->
                                <id>install node and yarn</id>
                                <goals>
                                    <goal>install-node-and-yarn</goal>
                                </goals>
                                <!-- optional: default phase is "generate-resources" -->
                                <phase>generate-resources</phase>
                            </execution>
                            <execution>
                                <id>yarn install</id>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>
                                <configuration>
                                    <!-- optional: The default argument is actually
                                    "install", so unless you need to run some other yarn command,
                                    you can remove this whole <configuration> section.
                                    -->
                                    <arguments>install</arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>yarn run build</id>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>
                                <configuration>
                                    <arguments>run build</arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>yarn clean</id>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>
                                <configuration>
                                    <arguments>run clean</arguments>
                                </configuration>
                                <phase>clean</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>deploy-int</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>int</value>
                </property>
            </activation>
            <properties>
                <deployHost>ec2-50-16-106-255.compute-1.amazonaws.com</deployHost>
                <deployUsername>ubuntu</deployUsername>
                <checkstyle.skip>true</checkstyle.skip>
                <skipTests>true</skipTests>
                <jacoco.skip>true</jacoco.skip>
                <findbugs.skip>true</findbugs.skip>
                <embedmongo.skip>true</embedmongo.skip>
                <portalHost>ci.wings.software</portalHost>
                <app.name>CI Server</app.name>
            </properties>
        </profile>
        <profile>
            <id>deploy-demo</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>demo</value>
                </property>
            </activation>
            <properties>
                <deployHost>ec2-52-45-103-102.compute-1.amazonaws.com</deployHost>
                <deployUsername>ubuntu</deployUsername>
                <checkstyle.skip>true</checkstyle.skip>
                <skipTests>true</skipTests>
                <jacoco.skip>true</jacoco.skip>
                <findbugs.skip>true</findbugs.skip>
                <embedmongo.skip>true</embedmongo.skip>
                <portalHost>demo.wings.software</portalHost>
                <app.name>Demo Server</app.name>
            </properties>
        </profile>
        <profile>
            <id>migration</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>groovy-maven-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>org.mongeez</groupId>
                                <artifactId>mongeez</artifactId>
                                <version>0.9.6</version>
                            </dependency>
                            <dependency>
                                <groupId>org.codehaus.groovy</groupId>
                                <artifactId>groovy-all</artifactId>
                                <!-- any version of Groovy \>= 1.5.0 should work here -->
                                <version>2.4.7</version>
                                <scope>runtime</scope>
                            </dependency>
                            <dependency>
                                <groupId>org.mongodb</groupId>
                                <artifactId>mongo-java-driver</artifactId>
                                <version>3.2.0</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <source>
                                import com.mongodb.Mongo;
                                import org.mongeez.Mongeez;
                                import java.io.File;
                                import org.springframework.core.io.FileSystemResource;

                                Mongeez mongeez = new Mongeez();
                                mongeez.setFile(new FileSystemResource(new File("src/main/resources/migrations/mongeez.xml")));
                                mongeez.setMongo(new Mongo(System.getProperty("mongoHost", "localhost"), Integer.parseInt(System.getProperty("mongoPort",
                                "27017"))));
                                mongeez.setDbName("wings");
                                mongeez.process();
                            </source>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
