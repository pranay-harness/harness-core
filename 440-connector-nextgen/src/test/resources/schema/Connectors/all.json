{
  "type": "object",
  "properties": {
    "connector": {
      "$ref": "#/definitions/ConnectorInfoDTO"
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "AppDynamicsConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "accountId",
            "accountname",
            "controllerUrl",
            "passwordRef",
            "username"
          ],
          "properties": {
            "accountId": {
              "type": "string"
            },
            "accountname": {
              "type": "string"
            },
            "controllerUrl": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "passwordRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ArtifactoryAuthCredentials": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ArtifactoryAuthentication": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "UsernamePassword",
            "Anonymous"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "UsernamePassword"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ArtifactoryUsernamePasswordAuth"
              }
            }
          }
        }
      ]
    },
    "ArtifactoryConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "artifactoryServerUrl"
          ],
          "properties": {
            "artifactoryServerUrl": {
              "type": "string"
            },
            "auth": {
              "$ref": "#/definitions/ArtifactoryAuthentication"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ArtifactoryUsernamePasswordAuth": {
      "allOf": [
        {
          "$ref": "#/definitions/ArtifactoryAuthCredentials"
        },
        {
          "type": "object",
          "required": [
            "passwordRef"
          ],
          "properties": {
            "passwordRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            }
          }
        },
        {
          "oneOf": [
            {
              "required": [
                "usernameRef"
              ]
            },
            {
              "required": [
                "username"
              ]
            }
          ]
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AwsCodeCommitAuthenticationDTO": {
      "type": "object",
      "required": [
        "spec",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "HTTPS"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "HTTPS"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/AwsCodeCommitHttpsCredentialsDTO"
              }
            }
          }
        }
      ]
    },
    "AwsCodeCommitConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "authentication",
            "type",
            "url"
          ],
          "properties": {
            "authentication": {
              "$ref": "#/definitions/AwsCodeCommitAuthenticationDTO"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "type": {
              "type": "string",
              "enum": [
                "Repo",
                "Region"
              ]
            },
            "url": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AwsCodeCommitCredentialsDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AwsCodeCommitHttpsCredentialsDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsCodeCommitCredentialsDTO"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "AWSCredentials"
              ]
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "AWSCredentials"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/AwsCodeCommitSecretKeyAccessKeyDTO"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AwsCodeCommitHttpsCredentialsSpecDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AwsCodeCommitSecretKeyAccessKeyDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsCodeCommitHttpsCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": [
            "secretKeyRef"
          ],
          "properties": {
            "accessKey": {
              "type": "string"
            },
            "accessKeyRef": {
              "type": "string"
            },
            "secretKeyRef": {
              "type": "string"
            }
          }
        },
        {
          "oneOf": [
            {
              "required": [
                "accessKey"
              ]
            },
            {
              "required": [
                "accessKeyRef"
              ]
            }
          ]
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AwsConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "credential"
          ],
          "properties": {
            "credential": {
              "$ref": "#/definitions/AwsCredential"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AwsCredential": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "crossAccountAccess": {
          "$ref": "#/definitions/CrossAccountAccess"
        },
        "type": {
          "type": "string",
          "enum": [
            "InheritFromDelegate",
            "ManualConfig"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "ManualConfig"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/AwsManualConfigSpec"
              }
            }
          }
        }
      ]
    },
    "AwsCredentialSpec": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AwsCurAttributes": {
      "type": "object",
      "required": [
        "reportName",
        "s3BucketName"
      ],
      "properties": {
        "reportName": {
          "type": "string"
        },
        "s3BucketName": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "AwsManualConfigSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsCredentialSpec"
        },
        {
          "type": "object",
          "required": [
            "secretKeyRef"
          ],
          "properties": {
            "accessKey": {
              "type": "string"
            },
            "accessKeyRef": {
              "type": "string"
            },
            "secretKeyRef": {
              "type": "string"
            }
          }
        },
        {
          "oneOf": [
            {
              "required": [
                "accessKey"
              ]
            },
            {
              "required": [
                "accessKeyRef"
              ]
            }
          ]
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BillingExportSpec": {
      "type": "object",
      "required": [
        "containerName",
        "directoryName",
        "storageAccountName"
      ],
      "properties": {
        "containerName": {
          "type": "string"
        },
        "directoryName": {
          "type": "string"
        },
        "storageAccountName": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BitbucketApiAccess": {
      "type": "object",
      "required": [
        "spec",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "UsernameToken"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "UsernameToken"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/BitbucketUsernameTokenApiAccess"
              }
            }
          }
        }
      ]
    },
    "BitbucketApiAccessSpecDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BitbucketAuthentication": {
      "type": "object",
      "required": [
        "spec",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Http",
            "Ssh"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "Http"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/BitbucketHttpCredentials"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Ssh"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/BitbucketSshCredentials"
              }
            }
          }
        }
      ]
    },
    "BitbucketConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "authentication",
            "type",
            "url"
          ],
          "properties": {
            "apiAccess": {
              "$ref": "#/definitions/BitbucketApiAccess"
            },
            "authentication": {
              "$ref": "#/definitions/BitbucketAuthentication"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "type": {
              "type": "string",
              "enum": [
                "Account",
                "Repo"
              ]
            },
            "url": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BitbucketCredentialsDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BitbucketHttpCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/BitbucketCredentialsDTO"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "UsernamePassword"
              ]
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "UsernamePassword"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/BitbucketUsernamePassword"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BitbucketHttpCredentialsSpecDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BitbucketSshCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/BitbucketCredentialsDTO"
        },
        {
          "type": "object",
          "required": [
            "sshKeyRef"
          ],
          "properties": {
            "sshKeyRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BitbucketUsernamePassword": {
      "allOf": [
        {
          "$ref": "#/definitions/BitbucketHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": [
            "passwordRef"
          ],
          "properties": {
            "passwordRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            }
          }
        },
        {
          "oneOf": [
            {
              "required": [
                "usernameRef"
              ]
            },
            {
              "required": [
                "username"
              ]
            }
          ]
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "BitbucketUsernameTokenApiAccess": {
      "allOf": [
        {
          "$ref": "#/definitions/BitbucketApiAccessSpecDTO"
        },
        {
          "type": "object",
          "required": [
            "tokenRef"
          ],
          "properties": {
            "tokenRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            }
          }
        },
        {
          "oneOf": [
            {
              "required": [
                "usernameRef"
              ]
            },
            {
              "required": [
                "username"
              ]
            }
          ]
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CEAwsConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "crossAccountAccess"
          ],
          "properties": {
            "crossAccountAccess": {
              "$ref": "#/definitions/CrossAccountAccess"
            },
            "curAttributes": {
              "$ref": "#/definitions/AwsCurAttributes"
            },
            "featuresEnabled": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "CUR",
                  "EVENTS",
                  "OPTIMIZATION"
                ]
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CEAzureConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "subscriptionId",
            "tenantId"
          ],
          "properties": {
            "billingExportSpec": {
              "$ref": "#/definitions/BillingExportSpec"
            },
            "featuresEnabled": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "BILLING",
                  "OPTIMIZATION"
                ]
              }
            },
            "subscriptionId": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CEKubernetesClusterConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "connectorRef"
          ],
          "properties": {
            "connectorRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "Connector": {
      "type": "object",
      "properties": {
        "connector": {
          "$ref": "#/definitions/ConnectorInfoDTO"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ConnectorConfigDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "ConnectorInfoDTO": {
      "type": "object",
      "required": [
        "identifier",
        "name",
        "spec",
        "type"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "K8sCluster",
            "Git",
            "Splunk",
            "AppDynamics",
            "Vault",
            "DockerRegistry",
            "Local",
            "GcpKms",
            "Gcp",
            "Aws",
            "Artifactory",
            "Jira",
            "Nexus",
            "Github",
            "Gitlab",
            "Bitbucket",
            "Codecommit",
            "CEAws",
            "CEAzure",
            "CEK8sCluster",
            "HttpHelmRepo",
            "NewRelic"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "AppDynamics"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/AppDynamicsConnectorDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Artifactory"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/ArtifactoryConnector"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Aws"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/AwsConnector"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Bitbucket"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/BitbucketConnector"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "CEAws"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/CEAwsConnector"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "CEAzure"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/CEAzureConnector"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "CEK8sCluster"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/CEKubernetesClusterConfig"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Codecommit"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/AwsCodeCommitConnectorDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "DockerRegistry"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/DockerConnectorDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Gcp"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GcpConnector"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "GcpKms"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GcpKmsConnectorDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Git"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GitConfigDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Github"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GithubConnector"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Gitlab"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GitlabConnector"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "HttpHelmRepo"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/HttpHelmConnectorDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Jira"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/JiraConnector"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "K8sCluster"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/KubernetesClusterConfigDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Local"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/LocalConnectorDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "NewRelic"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/NewRelicConnectorDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Nexus"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/NexusConnector"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Splunk"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/SplunkConnectorDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Vault"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/VaultConnectorDTO"
              }
            }
          }
        }
      ]
    },
    "CrossAccountAccess": {
      "type": "object",
      "required": [
        "crossAccountRoleArn"
      ],
      "properties": {
        "crossAccountRoleArn": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "CustomCommitAttributes": {
      "type": "object",
      "properties": {
        "authorEmail": {
          "type": "string"
        },
        "authorName": {
          "type": "string"
        },
        "commitMessage": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "DockerAuthCredentialsDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "DockerAuthenticationDTO": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "UsernamePassword",
            "Anonymous"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "UsernamePassword"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/DockerUserNamePasswordDTO"
              }
            }
          }
        }
      ]
    },
    "DockerConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "dockerRegistryUrl",
            "providerType"
          ],
          "properties": {
            "auth": {
              "$ref": "#/definitions/DockerAuthenticationDTO"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "dockerRegistryUrl": {
              "type": "string"
            },
            "providerType": {
              "type": "string",
              "enum": [
                "DockerHub",
                "Harbor",
                "Quay",
                "Other"
              ]
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "DockerUserNamePasswordDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/DockerAuthCredentialsDTO"
        },
        {
          "type": "object",
          "required": [
            "passwordRef"
          ],
          "properties": {
            "passwordRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            }
          }
        },
        {
          "oneOf": [
            {
              "required": [
                "usernameRef"
              ]
            },
            {
              "required": [
                "username"
              ]
            }
          ]
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GcpConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "properties": {
            "credential": {
              "$ref": "#/definitions/GcpConnectorCredential"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GcpConnectorCredential": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "InheritFromDelegate",
            "ManualConfig"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "ManualConfig"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GcpManualDetails"
              }
            }
          }
        }
      ]
    },
    "GcpCredentialSpec": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GcpKmsConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "properties": {
            "credentials": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "default": {
              "type": "boolean"
            },
            "keyName": {
              "type": "string"
            },
            "keyRing": {
              "type": "string"
            },
            "projectId": {
              "type": "string"
            },
            "region": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GcpManualDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/GcpCredentialSpec"
        },
        {
          "type": "object",
          "required": [
            "secretKeyRef"
          ],
          "properties": {
            "secretKeyRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitAuthenticationDTO": {
      "type": "object",
      "discriminator": "type",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitConfigDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "connectionType",
            "spec",
            "type",
            "url"
          ],
          "properties": {
            "branchName": {
              "type": "string"
            },
            "connectionType": {
              "type": "string",
              "enum": [
                "Account",
                "Repo"
              ]
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "gitSync": {
              "$ref": "#/definitions/GitSyncConfig"
            },
            "type": {
              "type": "string",
              "enum": [
                "Http",
                "Ssh"
              ]
            },
            "url": {
              "type": "string"
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Http"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GitHTTPAuthenticationDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Ssh"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GitSSHAuthenticationDTO"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitHTTPAuthenticationDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/GitAuthenticationDTO"
        },
        {
          "type": "object",
          "required": [
            "passwordRef"
          ],
          "properties": {
            "passwordRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            }
          }
        },
        {
          "oneOf": [
            {
              "required": [
                "usernameRef"
              ]
            },
            {
              "required": [
                "username"
              ]
            }
          ]
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitSSHAuthenticationDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/GitAuthenticationDTO"
        },
        {
          "type": "object",
          "required": [
            "sshKeyRef"
          ],
          "properties": {
            "sshKeyRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitSyncConfig": {
      "type": "object",
      "properties": {
        "customCommitAttributes": {
          "$ref": "#/definitions/CustomCommitAttributes"
        },
        "enabled": {
          "type": "boolean"
        },
        "syncEnabled": {
          "type": "boolean"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GithubApiAccess": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "GithubApp",
            "Token"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "GithubApp"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GithubAppSpec"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Token"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GithubTokenSpec"
              }
            }
          }
        }
      ]
    },
    "GithubApiAccessSpecDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GithubAppSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubApiAccessSpecDTO"
        },
        {
          "type": "object",
          "required": [
            "applicationId",
            "installationId",
            "privateKeyRef"
          ],
          "properties": {
            "applicationId": {
              "type": "string"
            },
            "installationId": {
              "type": "string"
            },
            "privateKeyRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GithubAuthentication": {
      "type": "object",
      "required": [
        "spec",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Http",
            "Ssh"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "Http"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GithubHttpCredentials"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Ssh"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GithubSshCredentials"
              }
            }
          }
        }
      ]
    },
    "GithubConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "authentication",
            "type",
            "url"
          ],
          "properties": {
            "apiAccess": {
              "$ref": "#/definitions/GithubApiAccess"
            },
            "authentication": {
              "$ref": "#/definitions/GithubAuthentication"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "type": {
              "type": "string",
              "enum": [
                "Account",
                "Repo"
              ]
            },
            "url": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GithubCredentialsDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GithubHttpCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubCredentialsDTO"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "UsernamePassword",
                "UsernameToken"
              ]
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "UsernamePassword"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GithubUsernamePassword"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "UsernameToken"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GithubUsernameToken"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GithubHttpCredentialsSpecDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GithubSshCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubCredentialsDTO"
        },
        {
          "type": "object",
          "required": [
            "sshKeyRef"
          ],
          "properties": {
            "sshKeyRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GithubTokenSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubApiAccessSpecDTO"
        },
        {
          "type": "object",
          "required": [
            "tokenRef"
          ],
          "properties": {
            "tokenRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GithubUsernamePassword": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": [
            "passwordRef"
          ],
          "properties": {
            "passwordRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            }
          }
        },
        {
          "oneOf": [
            {
              "required": [
                "usernameRef"
              ]
            },
            {
              "required": [
                "username"
              ]
            }
          ]
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GithubUsernameToken": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": [
            "tokenRef"
          ],
          "properties": {
            "tokenRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitlabApiAccess": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Token"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "Token"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GitlabTokenSpec"
              }
            }
          }
        }
      ]
    },
    "GitlabApiAccessSpecDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitlabAuthentication": {
      "type": "object",
      "required": [
        "spec",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Http",
            "Ssh"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "Http"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GitlabHttpCredentials"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Ssh"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GitlabSshCredentials"
              }
            }
          }
        }
      ]
    },
    "GitlabConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "authentication",
            "type",
            "url"
          ],
          "properties": {
            "apiAccess": {
              "$ref": "#/definitions/GitlabApiAccess"
            },
            "authentication": {
              "$ref": "#/definitions/GitlabAuthentication"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "type": {
              "type": "string",
              "enum": [
                "Account",
                "Repo"
              ]
            },
            "url": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitlabCredentialsDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitlabHttpCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabCredentialsDTO"
        },
        {
          "type": "object",
          "required": [
            "spec",
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "UsernamePassword",
                "UsernameToken",
                "Kerberos"
              ]
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "Kerberos"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GitlabKerberos"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "UsernamePassword"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GitlabUsernamePassword"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "UsernameToken"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/GitlabUsernameToken"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitlabHttpCredentialsSpecDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitlabKerberos": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": [
            "kerberosKeyRef"
          ],
          "properties": {
            "kerberosKeyRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitlabSshCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabCredentialsDTO"
        },
        {
          "type": "object",
          "required": [
            "sshKeyRef"
          ],
          "properties": {
            "sshKeyRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitlabTokenSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabApiAccessSpecDTO"
        },
        {
          "type": "object",
          "required": [
            "tokenRef"
          ],
          "properties": {
            "tokenRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitlabUsernamePassword": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": [
            "passwordRef"
          ],
          "properties": {
            "passwordRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            }
          }
        },
        {
          "oneOf": [
            {
              "required": [
                "usernameRef"
              ]
            },
            {
              "required": [
                "username"
              ]
            }
          ]
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "GitlabUsernameToken": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": [
            "tokenRef"
          ],
          "properties": {
            "tokenRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "HttpHelmAuthCredentialsDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "HttpHelmAuthenticationDTO": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "UsernamePassword",
            "Anonymous"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "UsernamePassword"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/HttpHelmUsernamePasswordDTO"
              }
            }
          }
        }
      ]
    },
    "HttpHelmConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "helmRepoUrl"
          ],
          "properties": {
            "auth": {
              "$ref": "#/definitions/HttpHelmAuthenticationDTO"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "helmRepoUrl": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "HttpHelmUsernamePasswordDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/HttpHelmAuthCredentialsDTO"
        },
        {
          "type": "object",
          "required": [
            "passwordRef"
          ],
          "properties": {
            "passwordRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            }
          }
        },
        {
          "oneOf": [
            {
              "required": [
                "usernameRef"
              ]
            },
            {
              "required": [
                "username"
              ]
            }
          ]
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "JiraConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "jiraUrl",
            "passwordRef"
          ],
          "properties": {
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "jiraUrl": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KubernetesAuthCredentialDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KubernetesAuthDTO": {
      "type": "object",
      "required": [
        "spec",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "UsernamePassword",
            "ClientKeyCert",
            "ServiceAccount",
            "OpenIdConnect"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "ClientKeyCert"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/KubernetesClientKeyCertDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "OpenIdConnect"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/KubernetesOpenIdConnectDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "ServiceAccount"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/KubernetesServiceAccountDTO"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "UsernamePassword"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/KubernetesUserNamePasswordDTO"
              }
            }
          }
        }
      ]
    },
    "KubernetesClientKeyCertDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": [
            "clientCertRef",
            "clientKeyPassphraseRef",
            "clientKeyRef"
          ],
          "properties": {
            "caCertRef": {
              "type": "string"
            },
            "clientCertRef": {
              "type": "string"
            },
            "clientKeyAlgo": {
              "type": "string"
            },
            "clientKeyPassphraseRef": {
              "type": "string"
            },
            "clientKeyRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KubernetesClusterConfigDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "credential"
          ],
          "properties": {
            "credential": {
              "$ref": "#/definitions/KubernetesCredentialDTO"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KubernetesClusterDetailsDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesCredentialSpecDTO"
        },
        {
          "type": "object",
          "required": [
            "auth",
            "masterUrl"
          ],
          "properties": {
            "auth": {
              "$ref": "#/definitions/KubernetesAuthDTO"
            },
            "masterUrl": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KubernetesCredentialDTO": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "InheritFromDelegate",
            "ManualConfig"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "ManualConfig"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/KubernetesClusterDetailsDTO"
              }
            }
          }
        }
      ]
    },
    "KubernetesCredentialSpecDTO": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KubernetesOpenIdConnectDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": [
            "oidcClientIdRef",
            "oidcPasswordRef"
          ],
          "properties": {
            "oidcClientIdRef": {
              "type": "string"
            },
            "oidcIssuerUrl": {
              "type": "string"
            },
            "oidcPasswordRef": {
              "type": "string"
            },
            "oidcScopes": {
              "type": "string"
            },
            "oidcSecretRef": {
              "type": "string"
            },
            "oidcUsername": {
              "type": "string"
            },
            "oidcUsernameRef": {
              "type": "string"
            }
          }
        },
        {
          "oneOf": [
            {
              "required": [
                "oidcUsername"
              ]
            },
            {
              "required": [
                "oidcUsernameRef"
              ]
            }
          ]
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KubernetesServiceAccountDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": [
            "serviceAccountTokenRef"
          ],
          "properties": {
            "serviceAccountTokenRef": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "KubernetesUserNamePasswordDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": [
            "passwordRef"
          ],
          "properties": {
            "passwordRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            }
          }
        },
        {
          "oneOf": [
            {
              "required": [
                "usernameRef"
              ]
            },
            {
              "required": [
                "username"
              ]
            }
          ]
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "LocalConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "properties": {
            "default": {
              "type": "boolean"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "NewRelicConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "apiKeyRef",
            "newRelicAccountId",
            "url"
          ],
          "properties": {
            "apiKeyRef": {
              "type": "string"
            },
            "newRelicAccountId": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "NexusAuthCredentials": {
      "type": "object",
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "NexusAuthentication": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "UsernamePassword",
            "Anonymous"
          ]
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "UsernamePassword"
              }
            }
          },
          "then": {
            "properties": {
              "spec": {
                "$ref": "#/definitions/NexusUsernamePasswordAuth"
              }
            }
          }
        }
      ]
    },
    "NexusConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "nexusServerUrl",
            "version"
          ],
          "properties": {
            "auth": {
              "$ref": "#/definitions/NexusAuthentication"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "nexusServerUrl": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "NexusUsernamePasswordAuth": {
      "allOf": [
        {
          "$ref": "#/definitions/NexusAuthCredentials"
        },
        {
          "type": "object",
          "required": [
            "passwordRef"
          ],
          "properties": {
            "passwordRef": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            }
          }
        },
        {
          "oneOf": [
            {
              "required": [
                "usernameRef"
              ]
            },
            {
              "required": [
                "username"
              ]
            }
          ]
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "SplunkConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": [
            "accountId",
            "passwordRef"
          ],
          "properties": {
            "accountId": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "passwordRef": {
              "type": "string"
            },
            "splunkUrl": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "VaultConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "properties": {
            "accessType": {
              "type": "string",
              "enum": [
                "APP_ROLE",
                "TOKEN"
              ]
            },
            "appRoleId": {
              "type": "string"
            },
            "authToken": {
              "type": "string"
            },
            "basePath": {
              "type": "string"
            },
            "default": {
              "type": "boolean"
            },
            "readOnly": {
              "type": "boolean"
            },
            "renewalIntervalMinutes": {
              "type": "integer",
              "format": "int64"
            },
            "secretEngineManuallyConfigured": {
              "type": "boolean"
            },
            "secretEngineName": {
              "type": "string"
            },
            "secretEngineVersion": {
              "type": "integer",
              "format": "int32"
            },
            "secretId": {
              "type": "string"
            },
            "vaultUrl": {
              "type": "string"
            }
          }
        }
      ],
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  }
}