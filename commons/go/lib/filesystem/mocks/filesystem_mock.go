// Code generated by MockGen. DO NOT EDIT.
// Source: filesystem.go

// Package filesystem is a generated GoMock package.
package filesystem

import (
	gomock "github.com/golang/mock/gomock"
	io "io"
	reflect "reflect"
)

// MockFileSystem is a mock of FileSystem interface
type MockFileSystem struct {
	ctrl     *gomock.Controller
	recorder *MockFileSystemMockRecorder
}

// MockFileSystemMockRecorder is the mock recorder for MockFileSystem
type MockFileSystemMockRecorder struct {
	mock *MockFileSystem
}

// NewMockFileSystem creates a new mock instance
func NewMockFileSystem(ctrl *gomock.Controller) *MockFileSystem {
	mock := &MockFileSystem{ctrl: ctrl}
	mock.recorder = &MockFileSystemMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFileSystem) EXPECT() *MockFileSystemMockRecorder {
	return m.recorder
}

// ReadFile mocks base method
func (m *MockFileSystem) ReadFile(filename string, op func(io.Reader) error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadFile", filename, op)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReadFile indicates an expected call of ReadFile
func (mr *MockFileSystemMockRecorder) ReadFile(filename, op interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadFile", reflect.TypeOf((*MockFileSystem)(nil).ReadFile), filename, op)
}
