// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io/harness/callback/callback.proto

package io.harness.callback;

/**
 * Protobuf type {@code io.harness.callback.DelegateCallback}
 */
@javax.annotation.Generated(value = "protoc", comments = "annotations:DelegateCallback.java.pb.meta")
public final class DelegateCallback extends com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:io.harness.callback.DelegateCallback)
    DelegateCallbackOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use DelegateCallback.newBuilder() to construct.
  private DelegateCallback(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DelegateCallback() {}

  @java.
  lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new DelegateCallback();
  }

  @java.
  lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }
  private DelegateCallback(
      com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.harness.callback.HttpsClientEntrypoint.Builder subBuilder = null;
            if (typeCase_ == 1) {
              subBuilder = ((io.harness.callback.HttpsClientEntrypoint) type_).toBuilder();
            }
            type_ = input.readMessage(io.harness.callback.HttpsClientEntrypoint.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.harness.callback.HttpsClientEntrypoint) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 1;
            break;
          }
          case 18: {
            io.harness.callback.MongoDatabase.Builder subBuilder = null;
            if (typeCase_ == 2) {
              subBuilder = ((io.harness.callback.MongoDatabase) type_).toBuilder();
            }
            type_ = input.readMessage(io.harness.callback.MongoDatabase.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.harness.callback.MongoDatabase) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 2;
            break;
          }
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return io.harness.callback.Callback.internal_static_io_harness_callback_DelegateCallback_descriptor;
  }

  @java.
  lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
    return io.harness.callback.Callback.internal_static_io_harness_callback_DelegateCallback_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.harness.callback.DelegateCallback.class, io.harness.callback.DelegateCallback.Builder.class);
  }

  private int typeCase_ = 0;
  private java.lang.Object type_;
  public enum TypeCase implements com
  .google.protobuf.Internal.EnumLite, com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    HTTPS_CLIENT_ENTRYPOINT(1), MONGO_DATABASE(2), TYPE_NOT_SET(0);
    private final int value;
    private TypeCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static TypeCase forNumber(int value) {
      switch (value) {
        case 1:
          return HTTPS_CLIENT_ENTRYPOINT;
        case 2:
          return MONGO_DATABASE;
        case 0:
          return TYPE_NOT_SET;
        default:
          return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TypeCase getTypeCase() {
    return TypeCase.forNumber(typeCase_);
  }

  public static final int HTTPS_CLIENT_ENTRYPOINT_FIELD_NUMBER = 1;
  /**
   * <code>.io.harness.callback.HttpsClientEntrypoint https_client_entrypoint = 1[json_name =
   * "httpsClientEntrypoint"];</code>
   * @return Whether the httpsClientEntrypoint field is set.
   */
  public boolean hasHttpsClientEntrypoint() {
    return typeCase_ == 1;
  }
  /**
   * <code>.io.harness.callback.HttpsClientEntrypoint https_client_entrypoint = 1[json_name =
   * "httpsClientEntrypoint"];</code>
   * @return The httpsClientEntrypoint.
   */
  public io.harness.callback.HttpsClientEntrypoint getHttpsClientEntrypoint() {
    if (typeCase_ == 1) {
      return (io.harness.callback.HttpsClientEntrypoint) type_;
    }
    return io.harness.callback.HttpsClientEntrypoint.getDefaultInstance();
  }
  /**
   * <code>.io.harness.callback.HttpsClientEntrypoint https_client_entrypoint = 1[json_name =
   * "httpsClientEntrypoint"];</code>
   */
  public io.harness.callback.HttpsClientEntrypointOrBuilder getHttpsClientEntrypointOrBuilder() {
    if (typeCase_ == 1) {
      return (io.harness.callback.HttpsClientEntrypoint) type_;
    }
    return io.harness.callback.HttpsClientEntrypoint.getDefaultInstance();
  }

  public static final int MONGO_DATABASE_FIELD_NUMBER = 2;
  /**
   * <code>.io.harness.callback.MongoDatabase mongo_database = 2[json_name = "mongoDatabase"];</code>
   * @return Whether the mongoDatabase field is set.
   */
  public boolean hasMongoDatabase() {
    return typeCase_ == 2;
  }
  /**
   * <code>.io.harness.callback.MongoDatabase mongo_database = 2[json_name = "mongoDatabase"];</code>
   * @return The mongoDatabase.
   */
  public io.harness.callback.MongoDatabase getMongoDatabase() {
    if (typeCase_ == 2) {
      return (io.harness.callback.MongoDatabase) type_;
    }
    return io.harness.callback.MongoDatabase.getDefaultInstance();
  }
  /**
   * <code>.io.harness.callback.MongoDatabase mongo_database = 2[json_name = "mongoDatabase"];</code>
   */
  public io.harness.callback.MongoDatabaseOrBuilder getMongoDatabaseOrBuilder() {
    if (typeCase_ == 2) {
      return (io.harness.callback.MongoDatabase) type_;
    }
    return io.harness.callback.MongoDatabase.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1)
      return true;
    if (isInitialized == 0)
      return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (typeCase_ == 1) {
      output.writeMessage(1, (io.harness.callback.HttpsClientEntrypoint) type_);
    }
    if (typeCase_ == 2) {
      output.writeMessage(2, (io.harness.callback.MongoDatabase) type_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1)
      return size;

    size = 0;
    if (typeCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(
          1, (io.harness.callback.HttpsClientEntrypoint) type_);
    }
    if (typeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, (io.harness.callback.MongoDatabase) type_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof io.harness.callback.DelegateCallback)) {
      return super.equals(obj);
    }
    io.harness.callback.DelegateCallback other = (io.harness.callback.DelegateCallback) obj;

    if (!getTypeCase().equals(other.getTypeCase()))
      return false;
    switch (typeCase_) {
      case 1:
        if (!getHttpsClientEntrypoint().equals(other.getHttpsClientEntrypoint()))
          return false;
        break;
      case 2:
        if (!getMongoDatabase().equals(other.getMongoDatabase()))
          return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields))
      return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (typeCase_) {
      case 1:
        hash = (37 * hash) + HTTPS_CLIENT_ENTRYPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getHttpsClientEntrypoint().hashCode();
        break;
      case 2:
        hash = (37 * hash) + MONGO_DATABASE_FIELD_NUMBER;
        hash = (53 * hash) + getMongoDatabase().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.harness.callback.DelegateCallback parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.harness.callback.DelegateCallback parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.harness.callback.DelegateCallback parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.harness.callback.DelegateCallback parseFrom(
      com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.harness.callback.DelegateCallback parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.harness.callback.DelegateCallback parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.harness.callback.DelegateCallback parseFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }
  public static io.harness.callback.DelegateCallback parseFrom(java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.harness.callback.DelegateCallback parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }
  public static io.harness.callback.DelegateCallback parseDelimitedFrom(java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.harness.callback.DelegateCallback parseFrom(com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }
  public static io.harness.callback.DelegateCallback parseFrom(com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.harness.callback.DelegateCallback prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code io.harness.callback.DelegateCallback}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.harness.callback.DelegateCallback)
      io.harness.callback.DelegateCallbackOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return io.harness.callback.Callback.internal_static_io_harness_callback_DelegateCallback_descriptor;
    }

    @java.
    lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
      return io.harness.callback.Callback.internal_static_io_harness_callback_DelegateCallback_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.harness.callback.DelegateCallback.class, io.harness.callback.DelegateCallback.Builder.class);
    }

    // Construct using io.harness.callback.DelegateCallback.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      typeCase_ = 0;
      type_ = null;
      return this;
    }

    @java.
    lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return io.harness.callback.Callback.internal_static_io_harness_callback_DelegateCallback_descriptor;
    }

    @java.
    lang.Override
    public io.harness.callback.DelegateCallback getDefaultInstanceForType() {
      return io.harness.callback.DelegateCallback.getDefaultInstance();
    }

    @java.
    lang.Override
    public io.harness.callback.DelegateCallback build() {
      io.harness.callback.DelegateCallback result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.
    lang.Override
    public io.harness.callback.DelegateCallback buildPartial() {
      io.harness.callback.DelegateCallback result = new io.harness.callback.DelegateCallback(this);
      if (typeCase_ == 1) {
        if (httpsClientEntrypointBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = httpsClientEntrypointBuilder_.build();
        }
      }
      if (typeCase_ == 2) {
        if (mongoDatabaseBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = mongoDatabaseBuilder_.build();
        }
      }
      result.typeCase_ = typeCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.harness.callback.DelegateCallback) {
        return mergeFrom((io.harness.callback.DelegateCallback) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.harness.callback.DelegateCallback other) {
      if (other == io.harness.callback.DelegateCallback.getDefaultInstance())
        return this;
      switch (other.getTypeCase()) {
        case HTTPS_CLIENT_ENTRYPOINT: {
          mergeHttpsClientEntrypoint(other.getHttpsClientEntrypoint());
          break;
        }
        case MONGO_DATABASE: {
          mergeMongoDatabase(other.getMongoDatabase());
          break;
        }
        case TYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      io.harness.callback.DelegateCallback parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.harness.callback.DelegateCallback) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int typeCase_ = 0;
    private java.lang.Object type_;
    public TypeCase getTypeCase() {
      return TypeCase.forNumber(typeCase_);
    }

    public Builder clearType() {
      typeCase_ = 0;
      type_ = null;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<io.harness.callback.HttpsClientEntrypoint,
        io.harness.callback.HttpsClientEntrypoint.Builder, io.harness.callback.HttpsClientEntrypointOrBuilder>
        httpsClientEntrypointBuilder_;
    /**
     * <code>.io.harness.callback.HttpsClientEntrypoint https_client_entrypoint = 1[json_name =
     * "httpsClientEntrypoint"];</code>
     * @return Whether the httpsClientEntrypoint field is set.
     */
    public boolean hasHttpsClientEntrypoint() {
      return typeCase_ == 1;
    }
    /**
     * <code>.io.harness.callback.HttpsClientEntrypoint https_client_entrypoint = 1[json_name =
     * "httpsClientEntrypoint"];</code>
     * @return The httpsClientEntrypoint.
     */
    public io.harness.callback.HttpsClientEntrypoint getHttpsClientEntrypoint() {
      if (httpsClientEntrypointBuilder_ == null) {
        if (typeCase_ == 1) {
          return (io.harness.callback.HttpsClientEntrypoint) type_;
        }
        return io.harness.callback.HttpsClientEntrypoint.getDefaultInstance();
      } else {
        if (typeCase_ == 1) {
          return httpsClientEntrypointBuilder_.getMessage();
        }
        return io.harness.callback.HttpsClientEntrypoint.getDefaultInstance();
      }
    }
    /**
     * <code>.io.harness.callback.HttpsClientEntrypoint https_client_entrypoint = 1[json_name =
     * "httpsClientEntrypoint"];</code>
     */
    public Builder setHttpsClientEntrypoint(io.harness.callback.HttpsClientEntrypoint value) {
      if (httpsClientEntrypointBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        httpsClientEntrypointBuilder_.setMessage(value);
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <code>.io.harness.callback.HttpsClientEntrypoint https_client_entrypoint = 1[json_name =
     * "httpsClientEntrypoint"];</code>
     */
    public Builder setHttpsClientEntrypoint(io.harness.callback.HttpsClientEntrypoint.Builder builderForValue) {
      if (httpsClientEntrypointBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        httpsClientEntrypointBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <code>.io.harness.callback.HttpsClientEntrypoint https_client_entrypoint = 1[json_name =
     * "httpsClientEntrypoint"];</code>
     */
    public Builder mergeHttpsClientEntrypoint(io.harness.callback.HttpsClientEntrypoint value) {
      if (httpsClientEntrypointBuilder_ == null) {
        if (typeCase_ == 1 && type_ != io.harness.callback.HttpsClientEntrypoint.getDefaultInstance()) {
          type_ =
              io.harness.callback.HttpsClientEntrypoint.newBuilder((io.harness.callback.HttpsClientEntrypoint) type_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 1) {
          httpsClientEntrypointBuilder_.mergeFrom(value);
        }
        httpsClientEntrypointBuilder_.setMessage(value);
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <code>.io.harness.callback.HttpsClientEntrypoint https_client_entrypoint = 1[json_name =
     * "httpsClientEntrypoint"];</code>
     */
    public Builder clearHttpsClientEntrypoint() {
      if (httpsClientEntrypointBuilder_ == null) {
        if (typeCase_ == 1) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 1) {
          typeCase_ = 0;
          type_ = null;
        }
        httpsClientEntrypointBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.io.harness.callback.HttpsClientEntrypoint https_client_entrypoint = 1[json_name =
     * "httpsClientEntrypoint"];</code>
     */
    public io.harness.callback.HttpsClientEntrypoint.Builder getHttpsClientEntrypointBuilder() {
      return getHttpsClientEntrypointFieldBuilder().getBuilder();
    }
    /**
     * <code>.io.harness.callback.HttpsClientEntrypoint https_client_entrypoint = 1[json_name =
     * "httpsClientEntrypoint"];</code>
     */
    public io.harness.callback.HttpsClientEntrypointOrBuilder getHttpsClientEntrypointOrBuilder() {
      if ((typeCase_ == 1) && (httpsClientEntrypointBuilder_ != null)) {
        return httpsClientEntrypointBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 1) {
          return (io.harness.callback.HttpsClientEntrypoint) type_;
        }
        return io.harness.callback.HttpsClientEntrypoint.getDefaultInstance();
      }
    }
    /**
     * <code>.io.harness.callback.HttpsClientEntrypoint https_client_entrypoint = 1[json_name =
     * "httpsClientEntrypoint"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<io.harness.callback.HttpsClientEntrypoint,
        io.harness.callback.HttpsClientEntrypoint.Builder, io.harness.callback.HttpsClientEntrypointOrBuilder>
    getHttpsClientEntrypointFieldBuilder() {
      if (httpsClientEntrypointBuilder_ == null) {
        if (!(typeCase_ == 1)) {
          type_ = io.harness.callback.HttpsClientEntrypoint.getDefaultInstance();
        }
        httpsClientEntrypointBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<io.harness.callback.HttpsClientEntrypoint,
                io.harness.callback.HttpsClientEntrypoint.Builder, io.harness.callback.HttpsClientEntrypointOrBuilder>(
                (io.harness.callback.HttpsClientEntrypoint) type_, getParentForChildren(), isClean());
        type_ = null;
      }
      typeCase_ = 1;
      onChanged();
      ;
      return httpsClientEntrypointBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<io.harness.callback.MongoDatabase,
        io.harness.callback.MongoDatabase.Builder, io.harness.callback.MongoDatabaseOrBuilder> mongoDatabaseBuilder_;
    /**
     * <code>.io.harness.callback.MongoDatabase mongo_database = 2[json_name = "mongoDatabase"];</code>
     * @return Whether the mongoDatabase field is set.
     */
    public boolean hasMongoDatabase() {
      return typeCase_ == 2;
    }
    /**
     * <code>.io.harness.callback.MongoDatabase mongo_database = 2[json_name = "mongoDatabase"];</code>
     * @return The mongoDatabase.
     */
    public io.harness.callback.MongoDatabase getMongoDatabase() {
      if (mongoDatabaseBuilder_ == null) {
        if (typeCase_ == 2) {
          return (io.harness.callback.MongoDatabase) type_;
        }
        return io.harness.callback.MongoDatabase.getDefaultInstance();
      } else {
        if (typeCase_ == 2) {
          return mongoDatabaseBuilder_.getMessage();
        }
        return io.harness.callback.MongoDatabase.getDefaultInstance();
      }
    }
    /**
     * <code>.io.harness.callback.MongoDatabase mongo_database = 2[json_name = "mongoDatabase"];</code>
     */
    public Builder setMongoDatabase(io.harness.callback.MongoDatabase value) {
      if (mongoDatabaseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        mongoDatabaseBuilder_.setMessage(value);
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <code>.io.harness.callback.MongoDatabase mongo_database = 2[json_name = "mongoDatabase"];</code>
     */
    public Builder setMongoDatabase(io.harness.callback.MongoDatabase.Builder builderForValue) {
      if (mongoDatabaseBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        mongoDatabaseBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <code>.io.harness.callback.MongoDatabase mongo_database = 2[json_name = "mongoDatabase"];</code>
     */
    public Builder mergeMongoDatabase(io.harness.callback.MongoDatabase value) {
      if (mongoDatabaseBuilder_ == null) {
        if (typeCase_ == 2 && type_ != io.harness.callback.MongoDatabase.getDefaultInstance()) {
          type_ = io.harness.callback.MongoDatabase.newBuilder((io.harness.callback.MongoDatabase) type_)
                      .mergeFrom(value)
                      .buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 2) {
          mongoDatabaseBuilder_.mergeFrom(value);
        }
        mongoDatabaseBuilder_.setMessage(value);
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <code>.io.harness.callback.MongoDatabase mongo_database = 2[json_name = "mongoDatabase"];</code>
     */
    public Builder clearMongoDatabase() {
      if (mongoDatabaseBuilder_ == null) {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
        }
        mongoDatabaseBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.io.harness.callback.MongoDatabase mongo_database = 2[json_name = "mongoDatabase"];</code>
     */
    public io.harness.callback.MongoDatabase.Builder getMongoDatabaseBuilder() {
      return getMongoDatabaseFieldBuilder().getBuilder();
    }
    /**
     * <code>.io.harness.callback.MongoDatabase mongo_database = 2[json_name = "mongoDatabase"];</code>
     */
    public io.harness.callback.MongoDatabaseOrBuilder getMongoDatabaseOrBuilder() {
      if ((typeCase_ == 2) && (mongoDatabaseBuilder_ != null)) {
        return mongoDatabaseBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 2) {
          return (io.harness.callback.MongoDatabase) type_;
        }
        return io.harness.callback.MongoDatabase.getDefaultInstance();
      }
    }
    /**
     * <code>.io.harness.callback.MongoDatabase mongo_database = 2[json_name = "mongoDatabase"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<io.harness.callback.MongoDatabase,
        io.harness.callback.MongoDatabase.Builder, io.harness.callback.MongoDatabaseOrBuilder>
    getMongoDatabaseFieldBuilder() {
      if (mongoDatabaseBuilder_ == null) {
        if (!(typeCase_ == 2)) {
          type_ = io.harness.callback.MongoDatabase.getDefaultInstance();
        }
        mongoDatabaseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<io.harness.callback.MongoDatabase,
            io.harness.callback.MongoDatabase.Builder, io.harness.callback.MongoDatabaseOrBuilder>(
            (io.harness.callback.MongoDatabase) type_, getParentForChildren(), isClean());
        type_ = null;
      }
      typeCase_ = 2;
      onChanged();
      ;
      return mongoDatabaseBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:io.harness.callback.DelegateCallback)
  }

  // @@protoc_insertion_point(class_scope:io.harness.callback.DelegateCallback)
  private static final io.harness.callback.DelegateCallback DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.harness.callback.DelegateCallback();
  }

  public static io.harness.callback.DelegateCallback getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DelegateCallback> PARSER =
      new com.google.protobuf.AbstractParser<DelegateCallback>() {
        @java.lang.Override
        public DelegateCallback parsePartialFrom(
            com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DelegateCallback(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<DelegateCallback> parser() {
    return PARSER;
  }

  @java.
  lang.Override
  public com.google.protobuf.Parser<DelegateCallback> getParserForType() {
    return PARSER;
  }

  @java.
  lang.Override
  public io.harness.callback.DelegateCallback getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
