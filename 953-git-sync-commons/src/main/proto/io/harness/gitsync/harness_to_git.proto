syntax = "proto3";

package io.harness.gitsync;

import "google/protobuf/wrappers.proto";
import "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/entity_type.proto";
import "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/entity_detail.proto";
import "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/entity_scope_info.proto";

option java_multiple_files = true;

service HarnessToGitPushInfoService {
  rpc pushFromHarness(PushInfo) returns (PushResponse);
  // todo(abhinav): make rpc to get user profile connector when available.
  rpc getConnectorInfo(FileInfo) returns (InfoForPush);
  rpc isGitSyncEnabledForScope(io.harness.eventsframework.schemas.entity.EntityScopeInfo) returns (IsGitSyncEnabled);
}

message PushInfo {
  string commit_id = 1;
  string file_path = 2;
  io.harness.eventsframework.schemas.entity.EntityDetailProtoDTO entity_detail = 3;
  string account_id = 4;
  string yaml_git_config_id = 5;
}

message PushResponse {
  bool status = 1;
}

message FileInfo {
  string file_path = 1;
  string yaml_git_config_id = 2;
  io.harness.eventsframework.schemas.entity.EntityDetailProtoDTO entity_detail = 3;
  string account_id = 4;
  string branch = 5;
}

message InfoForPush {
  google.protobuf.BytesValue connector = 1;
  google.protobuf.StringValue file_path = 2;
  // status 0 = failed, 1 = success
  bool status = 3;
  google.protobuf.BytesValue exception = 4;
  bool is_default = 5;
  string yaml_git_config_id = 6;
  string account_id = 7;
  google.protobuf.StringValue org_identifier = 8;
  google.protobuf.StringValue project_identifier = 9;
}

message IsGitSyncEnabled {
  bool enabled = 1;
}
