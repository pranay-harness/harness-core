// Copyright 2020 Harness Inc. All rights reserved.
// Use of this source code is governed by the PolyForm Free Trial 1.0.0 license
// that can be found in the licenses directory at the root of this repository, also available at
// https://polyformproject.org/wp-content/uploads/2020/05/PolyForm-Free-Trial-1.0.0.txt.

// Code generated by MockGen. DO NOT EDIT.
// Source: server.go

// Package grpc is a generated GoMock package.
package grpc

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAddonServer is a mock of AddonServer interface.
type MockAddonServer struct {
	ctrl     *gomock.Controller
	recorder *MockAddonServerMockRecorder
}

// MockAddonServerMockRecorder is the mock recorder for MockAddonServer.
type MockAddonServerMockRecorder struct {
	mock *MockAddonServer
}

// NewMockAddonServer creates a new mock instance.
func NewMockAddonServer(ctrl *gomock.Controller) *MockAddonServer {
	mock := &MockAddonServer{ctrl: ctrl}
	mock.recorder = &MockAddonServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAddonServer) EXPECT() *MockAddonServerMockRecorder {
	return m.recorder
}

// Start mocks base method.
func (m *MockAddonServer) Start() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Start")
	ret0, _ := ret[0].(error)
	return ret0
}

// Start indicates an expected call of Start.
func (mr *MockAddonServerMockRecorder) Start() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockAddonServer)(nil).Start))
}

// Stop mocks base method.
func (m *MockAddonServer) Stop() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Stop")
}

// Stop indicates an expected call of Stop.
func (mr *MockAddonServerMockRecorder) Stop() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stop", reflect.TypeOf((*MockAddonServer)(nil).Stop))
}
