// Copyright 2021 Harness Inc.
// 
// Licensed under the Apache License, Version 2.0
// http://www.apache.org/licenses/LICENSE-2.0

// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package services is a generated GoMock package.
package services

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIntegrationSvc is a mock of IntegrationSvc interface.
type MockIntegrationSvc struct {
	ctrl     *gomock.Controller
	recorder *MockIntegrationSvcMockRecorder
}

// MockIntegrationSvcMockRecorder is the mock recorder for MockIntegrationSvc.
type MockIntegrationSvcMockRecorder struct {
	mock *MockIntegrationSvc
}

// NewMockIntegrationSvc creates a new mock instance.
func NewMockIntegrationSvc(ctrl *gomock.Controller) *MockIntegrationSvc {
	mock := &MockIntegrationSvc{ctrl: ctrl}
	mock.recorder = &MockIntegrationSvcMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIntegrationSvc) EXPECT() *MockIntegrationSvcMockRecorder {
	return m.recorder
}

// Run mocks base method.
func (m *MockIntegrationSvc) Run() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run")
	ret0, _ := ret[0].(error)
	return ret0
}

// Run indicates an expected call of Run.
func (mr *MockIntegrationSvcMockRecorder) Run() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockIntegrationSvc)(nil).Run))
}
