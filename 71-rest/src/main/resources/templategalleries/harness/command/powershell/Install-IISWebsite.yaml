name: "Install IIS Website"
gallery: "Harness"
folderPath: "Harness/Power Shell Commands"
version: "1"
description: "This is a command to install service by invoking scripts over SSH to the individual instances."
keywords: [ssh, iiswebsite, powershell, install]
referencedTemplateUri: "Harness/Power Shell Commands/Install IIS Website:1"
variables:
- name: "ReleaseNo"
  description: "ReleaseId."
- name: "ServiceName"
  description: "Service Name"
- name: "AppPoolName"
  value: "DefaultAppPool"
  description: "Default Application Pool"
- name: "AppPoolDotNetVersion"
  value: "v4.0"
  description: "Application pool DotNet Version"
- name: "DownloadDirectory"
  value: "$env:TEMP"
  description: "Download Directory"
templateObject:
  type: "SSH"
  commandType: "INSTALL"
  commands:
  - commandUnitType: DOWNLOAD_ARTIFACT
    deploymentType: SSH
    name: Download Artifact
    scriptType: POWERSHELL
    workingDirectory: ${DownloadDirectory}
  - command: |-
      $serviceName="${ServiceName}"
      $releaseId="${ReleaseNo}"
      $artifactFilename = "${DownloadDirectory}" + "\" + "${artifact.fileName}"
      $appPhysicalDirectory=$env:SYSTEMDRIVE + "\Artifacts\" + $serviceName + "\release-" + $releaseId

      Write-Host "Extracting package from" $artifactFilename "to" $appPhysicalDirectory
      Expand-Archive -Path $artifactFilename -DestinationPath $appPhysicalDirectory -Force
      Write-Host "Done."
    commandUnitType: EXEC
    deploymentType: SSH
    name: Expand Artifacts
    scriptType: POWERSHELL
  - command: |-
      Import-Module WebAdministration

      $AppPoolName = "${AppPoolName}"
      $AppPoolDotNetVersion = "${AppPoolDotNetVersion}"

      if (!(Test-Path IIS:\AppPools\$AppPoolName -pathType container))
      {
          Write-Host "Creating AppPool:" $AppPoolName
          $appPool = New-Item IIS:\AppPools\$AppPoolName
      }
      else
      {
          Write-Host "Updating AppPool:" $AppPoolName
          $appPool = Get-Item IIS:\AppPools\$AppPoolName
      }

      $appPool | Set-ItemProperty -Name "managedRuntimeVersion" -Value $AppPoolDotNetVersion

      Get-Item IIS:\AppPools\$AppPoolName | ft
      Write-Host "Done."
    commandUnitType: EXEC
    deploymentType: SSH
    name: Create AppPool
    scriptType: POWERSHELL
  - command: |-
      Import-Module WebAdministration

      $releaseId="${ReleaseNo}"
      $SiteName = "${ServiceName}"
      $SiteProtocol = "http"
      $SitePort=80
      $SiteHostName = "*"
      $SitePhysicalDirectory = $env:SYSTEMDRIVE + "\Artifacts\" + $SiteName + "\release-" + $releaseId
      $AppPoolName = "${AppPoolName}"

      if (!(Test-Path IIS:\Sites\$SiteName -pathType container))
      {
          $site = New-Item IIS:\Sites\$SiteName -physicalPath $sitePhysicalDirectory -bindings @{protocol=$SiteProtocol;bindingInformation=":"+$SitePort+":"+$SiteHostName} -ApplicationPool $AppPoolName -AutoStart $true
          Write-Host "Created Website:" $SiteName
      }
      else
      {
          $site = Get-Item IIS:\Sites\$SiteName
          $Site | Set-ItemProperty -Name "physicalPath" -Value $sitePhysicalDirectory
          $Site | Set-ItemProperty -Name "bindings" -Value @{protocol=$SiteProtocol;bindingInformation=":"+$SitePort+":"+$SiteHostName}
          Write-Host "Updated Website:" $SiteName
      }

      Start-WebSite $SiteName
      Get-Item IIS:\Sites\$SiteName
      Write-Host "Done."
    commandUnitType: EXEC
    deploymentType: SSH
    name: Create Website
    scriptType: POWERSHELL