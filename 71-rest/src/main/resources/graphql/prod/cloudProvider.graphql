extend type Query {
  # Get details about cloud provider
  cloudProvider(cloudProviderId: String!): CloudProvider @dataFetcher(name: cloudProvider)

  # Will remove it once authentication is available
  cloudProviders: CloudProviderConnection @dataFetcher(name: cloudProviderConnection)
}

enum CloudProviderFilterType {
  CloudProvider
  Type
  CreatedAt
}

input CloudProviderFilter {
  type: CloudProviderFilterType
  stringFilter: StringFilter
  numberFilter: NumberFilter
}

interface CloudProvider {
  id: String
  name: String
  description: String
  createdAt: DateTime
  createdBy: User
}

type CloudProviderConnection {
  pageInfo: PageInfo
  nodes: [CloudProvider]
}

type AwsCloudProvider implements CloudProvider {
  id: String
  name: String
  description: String
  createdAt: DateTime
  createdBy: User
}

type PhysicalDataCenterCloudProvider implements CloudProvider {
  id: String
  name: String
  description: String
  createdAt: DateTime
  createdBy: User
}

type AzureCloudProvider implements CloudProvider {
  id: String
  name: String
  description: String
  createdAt: DateTime
  createdBy: User
}

type GcpCloudProvider implements CloudProvider {
  id: String
  name: String
  description: String
  createdAt: DateTime
  createdBy: User
}

type KubernetesCloudProvider implements CloudProvider {
  id: String
  name: String
  description: String
  createdAt: DateTime
  createdBy: User
}

type PcfCloudProvider implements CloudProvider {
  id: String
  name: String
  description: String
  createdAt: DateTime
  createdBy: User
}
