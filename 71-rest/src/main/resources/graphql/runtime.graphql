extend type Query {
  # Get the execution status of a workflow
  execution(executionId: String!): Execution @dataFetcher(name: "execution")

  # Get the list of executions.
  executionsByApplication(
    applicationId: String!
    limit: Int!
    offset: Int
    statuses: [ExecutionStatus]
    from: DateTime
    to: DateTime
  ): ExecutionConnection @dataFetcher(name: "executionConnection")
  executionsByWorkflow(
    workflowId: String!
    limit: Int!
    offset: Int
    statuses: [ExecutionStatus]
    from: DateTime
    to: DateTime
  ): ExecutionConnection @dataFetcher(name: "executionConnection")
  executionsByPipeline(
    pipelineId: String!
    limit: Int!
    offset: Int
    statuses: [ExecutionStatus]
    from: DateTime
    to: DateTime
  ): ExecutionConnection @dataFetcher(name: "executionConnection")
  executionsByService(
    serviceId: String!
    limit: Int!
    offset: Int
    statuses: [ExecutionStatus]
    from: DateTime
    to: DateTime
  ): ExecutionConnection @dataFetcher(name: "executionConnection")
}

enum ExecutionStatus {
  ABORTED
  ERROR
  FAILED
  PAUSED
  QUEUED
  RESUMED
  RUNNING
  SUCCESS
  WAITING
  SKIPPED
  REJECTED
  EXPIRED
}

interface Execution {
  id: String
  queuedTime: DateTime
  startTime: DateTime
  endTime: DateTime
  status: ExecutionStatus
}

type ExecutionConnection {
  pageInfo: PageInfo
  nodes: [Execution]
}

# Type for workflow execution
type WorkflowExecution implements Execution {
  # Workflow Execution Id
  id: String

  # DateTime when execution started
  queuedTime: DateTime

  # DateTime when execution started
  startTime: DateTime

  # DateTime when execution ended
  endTime: DateTime

  # Status of the workflow
  status: ExecutionStatus
}

# Type for pipeline execution
type PipelineExecution implements Execution {
  # Workflow Execution Id
  id: String

  # DateTime when execution started
  queuedTime: DateTime

  # DateTime when execution started
  startTime: DateTime

  # DateTime when execution ended
  endTime: DateTime

  # Status of the workflow
  status: ExecutionStatus
}
