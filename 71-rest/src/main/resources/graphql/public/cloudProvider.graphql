extend type Query {
  # Get details about a Cloud Provider.
  cloudProvider(cloudProviderId: String!): CloudProvider @dataFetcher(name: cloudProvider)

  # Get details about Cloud Providers.
  cloudProviders(filters: [CloudProviderFilter], limit: Int!, offset: Int): CloudProviderConnection
    @dataFetcher(name: cloudProviderConnection)
}

input CloudProviderFilter {
  cloudProvider: IdFilter
  cloudProviderType: CloudProviderTypeFilter
  createdAt: TimeFilter
}

input CloudProviderTypeFilter {
  operator: EnumOperator
  values: [CloudProviderType]
}

enum CloudProviderType {
  PHYSICAL_DATA_CENTER
  AWS
  AZURE
  GCP
  KUBERNETES_CLUSTER
  PCF
}

interface CloudProvider {
  id: String
  name: String
  description: String
  createdAt: DateTime
  createdBy: User
}

type CloudProviderConnection {
  pageInfo: PageInfo
  nodes: [CloudProvider]
}

type AwsCloudProvider implements CloudProvider {
  id: String
  name: String
  description: String
  createdAt: DateTime
  createdBy: User
}

type PhysicalDataCenterCloudProvider implements CloudProvider {
  id: String
  name: String
  description: String
  createdAt: DateTime
  createdBy: User
}

type AzureCloudProvider implements CloudProvider {
  id: String
  name: String
  description: String
  createdAt: DateTime
  createdBy: User
}

type GcpCloudProvider implements CloudProvider {
  id: String
  name: String
  description: String
  createdAt: DateTime
  createdBy: User
}

type KubernetesCloudProvider implements CloudProvider {
  id: String
  name: String
  description: String
  createdAt: DateTime
  createdBy: User
}

type PcfCloudProvider implements CloudProvider {
  id: String
  name: String
  description: String
  createdAt: DateTime
  createdBy: User
}
