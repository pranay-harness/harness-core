extend type Query {
  # Get a pipeline object by ID
  pipeline(pipelineId: String!): Pipeline @dataFetcher(name: pipeline)

  pipelines(filters: [PipelineFilter], limit: Int!, offset: Int): PipelineConnection
    @dataFetcher(name: pipelineConnection)
}

enum PipelineFilterType {
  Application
  Pipeline
}

input PipelineFilter {
  application: IdFilter
  pipeline: IdFilter
}

# Type for pipeline
type Pipeline {
  # Pipeline Id
  id: String

  # Name of the pipeline
  name: String

  # Description of the pipeline
  description: String

  createdAt: DateTime
  createdBy: User
}

type PipelineConnection {
  pageInfo: PageInfo
  nodes: [Pipeline]
}
