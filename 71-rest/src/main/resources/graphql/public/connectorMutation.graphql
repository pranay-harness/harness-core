extend type Mutation {
  # Creates a new Connector and returns it
  createConnector(input: CreateConnectorInput!): CreateConnectorPayload @dataFetcher(name: createConnector)
  # Updates a Connector and returns it.
  updateConnector(input: UpdateConnectorInput!): UpdateConnectorPayload @dataFetcher(name: updateConnector)
  # Deletes a Connector.
  deleteConnector(input: DeleteConnectorInput!): DeleteConnectorPayload @dataFetcher(name: deleteConnector)
}

input CreateConnectorInput {
  clientMutationId: String
  connectorType: ConnectorType!
  gitConnector: GitConnectorInput
  dockerConnector: DockerConnectorInput
}

input UpdateConnectorInput {
  clientMutationId: String
  connectorId: String!
  connectorType: ConnectorType!
  gitConnector: GitConnectorInput
  dockerConnector: DockerConnectorInput
}

input DeleteConnectorInput {
  clientMutationId: String
  connectorId: String!
}

type CreateConnectorPayload {
  clientMutationId: String
  connector: Connector
}

type UpdateConnectorPayload {
  clientMutationId: String
  connector: Connector
}

type DeleteConnectorPayload {
  clientMutationId: String
}

input GitConnectorInput {
  name: String!
  userName: String
  URL: String!
  urlType: UrlType!
  branch: String
  passwordSecretId: String
  sshSettingId: String
  generateWebhookUrl: Boolean
  customCommitDetails: CustomCommitDetailsInput
}

input CustomCommitDetailsInput {
  authorName: String
  authorEmailId: String
  commitMessage: String
}

input DockerConnectorInput {
  name: String!
  URL: String!
  userName: String
  passwordSecretId: String
}
