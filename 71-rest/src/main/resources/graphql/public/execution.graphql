extend type Query {
  # Get the execution status of a Workflow.
  execution(executionId: String!): Execution @dataFetcher(name: execution)

  # Get a list of executions, with filtering options.
  executions(filters: [ExecutionFilter], limit: Int!, offset: Int): ExecutionConnection
    @dataFetcher(name: executionConnection)
}

input ExecutionFilter {
  application: IdFilter
  service: IdFilter
  cloudProvider: IdFilter
  environment: IdFilter
  status: IdFilter
  endTime: TimeFilter
  startTime: TimeFilter
  duration: NumberFilter
  triggeredBy: IdFilter
  trigger: IdFilter
  workflow: IdFilter
  pipeline: IdFilter
  creationTime: TimeFilter
  tag: DeploymentTagFilter
}

input DeploymentTagFilter {
  entityType: DeploymentTagType
  tags: [TagInput]
}

enum DeploymentTagType {
  APPLICATION
  SERVICE
  ENVIRONMENT
}

enum ExecutionStatus {
  ABORTED
  ERROR
  FAILED
  PAUSED
  QUEUED
  RESUMED
  RUNNING
  SUCCESS
  WAITING
  SKIPPED
  REJECTED
  EXPIRED
}

enum ExecuteOptions {
  WEB_UI
}

type ExecutedByUser {
  user: User
  using: ExecuteOptions
}

type ExecutedAlongPipeline {
  execution: PipelineExecution @dataFetcher(name: execution)
}

type ExecutedByTrigger {
  trigger: Trigger @dataFetcher(name: trigger)
}

union Cause = ExecutedByUser | ExecutedAlongPipeline | ExecutedByTrigger

interface Execution {
  id: String
  application: Application
  createdAt: DateTime
  startedAt: DateTime
  endedAt: DateTime
  status: ExecutionStatus
  cause: Cause
  notes: String
}

type ExecutionConnection {
  pageInfo: PageInfo
  nodes: [Execution]
}

# Type for workflow execution
type WorkflowExecution implements Execution {
  # Workflow Execution Id
  id: String

  application: Application
    @dataFetcher(name: application, useBatch: true, contextFieldArgsMap: "{ \"executionId\": \"id\"}")

  # DateTime when execution started
  createdAt: DateTime

  # DateTime when execution started
  startedAt: DateTime

  # DateTime when execution ended
  endedAt: DateTime

  # Status of the workflow
  status: ExecutionStatus

  outcomes: OutcomeConnection @dataFetcher(name: outcomeConnection, contextFieldArgsMap: "{ \"executionId\": \"id\"}")

  workflow: Workflow @dataFetcher(name: workflow, contextFieldArgsMap: "{ \"executionId\": \"id\"}")

  cause: Cause

  notes: String
}

# Type for pipeline execution
type PipelineExecution implements Execution {
  # Workflow Execution Id
  id: String

  application: Application
    @dataFetcher(name: application, useBatch: true, contextFieldArgsMap: "{ \"executionId\": \"id\"}")

  # DateTime when execution started
  createdAt: DateTime

  # DateTime when execution started
  startedAt: DateTime

  # DateTime when execution ended
  endedAt: DateTime

  # Status of the workflow
  status: ExecutionStatus

  pipeline: Pipeline @dataFetcher(name: pipeline, contextFieldArgsMap: "{ \"executionId\": \"id\"}")

  cause: Cause

  notes: String

  memberExecutions: ExecutionConnection
    @dataFetcher(name: executionConnection, contextFieldArgsMap: "{ \"PipelineExecution\": \"id\"}")
}
