extend type Query {
  # Get the execution status of a workflow
  execution(executionId: String!): Execution @dataFetcher(name: execution)

  # Get the list of executions.
  executions(filters: [ExecutionFilter], limit: Int!, offset: Int): ExecutionConnection
    @dataFetcher(name: executionConnection)
}

enum ExecutionFilterType {
  Application
  Service
  Environment
  CloudProvider
  Status
  EndTime
  CreatedAt
  StartTime
  Duration
  Triggered_By
  Trigger
  Workflow
  Pipeline
}

input ExecutionFilter {
  type: ExecutionFilterType
  stringFilter: StringFilter
  numberFilter: NumberFilter
}

enum ExecutionStatus {
  ABORTED
  ERROR
  FAILED
  PAUSED
  QUEUED
  RESUMED
  RUNNING
  SUCCESS
  WAITING
  SKIPPED
  REJECTED
  EXPIRED
}

enum ExecuteOptions {
  WEB_UI
}

type ExecutedByUser {
  user: User
  using: ExecuteOptions
}

type ExecutedAlongPipeline {
  execution: PipelineExecution @dataFetcher(name: execution)
}

type ExecutedByTrigger {
  trigger: Trigger @dataFetcher(name: trigger)
}

union Cause = ExecutedByUser | ExecutedAlongPipeline | ExecutedByTrigger

interface Execution {
  id: String
  application: Application
  createdAt: Number
  startedAt: Number
  endedAt: Number
  status: ExecutionStatus
  cause: Cause
  notes: String
}

type ExecutionConnection {
  pageInfo: PageInfo
  nodes: [Execution]
}

# Type for workflow execution
type WorkflowExecution implements Execution {
  # Workflow Execution Id
  id: String

  application: Application
    @dataFetcher(name: application, useBatch: true, contextFieldArgsMap: "{ \"executionId\": \"id\"}")

  # DateTime when execution started
  createdAt: Number

  # DateTime when execution started
  startedAt: Number

  # DateTime when execution ended
  endedAt: Number

  # Status of the workflow
  status: ExecutionStatus

  outcomes: OutcomeConnection @dataFetcher(name: outcomeConnection, contextFieldArgsMap: "{ \"executionId\": \"id\"}")

  workflow: Workflow @dataFetcher(name: workflow, contextFieldArgsMap: "{ \"executionId\": \"id\"}")

  cause: Cause

  notes: String
}

# Type for pipeline execution
type PipelineExecution implements Execution {
  # Workflow Execution Id
  id: String

  application: Application @dataFetcher(name: application, contextFieldArgsMap: "{ \"executionId\": \"id\"}")

  # DateTime when execution started
  createdAt: Number

  # DateTime when execution started
  startedAt: Number

  # DateTime when execution ended
  endedAt: Number

  # Status of the workflow
  status: ExecutionStatus

  pipeline: Pipeline @dataFetcher(name: pipeline, contextFieldArgsMap: "{ \"executionId\": \"id\"}")

  cause: Cause

  notes: String
}
