directive @dataFetcher(name: String!, contextFieldArgsMap: String, batchLoader: String) on FIELD_DEFINITION

schema {
  query: Query
}

# Harness GraphQL SDL details
type Query {
  # Get count of instances in your application
  # Taking accountId as input temporarily since there is no auth support as of now.
  #  instanceCount(accountId: String!, instanceCountType: InstanceCountType = TOTAL): InstanceCount
  #    @dataFetcher(name: "instanceCount")

  instancesByService(serviceId: String, limit: Int!, offset: Int): InstanceConnection
    @dataFetcher(name: "instancesByService")

  instancesByEnvironment(environmentId: String, limit: Int!, offset: Int): InstanceConnection
    @dataFetcher(name: "instancesByEnvironment")

  #Adding accountId as input temporarily since there is no auth support as of now
  instancesByEnvironmentType(
    accountId: String!
    envType: EnvironmentType
    limit: Int!
    offset: Int
  ): InstanceConnection @dataFetcher(name: "instancesByEnvType")

  # Get details about a service
  service(serviceId: String!): Service @dataFetcher(name: "service")

  # Get list of services for applicationId. It will return paginated data
  services(applicationId: String!, limit: Int!, offset: Int): ServiceConnection @dataFetcher(name: "serviceConnection")
}

enum InstanceType {
  PHYSICAL_HOST_INSTANCE
  EC2_CLOUD_INSTANCE
  GCP_CLOUD_INSTANCE
  ECS_CONTAINER_INSTANCE
  KUBERNETES_CONTAINER_INSTANCE
  PCF_INSTANCE
}

type InstanceCount {
  count: Int
  instanceCountType: InstanceCountType
}

type Instance {
  id: String
  type: InstanceType
}

type InstanceConnection {
  pageInfo: PageInfo
  nodes: [Instance]
}

enum InstanceCountType {
  TOTAL
  NINETY_FIVE_PERCENTILE
}
