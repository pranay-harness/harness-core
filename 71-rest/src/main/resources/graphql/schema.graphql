directive @dataFetcher(name: DataFetcherEnum!, contextFieldArgsMap: String) on FIELD_DEFINITION

schema {
  query: Query
}

# Harness GraphQL SDL details
type Query {
  # Get count of instances in your application
  # Taking accountId as input temporarily since there is no auth support as of now.
  instanceCount(accountId: String!, instanceCountType: InstanceCountType = TOTAL): InstanceCount
    @dataFetcher(name: instanceCount)

  instances(
    serviceId: String
    environmentId: String
    envType: String
    accountId: String
    limit: Int!
    offset: Int
  ): InstanceConnection @dataFetcher(name: instanceConnection)
}

enum InstanceType {
  PHYSICAL_HOST_INSTANCE
  EC2_CLOUD_INSTANCE
  ECS_CONTAINER_INSTANCE
  KUBERNETES_CONTAINER_INSTANCE
  PCF_INSTANCE
}

type InstanceCount {
  count: Int
  instanceCountType: InstanceCountType
}

type Instance {
  id: String!
  type: InstanceType
  pcfInstanceInfo: PcfInstanceInfo!
  codeDeployInstanceInfo: CodeDeployInstanceInfo!
  ec2InstanceInfo: Ec2InstanceInfo!
  k8sPodInfo: K8sPodInfo!
  physicalHostInstanceInfo: PhysicalHostInstanceInfo!
}

type PhysicalHostInstanceInfo {
  hostId: String!
  hostName: String!
  hostPublicDns: String!
}

type InstanceConnection {
  pageInfo: PageInfo
  nodes: [Instance]
}

enum InstanceCountType {
  TOTAL
  NINETY_FIVE_PERCENTILE
}

type K8sPodInfo {
  releaseName: String!
  podName: String!
  ip: String!
  namespace: String!
  containers: [K8sContainerInfo]!
}

type K8sContainerInfo {
  containerId: String!
  name: String!
  image: String!
}

type Ec2InstanceInfo {
  hostId: String!
  hostName: String!
  hostPublicDns: String!
}

type PcfInstanceInfo {
  id: String!
  organization: String!
  space: String
  pcfApplicationName: String!
  pcfApplicationGuid: String
  instanceIndex: String
}

type CodeDeployInstanceInfo {
  hostId: String!
  hostName: String!
  hostPublicDns: String!
  deploymentId: String!
}

type EcsContainerInfo {
  clusterName: String!
  taskArn: String!
  taskDefinitionArn: String!
  serviceName: String!
  version: String!
  startedAt: DateTime
}
