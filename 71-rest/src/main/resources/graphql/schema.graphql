schema {
  query: Query
}

type Query {
  workflow(id: String!, appId: String!): Workflow
  workflows(appId: String!, limit: Int, offset: Int): PagedData
  workflowExecution(workflowId: String!, appId: String!, serviceId: String, envId: String) : WorkflowExecution
  workflowExecutionList(workflowId: String!, appId: String!, envId: String!, limit: Int, offset: Int): PagedData
  deployedArtifacts(appId: String!, envId: String!, serviceId: String!): [Artifact]
}

scalar DateTime

interface DebugInfo {
  debugInfo: String
}

type WorkflowExecution implements DebugInfo {
  id: String
  name: String
  status: String
  startTime: DateTime
  endTime: DateTime
  debugInfo: String
}

type Workflow implements DebugInfo {
  id: String
  name: String
  workflowType: String
  description: String
  templatized: Boolean
  services: [Service]
  debugInfo: String
}

type Service {
   name: String
   description: String
   artifactType: String
   deploymentType: String
}

type PagedData {
  total: Int
  offset: Int
  limit: Int
  data: [Result]
  debugInfo: String
}

union Result = Workflow | WorkflowExecution

type Artifact implements DebugInfo {
    id: String
    sourceName: String
    displayName: String
    buildNo: String
    workflowExecutionName: String
    pipelineflowExecutionName: String
    lastDeployedAt: Long
    lastDeployedBy: String
    debugInfo: String
}

