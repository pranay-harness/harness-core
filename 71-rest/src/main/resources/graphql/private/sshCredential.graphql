input SSHCredentialInput {
  name: String!
  authenticationScheme: SSHAuthenticationScheme
  sshAuthentication: SSHAuthenticationInput
  kerberosAuthentication: KerberosAuthenticationInput
  usageScope: UsageScopeInput
}

input UpdateSSHCredential {
  name: String
  authenticationScheme: SSHAuthenticationScheme
  sshAuthentication: SSHAuthenticationInput
  kerberosAuthentication: KerberosAuthenticationInput
  usageScope: UsageScopeInput
}

input SSHAuthenticationInput {
  userName: String!
  port: Int!
  sshAuthenticationMethod: SSHAuthenticationMethod!
}

input SSHAuthenticationMethod {
  sshCredentialType: SSHCredentialType!
  inlineSSHKey: InlineSSHKey
  sshKeyFile: SSHKeyFile
  serverPassword: SSHPassword
}

input InlineSSHKey {
  sshKey: String!
  passphrase: String
}

input SSHKeyFile {
  path: String!
  passphrase: String
}

input SSHPassword {
  password: String!
}

input KerberosAuthenticationInput {
  principal: String!
  realm: String!
  port: Int!
  tgtGenerationMethod: TGTGenerationMethod
}

input TGTGenerationMethod {
  tgtGenerationUsing: TGTGenerationUsing!
  keyTabFile: KeyTabFile
  kerberosPassword: KerberosPassword
}

input KeyTabFile {
  filePath: String!
}

input KerberosPassword {
  password: String!
}

enum SSHAuthenticationScheme {
  SSH
  KERBEROS
}

enum SSHCredentialType {
  SSH_KEY
  SSH_KEY_FILE_PATH
  PASSWORD
}

type SSHCredential implements Secret {
  id: String
  name: String
  secretType: SecretType
  authenticationType: SSHAuthenticationType
  usageScope: UsageScope
}

union SSHAuthenticationType = SSHAuthentication | KerberosAuthentication

type SSHAuthentication {
  userName: String
  port: Int
}

type KerberosAuthentication {
  principal: String
  realm: String
  port: Int
}

enum TGTGenerationUsing {
  KEY_TAB_FILE
  PASSWORD
}
