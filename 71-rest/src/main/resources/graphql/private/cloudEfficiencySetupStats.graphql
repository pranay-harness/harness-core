extend type Query {
  eksClusterStats(filters: [CESetupFilter]): eksClusterData @dataFetcher(name: eksClusterStats)
  linkedAccountStats(filters: [CESetupFilter], sortCriteria: [CESetupSortCriteria]): linkedAccountData
    @dataFetcher(name: linkedAccountStats)
  ceConnector(filters: [CESetupFilter]): ceConnectorData @dataFetcher(name: ceConnector)
  infraAccountConnectionDetail(infraType: infraTypesEnum): infraAccountConnectionData
    @dataFetcher(name: infraAccountConnection)
  overviewPageStats: OverviewStatsData @dataFetcher(name: overviewPageStats)
}

input CESetupSortCriteria {
  sortType: CESetupSortType
  sortOrder: SortOrder
}

enum CESetupSortType {
  status
}

type linkedAccountData {
  count: countStats
  linkedAccounts: [linkedAccount]
}

type infraAccountConnectionData {
  harnessAccountId: String
  externalId: String
  masterAccountCloudFormationTemplateLink: String
  linkedAccountCloudFormationTemplateLink: String
  masterAccountLaunchTemplateLink: String
  linkedAccountLaunchTemplateLink: String
}

type ceConnectorData {
  ceConnectors: [ceConnector]
}

type ceConnector {
  settingId: String
  accountName: String
  s3BucketName: String
  curReportName: String
  crossAccountRoleArn: String
  infraType: infraTypesEnum
  ceHealthStatus: CEHealthStatus
}

type countStats {
  countOfConnected: Number
  countOfNotConnected: Number
  countOfNotVerified: Number
}

type linkedAccount {
  id: String
  name: String
  arn: String
  masterAccountId: String
  accountStatus: accountStatusEnum
}

type eksClusterData {
  count: Number
  clusters: [eksCluster]
}

type eksCluster {
  id: String
  name: String
  region: String
  infraAccountId: String
  infraMasterAccountId: String
  parentAccountSettingId: String
  cloudProviderId: String
}

type OverviewStatsData {
  ceEnabledClusterPresent: Boolean
  cloudConnectorsPresent: Boolean
  awsConnectorsPresent: Boolean
  gcpConnectorsPresent: Boolean
  applicationDataPresent: Boolean
  clusterDataPresent: Boolean
}

input CESetupFilter {
  cloudProviderId: IdFilter
  infraMasterAccountId: IdFilter
  masterAccountSettingId: IdFilter
  settingId: IdFilter
}

enum infraTypesEnum {
  AWS
  GCP
}

enum accountStatusEnum {
  NOT_VERIFIED
  CONNECTED
  NOT_CONNECTED
}
