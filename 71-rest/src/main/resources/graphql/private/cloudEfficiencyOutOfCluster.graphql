extend type Query {
  outOfClusterTimeSeriesStats(
    filters: [OutOfClusterBillingFilter]
    aggregateFunction: [CCMAggregationFunction]
    groupBy: [OutOfClusterGroupBy]
    limit: Int
  ): OutOfClusterTimeSeriesStats @dataFetcher(name: outOfClusterTimeSeriesStats)
}

type OutOfClusterTimeSeriesStats {
  stats: [TimeSeriesDataPoints]
}

input OutOfClusterBillingFilter {
  startTime: TimeFilter
  endTime: TimeFilter
  awsStartTime: TimeFilter
  billingAccountId: IdFilter
  project: IdFilter
  product: IdFilter
  sku: IdFilter
  awsRegion: IdFilter
  likedAccount: IdFilter
  usageType: IdFilter
  instanceType: IdFilter
  service: IdFilter
  cloudProvider: IdFilter
}

input OutOfClusterGroupBy {
  entityGroupBy: OutOfClusterEntityGroupBy
  timeTruncGroupby: CETimeTruncGroupby
}

enum OutOfClusterEntityGroupBy {
  billingAccountId
  project
  projectId
  projectNumber
  product
  sku
  skuId
  region
  usageAmount
  usageUnit
  awsRegion
  likedAccount
  usageType
  instanceType
  service
}
