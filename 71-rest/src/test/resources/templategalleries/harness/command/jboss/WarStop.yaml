name: "Stop"
gallery: "Harness"
folderPath: "Harness/JBoss Commands"
version: "1"
description: "This is a command to stop service by invoking scripts over SSH to the individual instances."
keywords: [ssh, war, jboss, stop]
referencedTemplateUri: "Harness/JBoss Commands/Install:1"
variables:
- name: "RuntimePath"
  description: "Runtime path to install binaries."
templateObject:
  type: "SSH"
  commandType: "STOP"
  commands:
  - command: pgrep -f "\-Djboss.home.dir=$RuntimePath/jboss" | xargs kill
    commandUnitType: EXEC
    deploymentType: SSH
    name: Stop Service
    scriptType: BASH
    workingDirectory: "${RuntimePath}/jboss/bin"
  - command: |-
      i=0
      while [ "$i" -lt 30 ]
      do
        pgrep -f "\-Djboss.home.dir=$RUNTIME_PATH/jboss"
        rc=$?
        if [ "$rc" -eq 0 ]
        then
          sleep 1
          i=$((i+1))
        else
          exit 0
        fi
      done
      exit 1
    commandUnitType: PROCESS_CHECK_STOPPED
    deploymentType: SSH
    name: Process Stopped
    scriptType: BASH
  - command: |-
      standalone_xml="${RuntimePath}/jboss/standalone/configuration/standalone.xml"
      if [ -f "$standalone_xml" ]
      then
      port=$(grep "<socket-binding name=\"http\" port=\"\${jboss.http.port" "$standalone_xml" | cut -d ":" -f2 | cut -d "}" -f1)
      nc -v -z -w 5 localhost $port
      rc=$?
      if [ "$rc" -eq 0 ]
      then
      exit 1
      fi
      else
       echo "JBoss config file("$standalone_xml") does not exist.. skipping port check."
      fi
    commandUnitType: PORT_CHECK_CLEARED
    deploymentType: SSH
    name: Port Cleared
    scriptType: BASH
