// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io/harness/perpetualtask/instancesync/container_instance_sync_perpetual_task_params.proto

package io.harness.perpetualtask.instancesync;

/**
 * Protobuf type {@code io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams}
 */
@javax.annotation.
Generated(value = "protoc", comments = "annotations:ContainerInstanceSyncPerpetualTaskParams.java.pb.meta")
public final class ContainerInstanceSyncPerpetualTaskParams extends com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams)
    ContainerInstanceSyncPerpetualTaskParamsOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use ContainerInstanceSyncPerpetualTaskParams.newBuilder() to construct.
  private ContainerInstanceSyncPerpetualTaskParams(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ContainerInstanceSyncPerpetualTaskParams() {
    containerType_ = "";
  }

  @java.
  lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }
  private ContainerInstanceSyncPerpetualTaskParams(
      com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            containerType_ = s;
            break;
          }
          case 18: {
            io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams.Builder subBuilder = null;
            if (k8SContainerPerpetualTaskParams_ != null) {
              subBuilder = k8SContainerPerpetualTaskParams_.toBuilder();
            }
            k8SContainerPerpetualTaskParams_ = input.readMessage(
                io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams.parser(),
                extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(k8SContainerPerpetualTaskParams_);
              k8SContainerPerpetualTaskParams_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams.Builder subBuilder = null;
            if (containerServicePerpetualTaskParams_ != null) {
              subBuilder = containerServicePerpetualTaskParams_.toBuilder();
            }
            containerServicePerpetualTaskParams_ = input.readMessage(
                io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(containerServicePerpetualTaskParams_);
              containerServicePerpetualTaskParams_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParamsOuterClass
        .internal_static_io_harness_perpetualtask_instancesync_ContainerInstanceSyncPerpetualTaskParams_descriptor;
  }

  @java.
  lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
    return io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParamsOuterClass
        .internal_static_io_harness_perpetualtask_instancesync_ContainerInstanceSyncPerpetualTaskParams_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams.class,
            io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams.Builder.class);
  }

  public static final int CONTAINER_TYPE_FIELD_NUMBER = 1;
  private volatile java.lang.Object containerType_;
  /**
   * <code>string container_type = 1;</code>
   */
  public java.lang.String getContainerType() {
    java.lang.Object ref = containerType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      containerType_ = s;
      return s;
    }
  }
  /**
   * <code>string container_type = 1;</code>
   */
  public com.google.protobuf.ByteString getContainerTypeBytes() {
    java.lang.Object ref = containerType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      containerType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int K8S_CONTAINER_PERPETUAL_TASK_PARAMS_FIELD_NUMBER = 2;
  private io.harness.perpetualtask.instancesync
      .K8sContainerInstanceSyncPerpetualTaskParams k8SContainerPerpetualTaskParams_;
  /**
   * <code>.io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams
   * k8s_container_perpetual_task_params = 2;</code>
   */
  public boolean hasK8SContainerPerpetualTaskParams() {
    return k8SContainerPerpetualTaskParams_ != null;
  }
  /**
   * <code>.io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams
   * k8s_container_perpetual_task_params = 2;</code>
   */
  public io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams
  getK8SContainerPerpetualTaskParams() {
    return k8SContainerPerpetualTaskParams_ == null
        ? io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams.getDefaultInstance()
        : k8SContainerPerpetualTaskParams_;
  }
  /**
   * <code>.io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams
   * k8s_container_perpetual_task_params = 2;</code>
   */
  public io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParamsOrBuilder
  getK8SContainerPerpetualTaskParamsOrBuilder() {
    return getK8SContainerPerpetualTaskParams();
  }

  public static final int CONTAINER_SERVICE_PERPETUAL_TASK_PARAMS_FIELD_NUMBER = 3;
  private io.harness.perpetualtask.instancesync
      .ContainerServicePerpetualTaskParams containerServicePerpetualTaskParams_;
  /**
   * <code>.io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams
   * container_service_perpetual_task_params = 3;</code>
   */
  public boolean hasContainerServicePerpetualTaskParams() {
    return containerServicePerpetualTaskParams_ != null;
  }
  /**
   * <code>.io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams
   * container_service_perpetual_task_params = 3;</code>
   */
  public io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams
  getContainerServicePerpetualTaskParams() {
    return containerServicePerpetualTaskParams_ == null
        ? io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams.getDefaultInstance()
        : containerServicePerpetualTaskParams_;
  }
  /**
   * <code>.io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams
   * container_service_perpetual_task_params = 3;</code>
   */
  public io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParamsOrBuilder
  getContainerServicePerpetualTaskParamsOrBuilder() {
    return getContainerServicePerpetualTaskParams();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1)
      return true;
    if (isInitialized == 0)
      return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!getContainerTypeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, containerType_);
    }
    if (k8SContainerPerpetualTaskParams_ != null) {
      output.writeMessage(2, getK8SContainerPerpetualTaskParams());
    }
    if (containerServicePerpetualTaskParams_ != null) {
      output.writeMessage(3, getContainerServicePerpetualTaskParams());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1)
      return size;

    size = 0;
    if (!getContainerTypeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, containerType_);
    }
    if (k8SContainerPerpetualTaskParams_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getK8SContainerPerpetualTaskParams());
    }
    if (containerServicePerpetualTaskParams_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getContainerServicePerpetualTaskParams());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams)) {
      return super.equals(obj);
    }
    io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams other =
        (io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams) obj;

    if (!getContainerType().equals(other.getContainerType()))
      return false;
    if (hasK8SContainerPerpetualTaskParams() != other.hasK8SContainerPerpetualTaskParams())
      return false;
    if (hasK8SContainerPerpetualTaskParams()) {
      if (!getK8SContainerPerpetualTaskParams().equals(other.getK8SContainerPerpetualTaskParams()))
        return false;
    }
    if (hasContainerServicePerpetualTaskParams() != other.hasContainerServicePerpetualTaskParams())
      return false;
    if (hasContainerServicePerpetualTaskParams()) {
      if (!getContainerServicePerpetualTaskParams().equals(other.getContainerServicePerpetualTaskParams()))
        return false;
    }
    if (!unknownFields.equals(other.unknownFields))
      return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CONTAINER_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getContainerType().hashCode();
    if (hasK8SContainerPerpetualTaskParams()) {
      hash = (37 * hash) + K8S_CONTAINER_PERPETUAL_TASK_PARAMS_FIELD_NUMBER;
      hash = (53 * hash) + getK8SContainerPerpetualTaskParams().hashCode();
    }
    if (hasContainerServicePerpetualTaskParams()) {
      hash = (37 * hash) + CONTAINER_SERVICE_PERPETUAL_TASK_PARAMS_FIELD_NUMBER;
      hash = (53 * hash) + getContainerServicePerpetualTaskParams().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams parseFrom(
      com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams parseFrom(
      com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }
  public static io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }
  public static io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }
  public static io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams parseFrom(
      com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(
      io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams)
      io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParamsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParamsOuterClass
          .internal_static_io_harness_perpetualtask_instancesync_ContainerInstanceSyncPerpetualTaskParams_descriptor;
    }

    @java.
    lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
      return io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParamsOuterClass
          .internal_static_io_harness_perpetualtask_instancesync_ContainerInstanceSyncPerpetualTaskParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams.class,
              io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams.Builder.class);
    }

    // Construct using io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      containerType_ = "";

      if (k8SContainerPerpetualTaskParamsBuilder_ == null) {
        k8SContainerPerpetualTaskParams_ = null;
      } else {
        k8SContainerPerpetualTaskParams_ = null;
        k8SContainerPerpetualTaskParamsBuilder_ = null;
      }
      if (containerServicePerpetualTaskParamsBuilder_ == null) {
        containerServicePerpetualTaskParams_ = null;
      } else {
        containerServicePerpetualTaskParams_ = null;
        containerServicePerpetualTaskParamsBuilder_ = null;
      }
      return this;
    }

    @java.
    lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParamsOuterClass
          .internal_static_io_harness_perpetualtask_instancesync_ContainerInstanceSyncPerpetualTaskParams_descriptor;
    }

    @java.
    lang.Override
    public io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams getDefaultInstanceForType() {
      return io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams.getDefaultInstance();
    }

    @java.
    lang.Override
    public io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams build() {
      io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.
    lang.Override
    public io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams buildPartial() {
      io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams result =
          new io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams(this);
      result.containerType_ = containerType_;
      if (k8SContainerPerpetualTaskParamsBuilder_ == null) {
        result.k8SContainerPerpetualTaskParams_ = k8SContainerPerpetualTaskParams_;
      } else {
        result.k8SContainerPerpetualTaskParams_ = k8SContainerPerpetualTaskParamsBuilder_.build();
      }
      if (containerServicePerpetualTaskParamsBuilder_ == null) {
        result.containerServicePerpetualTaskParams_ = containerServicePerpetualTaskParams_;
      } else {
        result.containerServicePerpetualTaskParams_ = containerServicePerpetualTaskParamsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams) {
        return mergeFrom((io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams other) {
      if (other == io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams.getDefaultInstance())
        return this;
      if (!other.getContainerType().isEmpty()) {
        containerType_ = other.containerType_;
        onChanged();
      }
      if (other.hasK8SContainerPerpetualTaskParams()) {
        mergeK8SContainerPerpetualTaskParams(other.getK8SContainerPerpetualTaskParams());
      }
      if (other.hasContainerServicePerpetualTaskParams()) {
        mergeContainerServicePerpetualTaskParams(other.getContainerServicePerpetualTaskParams());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage =
            (io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object containerType_ = "";
    /**
     * <code>string container_type = 1;</code>
     */
    public java.lang.String getContainerType() {
      java.lang.Object ref = containerType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        containerType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string container_type = 1;</code>
     */
    public com.google.protobuf.ByteString getContainerTypeBytes() {
      java.lang.Object ref = containerType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        containerType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string container_type = 1;</code>
     */
    public Builder setContainerType(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      containerType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string container_type = 1;</code>
     */
    public Builder clearContainerType() {
      containerType_ = getDefaultInstance().getContainerType();
      onChanged();
      return this;
    }
    /**
     * <code>string container_type = 1;</code>
     */
    public Builder setContainerTypeBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      containerType_ = value;
      onChanged();
      return this;
    }

    private io.harness.perpetualtask.instancesync
        .K8sContainerInstanceSyncPerpetualTaskParams k8SContainerPerpetualTaskParams_;
    private com.google.protobuf
        .SingleFieldBuilderV3<io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams,
            io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams.Builder,
            io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParamsOrBuilder>
            k8SContainerPerpetualTaskParamsBuilder_;
    /**
     * <code>.io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams
     * k8s_container_perpetual_task_params = 2;</code>
     */
    public boolean hasK8SContainerPerpetualTaskParams() {
      return k8SContainerPerpetualTaskParamsBuilder_ != null || k8SContainerPerpetualTaskParams_ != null;
    }
    /**
     * <code>.io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams
     * k8s_container_perpetual_task_params = 2;</code>
     */
    public io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams
    getK8SContainerPerpetualTaskParams() {
      if (k8SContainerPerpetualTaskParamsBuilder_ == null) {
        return k8SContainerPerpetualTaskParams_ == null
            ? io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams.getDefaultInstance()
            : k8SContainerPerpetualTaskParams_;
      } else {
        return k8SContainerPerpetualTaskParamsBuilder_.getMessage();
      }
    }
    /**
     * <code>.io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams
     * k8s_container_perpetual_task_params = 2;</code>
     */
    public Builder setK8SContainerPerpetualTaskParams(
        io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams value) {
      if (k8SContainerPerpetualTaskParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        k8SContainerPerpetualTaskParams_ = value;
        onChanged();
      } else {
        k8SContainerPerpetualTaskParamsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams
     * k8s_container_perpetual_task_params = 2;</code>
     */
    public Builder setK8SContainerPerpetualTaskParams(
        io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams.Builder builderForValue) {
      if (k8SContainerPerpetualTaskParamsBuilder_ == null) {
        k8SContainerPerpetualTaskParams_ = builderForValue.build();
        onChanged();
      } else {
        k8SContainerPerpetualTaskParamsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams
     * k8s_container_perpetual_task_params = 2;</code>
     */
    public Builder mergeK8SContainerPerpetualTaskParams(
        io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams value) {
      if (k8SContainerPerpetualTaskParamsBuilder_ == null) {
        if (k8SContainerPerpetualTaskParams_ != null) {
          k8SContainerPerpetualTaskParams_ =
              io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams
                  .newBuilder(k8SContainerPerpetualTaskParams_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          k8SContainerPerpetualTaskParams_ = value;
        }
        onChanged();
      } else {
        k8SContainerPerpetualTaskParamsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams
     * k8s_container_perpetual_task_params = 2;</code>
     */
    public Builder clearK8SContainerPerpetualTaskParams() {
      if (k8SContainerPerpetualTaskParamsBuilder_ == null) {
        k8SContainerPerpetualTaskParams_ = null;
        onChanged();
      } else {
        k8SContainerPerpetualTaskParams_ = null;
        k8SContainerPerpetualTaskParamsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams
     * k8s_container_perpetual_task_params = 2;</code>
     */
    public io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams.Builder
    getK8SContainerPerpetualTaskParamsBuilder() {
      onChanged();
      return getK8SContainerPerpetualTaskParamsFieldBuilder().getBuilder();
    }
    /**
     * <code>.io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams
     * k8s_container_perpetual_task_params = 2;</code>
     */
    public io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParamsOrBuilder
    getK8SContainerPerpetualTaskParamsOrBuilder() {
      if (k8SContainerPerpetualTaskParamsBuilder_ != null) {
        return k8SContainerPerpetualTaskParamsBuilder_.getMessageOrBuilder();
      } else {
        return k8SContainerPerpetualTaskParams_ == null
            ? io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams.getDefaultInstance()
            : k8SContainerPerpetualTaskParams_;
      }
    }
    /**
     * <code>.io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams
     * k8s_container_perpetual_task_params = 2;</code>
     */
    private com.google.protobuf
        .SingleFieldBuilderV3<io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams,
            io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams.Builder,
            io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParamsOrBuilder>
        getK8SContainerPerpetualTaskParamsFieldBuilder() {
      if (k8SContainerPerpetualTaskParamsBuilder_ == null) {
        k8SContainerPerpetualTaskParamsBuilder_ =
            new com.google.protobuf
                .SingleFieldBuilderV3<io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams,
                    io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParams.Builder,
                    io.harness.perpetualtask.instancesync.K8sContainerInstanceSyncPerpetualTaskParamsOrBuilder>(
                    getK8SContainerPerpetualTaskParams(), getParentForChildren(), isClean());
        k8SContainerPerpetualTaskParams_ = null;
      }
      return k8SContainerPerpetualTaskParamsBuilder_;
    }

    private io.harness.perpetualtask.instancesync
        .ContainerServicePerpetualTaskParams containerServicePerpetualTaskParams_;
    private com.google.protobuf
        .SingleFieldBuilderV3<io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams,
            io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams.Builder,
            io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParamsOrBuilder>
            containerServicePerpetualTaskParamsBuilder_;
    /**
     * <code>.io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams
     * container_service_perpetual_task_params = 3;</code>
     */
    public boolean hasContainerServicePerpetualTaskParams() {
      return containerServicePerpetualTaskParamsBuilder_ != null || containerServicePerpetualTaskParams_ != null;
    }
    /**
     * <code>.io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams
     * container_service_perpetual_task_params = 3;</code>
     */
    public io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams
    getContainerServicePerpetualTaskParams() {
      if (containerServicePerpetualTaskParamsBuilder_ == null) {
        return containerServicePerpetualTaskParams_ == null
            ? io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams.getDefaultInstance()
            : containerServicePerpetualTaskParams_;
      } else {
        return containerServicePerpetualTaskParamsBuilder_.getMessage();
      }
    }
    /**
     * <code>.io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams
     * container_service_perpetual_task_params = 3;</code>
     */
    public Builder setContainerServicePerpetualTaskParams(
        io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams value) {
      if (containerServicePerpetualTaskParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        containerServicePerpetualTaskParams_ = value;
        onChanged();
      } else {
        containerServicePerpetualTaskParamsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams
     * container_service_perpetual_task_params = 3;</code>
     */
    public Builder setContainerServicePerpetualTaskParams(
        io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams.Builder builderForValue) {
      if (containerServicePerpetualTaskParamsBuilder_ == null) {
        containerServicePerpetualTaskParams_ = builderForValue.build();
        onChanged();
      } else {
        containerServicePerpetualTaskParamsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams
     * container_service_perpetual_task_params = 3;</code>
     */
    public Builder mergeContainerServicePerpetualTaskParams(
        io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams value) {
      if (containerServicePerpetualTaskParamsBuilder_ == null) {
        if (containerServicePerpetualTaskParams_ != null) {
          containerServicePerpetualTaskParams_ =
              io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams
                  .newBuilder(containerServicePerpetualTaskParams_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          containerServicePerpetualTaskParams_ = value;
        }
        onChanged();
      } else {
        containerServicePerpetualTaskParamsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams
     * container_service_perpetual_task_params = 3;</code>
     */
    public Builder clearContainerServicePerpetualTaskParams() {
      if (containerServicePerpetualTaskParamsBuilder_ == null) {
        containerServicePerpetualTaskParams_ = null;
        onChanged();
      } else {
        containerServicePerpetualTaskParams_ = null;
        containerServicePerpetualTaskParamsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams
     * container_service_perpetual_task_params = 3;</code>
     */
    public io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams.Builder
    getContainerServicePerpetualTaskParamsBuilder() {
      onChanged();
      return getContainerServicePerpetualTaskParamsFieldBuilder().getBuilder();
    }
    /**
     * <code>.io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams
     * container_service_perpetual_task_params = 3;</code>
     */
    public io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParamsOrBuilder
    getContainerServicePerpetualTaskParamsOrBuilder() {
      if (containerServicePerpetualTaskParamsBuilder_ != null) {
        return containerServicePerpetualTaskParamsBuilder_.getMessageOrBuilder();
      } else {
        return containerServicePerpetualTaskParams_ == null
            ? io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams.getDefaultInstance()
            : containerServicePerpetualTaskParams_;
      }
    }
    /**
     * <code>.io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams
     * container_service_perpetual_task_params = 3;</code>
     */
    private com.google.protobuf
        .SingleFieldBuilderV3<io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams,
            io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams.Builder,
            io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParamsOrBuilder>
        getContainerServicePerpetualTaskParamsFieldBuilder() {
      if (containerServicePerpetualTaskParamsBuilder_ == null) {
        containerServicePerpetualTaskParamsBuilder_ =
            new com.google.protobuf
                .SingleFieldBuilderV3<io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams,
                    io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParams.Builder,
                    io.harness.perpetualtask.instancesync.ContainerServicePerpetualTaskParamsOrBuilder>(
                    getContainerServicePerpetualTaskParams(), getParentForChildren(), isClean());
        containerServicePerpetualTaskParams_ = null;
      }
      return containerServicePerpetualTaskParamsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams)
  }

  // @@protoc_insertion_point(class_scope:io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams)
  private static final io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams();
  }

  public static io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ContainerInstanceSyncPerpetualTaskParams> PARSER =
      new com.google.protobuf.AbstractParser<ContainerInstanceSyncPerpetualTaskParams>() {
        @java.lang.Override
        public ContainerInstanceSyncPerpetualTaskParams parsePartialFrom(
            com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ContainerInstanceSyncPerpetualTaskParams(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<ContainerInstanceSyncPerpetualTaskParams> parser() {
    return PARSER;
  }

  @java.
  lang.Override
  public com.google.protobuf.Parser<ContainerInstanceSyncPerpetualTaskParams> getParserForType() {
    return PARSER;
  }

  @java.
  lang.Override
  public io.harness.perpetualtask.instancesync.ContainerInstanceSyncPerpetualTaskParams getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
