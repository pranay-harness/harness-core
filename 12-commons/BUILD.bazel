load("@rules_java//java:defs.bzl", "java_binary")
load("//:GenTestRules.bzl", "run_tests")
load("//tools/checkstyle:rules.bzl", "checkstyle")
load("//:macros.bzl", "sources")

sources()

java_library(
    name = "maven_deps",
    exports = [
            "@maven//:ch_qos_logback_contrib_logback_jackson",
            "@maven//:ch_qos_logback_contrib_logback_json_classic",
            "@maven//:com_auth0_java_jwt",
            "@maven//:com_esotericsoftware_kryo",
            "@maven//:com_fasterxml_jackson_core_jackson_annotations",
            "@maven//:com_fasterxml_jackson_core_jackson_databind",
            "@maven//:com_fasterxml_jackson_core_jackson_core",
            "@maven//:com_fasterxml_jackson_dataformat_jackson_dataformat_yaml",
            "@maven//:com_fasterxml_uuid_java_uuid_generator",
            "@maven//:com_github_reinert_jjschema",
            "@maven//:com_google_auth_google_auth_library_credentials",
            "@maven//:com_google_cloud_google_cloud_logging",
            "@maven//:com_google_code_findbugs_annotations",
            "@maven//:com_google_guava_guava",
            "@maven//:com_google_inject_extensions_guice_multibindings",
            "@maven//:com_google_inject_guice",
            "@maven//:com_hazelcast_hazelcast",
            "@maven//:com_jayway_jsonpath_json_path",
            "@maven//:com_nimbusds_nimbus_jose_jwt",
            "@maven//:com_squareup_retrofit2_converter_jackson",
            "@maven//:com_squareup_retrofit2_retrofit",
            "@maven//:commons_codec_commons_codec",
            "@maven//:commons_validator_commons_validator",
            "@maven//:de_javakaffee_kryo_serializers",
            "@maven//:io_dropwizard_dropwizard_lifecycle",
            "@maven//:io_dropwizard_dropwizard_logging",
            "@maven//:io_dropwizard_metrics_metrics_healthchecks",
            "@maven//:io_grpc_grpc_api",
            "@maven//:io_prometheus_simpleclient",
            "@maven//:io_prometheus_simpleclient_dropwizard",
            "@maven//:javax_ws_rs_javax_ws_rs_api",
            "@maven//:net_sf_json_lib_json_lib_jdk15",
            "@maven//:org_apache_commons_commons_csv",
            "@maven//:org_apache_commons_commons_jexl3",
            "@maven//:org_apache_commons_commons_lang3",
            "@maven//:org_apache_commons_commons_text",
            "@maven//:org_apache_httpcomponents_fluent_hc",
            "@maven//:org_codehaus_janino_janino",
            "@maven//:org_eclipse_jgit_org_eclipse_jgit",
            "@maven//:org_javassist_javassist",
            "@maven//:org_modelmapper_modelmapper",
            "@maven//:org_mongodb_morphia_morphia",
            "@maven//:org_projectlombok_lombok",
            "@maven//:org_reflections_reflections",
            "@maven//:org_slf4j_slf4j_api",
            "@maven//:org_zeroturnaround_zt_exec",
            "@maven//:org_jooq_joor",
            "@maven//:net_javacrumbs_json_unit_json_unit_fluent",
            "@maven//:org_powermock_powermock_reflect",
            "@maven//:org_powermock_powermock_core",
            "@maven//:org_powermock_powermock_api_mockito",
            "@maven//:org_powermock_powermock_api_mockito_common",
            "@maven//:org_powermock_powermock_api_support",
            "@maven//:io_github_resilience4j_resilience4j_circuitbreaker",
            "@maven//:io_github_resilience4j_resilience4j_retrofit",
            "@maven//:io_github_resilience4j_resilience4j_retry",
            "@maven//:com_google_http_client_google_http_client",
            "@maven//:javax_validation_validation_api"
        ],
    visibility = ["//visibility:public"],
)

java_library(
    name = "module",
    srcs = glob(["src/main/**/*.java"]),
    deps = [
        "maven_deps",
        "//:lombok",
        "//990-commons-test:module"
    ],
   resources = [
           "//12-commons/src/main/resources:resource",
           "//12-commons/src/main/resources-filtered:resource",
           "//12-commons/src/test/resources:resource",
      ],
   visibility = ["//visibility:public"],
)

java_library(
    name = "tests",
    srcs = glob(["src/test/**/*.java"]),
    deps = [
        "maven_deps",
        "module",
        "//990-commons-test:module",
        "//:lombok",
    ],
   visibility = ["//visibility:public"],
)

run_tests(
    test_files = glob(["src/test/**/*Test.java"],exclude = ["**/CommonsTest.java"],),
    deps = [
        "@maven//:org_jacoco_org_jacoco_agent",
        "maven_deps",
        "module",
    	"//990-commons-test:module",
        "//:lombok",
        "tests"
    ],
    runtime_deps = [
        "//12-commons/src/main/resources:resources",
        "//12-commons/src/main/resources-filtered:resources",
        "//12-commons/src/test/resources:resources",
        "//990-commons-test/src/main/resources:resources",
        "@maven//:javax_ws_rs_javax_ws_rs_api",
    ],
    testonly = 1,
)

checkstyle()