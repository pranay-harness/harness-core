// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io/harness/delegate/task.proto

package io.harness.delegate;

/**
 * <pre>
 * Task details represent the object that will be propagated over the wire to the task executor Task executor needs to
 * be able to make sense of this data and accomplish the needed work from the task.
 * </pre>
 *
 * Protobuf type {@code io.harness.delegate.TaskDetails}
 */
@javax.annotation.Generated(value = "protoc", comments = "annotations:TaskDetails.java.pb.meta")
public final class TaskDetails extends com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:io.harness.delegate.TaskDetails)
    TaskDetailsOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use TaskDetails.newBuilder() to construct.
  private TaskDetails(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TaskDetails() {}

  @java.
  lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }
  private TaskDetails(
      com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 18: {
            io.harness.delegate.TaskType.Builder subBuilder = null;
            if (type_ != null) {
              subBuilder = type_.toBuilder();
            }
            type_ = input.readMessage(io.harness.delegate.TaskType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(type_);
              type_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            parametersCase_ = 3;
            parameters_ = input.readBytes();
            break;
          }
          case 34: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (executionTimeout_ != null) {
              subBuilder = executionTimeout_.toBuilder();
            }
            executionTimeout_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(executionTimeout_);
              executionTimeout_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              expressions_ = com.google.protobuf.MapField.newMapField(ExpressionsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000008;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String> expressions__ =
                input.readMessage(ExpressionsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            expressions_.getMutableMap().put(expressions__.getKey(), expressions__.getValue());
            break;
          }
          case 48: {
            expressionFunctorToken_ = input.readInt64();
            break;
          }
          default: {
            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return io.harness.delegate.Task.internal_static_io_harness_delegate_TaskDetails_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.
  lang.Override
  protected com.google.protobuf.MapField internalGetMapField(int number) {
    switch (number) {
      case 5:
        return internalGetExpressions();
      default:
        throw new RuntimeException("Invalid map field number: " + number);
    }
  }
  @java.
  lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
    return io.harness.delegate.Task.internal_static_io_harness_delegate_TaskDetails_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.harness.delegate.TaskDetails.class, io.harness.delegate.TaskDetails.Builder.class);
  }

  private int bitField0_;
  private int parametersCase_ = 0;
  private java.lang.Object parameters_;
  public enum ParametersCase implements com
  .google.protobuf.Internal.EnumLite {
    KRYO_PARAMETERS(3), PARAMETERS_NOT_SET(0);
    private final int value;
    private ParametersCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ParametersCase valueOf(int value) {
      return forNumber(value);
    }

    public static ParametersCase forNumber(int value) {
      switch (value) {
        case 3:
          return KRYO_PARAMETERS;
        case 0:
          return PARAMETERS_NOT_SET;
        default:
          return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ParametersCase getParametersCase() {
    return ParametersCase.forNumber(parametersCase_);
  }

  public static final int TYPE_FIELD_NUMBER = 2;
  private io.harness.delegate.TaskType type_;
  /**
   * <pre>
   * Arbitrary globally unique task type identifier. The delegate system will use it to make the connection to the
   * actual task executor. TODO: more details
   * </pre>
   *
   * <code>.io.harness.delegate.TaskType type = 2;</code>
   */
  public boolean hasType() {
    return type_ != null;
  }
  /**
   * <pre>
   * Arbitrary globally unique task type identifier. The delegate system will use it to make the connection to the
   * actual task executor. TODO: more details
   * </pre>
   *
   * <code>.io.harness.delegate.TaskType type = 2;</code>
   */
  public io.harness.delegate.TaskType getType() {
    return type_ == null ? io.harness.delegate.TaskType.getDefaultInstance() : type_;
  }
  /**
   * <pre>
   * Arbitrary globally unique task type identifier. The delegate system will use it to make the connection to the
   * actual task executor. TODO: more details
   * </pre>
   *
   * <code>.io.harness.delegate.TaskType type = 2;</code>
   */
  public io.harness.delegate.TaskTypeOrBuilder getTypeOrBuilder() {
    return getType();
  }

  public static final int KRYO_PARAMETERS_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Using kryo java serialization, useful for java based task where java annotation play important role of
   * determining encrypted fields and expressions.
   * </pre>
   *
   * <code>bytes kryo_parameters = 3;</code>
   */
  public com.google.protobuf.ByteString getKryoParameters() {
    if (parametersCase_ == 3) {
      return (com.google.protobuf.ByteString) parameters_;
    }
    return com.google.protobuf.ByteString.EMPTY;
  }

  public static final int EXECUTION_TIMEOUT_FIELD_NUMBER = 4;
  private com.google.protobuf.Duration executionTimeout_;
  /**
   * <pre>
   * Execution time out determines for how long the task should be kept waited on to accomplish its work.
   * NOTE: this time does not include the time the task was in the queue. This is determined independently.
   * </pre>
   *
   * <code>.google.protobuf.Duration execution_timeout = 4;</code>
   */
  public boolean hasExecutionTimeout() {
    return executionTimeout_ != null;
  }
  /**
   * <pre>
   * Execution time out determines for how long the task should be kept waited on to accomplish its work.
   * NOTE: this time does not include the time the task was in the queue. This is determined independently.
   * </pre>
   *
   * <code>.google.protobuf.Duration execution_timeout = 4;</code>
   */
  public com.google.protobuf.Duration getExecutionTimeout() {
    return executionTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : executionTimeout_;
  }
  /**
   * <pre>
   * Execution time out determines for how long the task should be kept waited on to accomplish its work.
   * NOTE: this time does not include the time the task was in the queue. This is determined independently.
   * </pre>
   *
   * <code>.google.protobuf.Duration execution_timeout = 4;</code>
   */
  public com.google.protobuf.DurationOrBuilder getExecutionTimeoutOrBuilder() {
    return getExecutionTimeout();
  }

  public static final int EXPRESSIONS_FIELD_NUMBER = 5;
  private static final class ExpressionsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<java.lang.String, java.lang.String> defaultEntry =
        com.google.protobuf.MapEntry.<java.lang.String, java.lang.String>newDefaultInstance(
            io.harness.delegate.Task.internal_static_io_harness_delegate_TaskDetails_ExpressionsEntry_descriptor,
            com.google.protobuf.WireFormat.FieldType.STRING, "", com.google.protobuf.WireFormat.FieldType.STRING, "");
  }
  private com.google.protobuf.MapField<java.lang.String, java.lang.String> expressions_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String> internalGetExpressions() {
    if (expressions_ == null) {
      return com.google.protobuf.MapField.emptyMapField(ExpressionsDefaultEntryHolder.defaultEntry);
    }
    return expressions_;
  }

  public int getExpressionsCount() {
    return internalGetExpressions().getMap().size();
  }
  /**
   * <pre>
   * Expressions a map between arbitrary keys and expression. Expression can contain secrets that the delegate system
   * will resolve. The consumer is responsible to apply the finalized expression values to their internal model before
   * task execution.
   * </pre>
   *
   * <code>map&lt;string, string&gt; expressions = 5;</code>
   */

  public boolean containsExpressions(java.lang.String key) {
    if (key == null) {
      throw new java.lang.NullPointerException();
    }
    return internalGetExpressions().getMap().containsKey(key);
  }
  /**
   * Use {@link #getExpressionsMap()} instead.
   */
  @java.
  lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getExpressions() {
    return getExpressionsMap();
  }
  /**
   * <pre>
   * Expressions a map between arbitrary keys and expression. Expression can contain secrets that the delegate system
   * will resolve. The consumer is responsible to apply the finalized expression values to their internal model before
   * task execution.
   * </pre>
   *
   * <code>map&lt;string, string&gt; expressions = 5;</code>
   */

  public java.util.Map<java.lang.String, java.lang.String> getExpressionsMap() {
    return internalGetExpressions().getMap();
  }
  /**
   * <pre>
   * Expressions a map between arbitrary keys and expression. Expression can contain secrets that the delegate system
   * will resolve. The consumer is responsible to apply the finalized expression values to their internal model before
   * task execution.
   * </pre>
   *
   * <code>map&lt;string, string&gt; expressions = 5;</code>
   */

  public java.lang.String getExpressionsOrDefault(java.lang.String key, java.lang.String defaultValue) {
    if (key == null) {
      throw new java.lang.NullPointerException();
    }
    java.util.Map<java.lang.String, java.lang.String> map = internalGetExpressions().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Expressions a map between arbitrary keys and expression. Expression can contain secrets that the delegate system
   * will resolve. The consumer is responsible to apply the finalized expression values to their internal model before
   * task execution.
   * </pre>
   *
   * <code>map&lt;string, string&gt; expressions = 5;</code>
   */

  public java.lang.String getExpressionsOrThrow(java.lang.String key) {
    if (key == null) {
      throw new java.lang.NullPointerException();
    }
    java.util.Map<java.lang.String, java.lang.String> map = internalGetExpressions().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int EXPRESSION_FUNCTOR_TOKEN_FIELD_NUMBER = 6;
  private long expressionFunctorToken_;
  /**
   * <pre>
   * The delegate system offers JIT secret decryption. This token allows for making sure that the expressions for
   * obtaining secrets are system generated, and not a hack from customers input.
   * </pre>
   *
   * <code>int64 expression_functor_token = 6;</code>
   */
  public long getExpressionFunctorToken() {
    return expressionFunctorToken_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1)
      return true;
    if (isInitialized == 0)
      return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (type_ != null) {
      output.writeMessage(2, getType());
    }
    if (parametersCase_ == 3) {
      output.writeBytes(3, (com.google.protobuf.ByteString) parameters_);
    }
    if (executionTimeout_ != null) {
      output.writeMessage(4, getExecutionTimeout());
    }
    com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(
        output, internalGetExpressions(), ExpressionsDefaultEntryHolder.defaultEntry, 5);
    if (expressionFunctorToken_ != 0L) {
      output.writeInt64(6, expressionFunctorToken_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1)
      return size;

    size = 0;
    if (type_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getType());
    }
    if (parametersCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream.computeBytesSize(3, (com.google.protobuf.ByteString) parameters_);
    }
    if (executionTimeout_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, getExecutionTimeout());
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : internalGetExpressions().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String> expressions__ =
          ExpressionsDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, expressions__);
    }
    if (expressionFunctorToken_ != 0L) {
      size += com.google.protobuf.CodedOutputStream.computeInt64Size(6, expressionFunctorToken_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof io.harness.delegate.TaskDetails)) {
      return super.equals(obj);
    }
    io.harness.delegate.TaskDetails other = (io.harness.delegate.TaskDetails) obj;

    if (hasType() != other.hasType())
      return false;
    if (hasType()) {
      if (!getType().equals(other.getType()))
        return false;
    }
    if (hasExecutionTimeout() != other.hasExecutionTimeout())
      return false;
    if (hasExecutionTimeout()) {
      if (!getExecutionTimeout().equals(other.getExecutionTimeout()))
        return false;
    }
    if (!internalGetExpressions().equals(other.internalGetExpressions()))
      return false;
    if (getExpressionFunctorToken() != other.getExpressionFunctorToken())
      return false;
    if (!getParametersCase().equals(other.getParametersCase()))
      return false;
    switch (parametersCase_) {
      case 3:
        if (!getKryoParameters().equals(other.getKryoParameters()))
          return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields))
      return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasType()) {
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
    }
    if (hasExecutionTimeout()) {
      hash = (37 * hash) + EXECUTION_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getExecutionTimeout().hashCode();
    }
    if (!internalGetExpressions().getMap().isEmpty()) {
      hash = (37 * hash) + EXPRESSIONS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetExpressions().hashCode();
    }
    hash = (37 * hash) + EXPRESSION_FUNCTOR_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(getExpressionFunctorToken());
    switch (parametersCase_) {
      case 3:
        hash = (37 * hash) + KRYO_PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + getKryoParameters().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.harness.delegate.TaskDetails parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.harness.delegate.TaskDetails parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.harness.delegate.TaskDetails parseFrom(com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.harness.delegate.TaskDetails parseFrom(
      com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.harness.delegate.TaskDetails parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.harness.delegate.TaskDetails parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.harness.delegate.TaskDetails parseFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }
  public static io.harness.delegate.TaskDetails parseFrom(java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.harness.delegate.TaskDetails parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }
  public static io.harness.delegate.TaskDetails parseDelimitedFrom(java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.harness.delegate.TaskDetails parseFrom(com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }
  public static io.harness.delegate.TaskDetails parseFrom(com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.harness.delegate.TaskDetails prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Task details represent the object that will be propagated over the wire to the task executor Task executor needs to
   * be able to make sense of this data and accomplish the needed work from the task.
   * </pre>
   *
   * Protobuf type {@code io.harness.delegate.TaskDetails}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.harness.delegate.TaskDetails)
      io.harness.delegate.TaskDetailsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return io.harness.delegate.Task.internal_static_io_harness_delegate_TaskDetails_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(int number) {
      switch (number) {
        case 5:
          return internalGetExpressions();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(int number) {
      switch (number) {
        case 5:
          return internalGetMutableExpressions();
        default:
          throw new RuntimeException("Invalid map field number: " + number);
      }
    }
    @java.
    lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
      return io.harness.delegate.Task.internal_static_io_harness_delegate_TaskDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.harness.delegate.TaskDetails.class, io.harness.delegate.TaskDetails.Builder.class);
    }

    // Construct using io.harness.delegate.TaskDetails.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (typeBuilder_ == null) {
        type_ = null;
      } else {
        type_ = null;
        typeBuilder_ = null;
      }
      if (executionTimeoutBuilder_ == null) {
        executionTimeout_ = null;
      } else {
        executionTimeout_ = null;
        executionTimeoutBuilder_ = null;
      }
      internalGetMutableExpressions().clear();
      expressionFunctorToken_ = 0L;

      parametersCase_ = 0;
      parameters_ = null;
      return this;
    }

    @java.
    lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return io.harness.delegate.Task.internal_static_io_harness_delegate_TaskDetails_descriptor;
    }

    @java.
    lang.Override
    public io.harness.delegate.TaskDetails getDefaultInstanceForType() {
      return io.harness.delegate.TaskDetails.getDefaultInstance();
    }

    @java.
    lang.Override
    public io.harness.delegate.TaskDetails build() {
      io.harness.delegate.TaskDetails result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.
    lang.Override
    public io.harness.delegate.TaskDetails buildPartial() {
      io.harness.delegate.TaskDetails result = new io.harness.delegate.TaskDetails(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (typeBuilder_ == null) {
        result.type_ = type_;
      } else {
        result.type_ = typeBuilder_.build();
      }
      if (parametersCase_ == 3) {
        result.parameters_ = parameters_;
      }
      if (executionTimeoutBuilder_ == null) {
        result.executionTimeout_ = executionTimeout_;
      } else {
        result.executionTimeout_ = executionTimeoutBuilder_.build();
      }
      result.expressions_ = internalGetExpressions();
      result.expressions_.makeImmutable();
      result.expressionFunctorToken_ = expressionFunctorToken_;
      result.bitField0_ = to_bitField0_;
      result.parametersCase_ = parametersCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.harness.delegate.TaskDetails) {
        return mergeFrom((io.harness.delegate.TaskDetails) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.harness.delegate.TaskDetails other) {
      if (other == io.harness.delegate.TaskDetails.getDefaultInstance())
        return this;
      if (other.hasType()) {
        mergeType(other.getType());
      }
      if (other.hasExecutionTimeout()) {
        mergeExecutionTimeout(other.getExecutionTimeout());
      }
      internalGetMutableExpressions().mergeFrom(other.internalGetExpressions());
      if (other.getExpressionFunctorToken() != 0L) {
        setExpressionFunctorToken(other.getExpressionFunctorToken());
      }
      switch (other.getParametersCase()) {
        case KRYO_PARAMETERS: {
          setKryoParameters(other.getKryoParameters());
          break;
        }
        case PARAMETERS_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
      io.harness.delegate.TaskDetails parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.harness.delegate.TaskDetails) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int parametersCase_ = 0;
    private java.lang.Object parameters_;
    public ParametersCase getParametersCase() {
      return ParametersCase.forNumber(parametersCase_);
    }

    public Builder clearParameters() {
      parametersCase_ = 0;
      parameters_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private io.harness.delegate.TaskType type_;
    private com.google.protobuf.SingleFieldBuilderV3<io.harness.delegate.TaskType, io.harness.delegate.TaskType.Builder,
        io.harness.delegate.TaskTypeOrBuilder> typeBuilder_;
    /**
     * <pre>
     * Arbitrary globally unique task type identifier. The delegate system will use it to make the connection to the
     * actual task executor. TODO: more details
     * </pre>
     *
     * <code>.io.harness.delegate.TaskType type = 2;</code>
     */
    public boolean hasType() {
      return typeBuilder_ != null || type_ != null;
    }
    /**
     * <pre>
     * Arbitrary globally unique task type identifier. The delegate system will use it to make the connection to the
     * actual task executor. TODO: more details
     * </pre>
     *
     * <code>.io.harness.delegate.TaskType type = 2;</code>
     */
    public io.harness.delegate.TaskType getType() {
      if (typeBuilder_ == null) {
        return type_ == null ? io.harness.delegate.TaskType.getDefaultInstance() : type_;
      } else {
        return typeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Arbitrary globally unique task type identifier. The delegate system will use it to make the connection to the
     * actual task executor. TODO: more details
     * </pre>
     *
     * <code>.io.harness.delegate.TaskType type = 2;</code>
     */
    public Builder setType(io.harness.delegate.TaskType value) {
      if (typeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        typeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Arbitrary globally unique task type identifier. The delegate system will use it to make the connection to the
     * actual task executor. TODO: more details
     * </pre>
     *
     * <code>.io.harness.delegate.TaskType type = 2;</code>
     */
    public Builder setType(io.harness.delegate.TaskType.Builder builderForValue) {
      if (typeBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        typeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Arbitrary globally unique task type identifier. The delegate system will use it to make the connection to the
     * actual task executor. TODO: more details
     * </pre>
     *
     * <code>.io.harness.delegate.TaskType type = 2;</code>
     */
    public Builder mergeType(io.harness.delegate.TaskType value) {
      if (typeBuilder_ == null) {
        if (type_ != null) {
          type_ = io.harness.delegate.TaskType.newBuilder(type_).mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        typeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Arbitrary globally unique task type identifier. The delegate system will use it to make the connection to the
     * actual task executor. TODO: more details
     * </pre>
     *
     * <code>.io.harness.delegate.TaskType type = 2;</code>
     */
    public Builder clearType() {
      if (typeBuilder_ == null) {
        type_ = null;
        onChanged();
      } else {
        type_ = null;
        typeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Arbitrary globally unique task type identifier. The delegate system will use it to make the connection to the
     * actual task executor. TODO: more details
     * </pre>
     *
     * <code>.io.harness.delegate.TaskType type = 2;</code>
     */
    public io.harness.delegate.TaskType.Builder getTypeBuilder() {
      onChanged();
      return getTypeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Arbitrary globally unique task type identifier. The delegate system will use it to make the connection to the
     * actual task executor. TODO: more details
     * </pre>
     *
     * <code>.io.harness.delegate.TaskType type = 2;</code>
     */
    public io.harness.delegate.TaskTypeOrBuilder getTypeOrBuilder() {
      if (typeBuilder_ != null) {
        return typeBuilder_.getMessageOrBuilder();
      } else {
        return type_ == null ? io.harness.delegate.TaskType.getDefaultInstance() : type_;
      }
    }
    /**
     * <pre>
     * Arbitrary globally unique task type identifier. The delegate system will use it to make the connection to the
     * actual task executor. TODO: more details
     * </pre>
     *
     * <code>.io.harness.delegate.TaskType type = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<io.harness.delegate.TaskType, io.harness.delegate.TaskType.Builder,
        io.harness.delegate.TaskTypeOrBuilder>
    getTypeFieldBuilder() {
      if (typeBuilder_ == null) {
        typeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<io.harness.delegate.TaskType,
            io.harness.delegate.TaskType.Builder, io.harness.delegate.TaskTypeOrBuilder>(
            getType(), getParentForChildren(), isClean());
        type_ = null;
      }
      return typeBuilder_;
    }

    /**
     * <pre>
     * Using kryo java serialization, useful for java based task where java annotation play important role of
     * determining encrypted fields and expressions.
     * </pre>
     *
     * <code>bytes kryo_parameters = 3;</code>
     */
    public com.google.protobuf.ByteString getKryoParameters() {
      if (parametersCase_ == 3) {
        return (com.google.protobuf.ByteString) parameters_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }
    /**
     * <pre>
     * Using kryo java serialization, useful for java based task where java annotation play important role of
     * determining encrypted fields and expressions.
     * </pre>
     *
     * <code>bytes kryo_parameters = 3;</code>
     */
    public Builder setKryoParameters(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      parametersCase_ = 3;
      parameters_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Using kryo java serialization, useful for java based task where java annotation play important role of
     * determining encrypted fields and expressions.
     * </pre>
     *
     * <code>bytes kryo_parameters = 3;</code>
     */
    public Builder clearKryoParameters() {
      if (parametersCase_ == 3) {
        parametersCase_ = 0;
        parameters_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.Duration executionTimeout_;
    private com.google.protobuf.SingleFieldBuilderV3<com.google.protobuf.Duration, com.google.protobuf.Duration.Builder,
        com.google.protobuf.DurationOrBuilder> executionTimeoutBuilder_;
    /**
     * <pre>
     * Execution time out determines for how long the task should be kept waited on to accomplish its work.
     * NOTE: this time does not include the time the task was in the queue. This is determined independently.
     * </pre>
     *
     * <code>.google.protobuf.Duration execution_timeout = 4;</code>
     */
    public boolean hasExecutionTimeout() {
      return executionTimeoutBuilder_ != null || executionTimeout_ != null;
    }
    /**
     * <pre>
     * Execution time out determines for how long the task should be kept waited on to accomplish its work.
     * NOTE: this time does not include the time the task was in the queue. This is determined independently.
     * </pre>
     *
     * <code>.google.protobuf.Duration execution_timeout = 4;</code>
     */
    public com.google.protobuf.Duration getExecutionTimeout() {
      if (executionTimeoutBuilder_ == null) {
        return executionTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : executionTimeout_;
      } else {
        return executionTimeoutBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Execution time out determines for how long the task should be kept waited on to accomplish its work.
     * NOTE: this time does not include the time the task was in the queue. This is determined independently.
     * </pre>
     *
     * <code>.google.protobuf.Duration execution_timeout = 4;</code>
     */
    public Builder setExecutionTimeout(com.google.protobuf.Duration value) {
      if (executionTimeoutBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        executionTimeout_ = value;
        onChanged();
      } else {
        executionTimeoutBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Execution time out determines for how long the task should be kept waited on to accomplish its work.
     * NOTE: this time does not include the time the task was in the queue. This is determined independently.
     * </pre>
     *
     * <code>.google.protobuf.Duration execution_timeout = 4;</code>
     */
    public Builder setExecutionTimeout(com.google.protobuf.Duration.Builder builderForValue) {
      if (executionTimeoutBuilder_ == null) {
        executionTimeout_ = builderForValue.build();
        onChanged();
      } else {
        executionTimeoutBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Execution time out determines for how long the task should be kept waited on to accomplish its work.
     * NOTE: this time does not include the time the task was in the queue. This is determined independently.
     * </pre>
     *
     * <code>.google.protobuf.Duration execution_timeout = 4;</code>
     */
    public Builder mergeExecutionTimeout(com.google.protobuf.Duration value) {
      if (executionTimeoutBuilder_ == null) {
        if (executionTimeout_ != null) {
          executionTimeout_ =
              com.google.protobuf.Duration.newBuilder(executionTimeout_).mergeFrom(value).buildPartial();
        } else {
          executionTimeout_ = value;
        }
        onChanged();
      } else {
        executionTimeoutBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Execution time out determines for how long the task should be kept waited on to accomplish its work.
     * NOTE: this time does not include the time the task was in the queue. This is determined independently.
     * </pre>
     *
     * <code>.google.protobuf.Duration execution_timeout = 4;</code>
     */
    public Builder clearExecutionTimeout() {
      if (executionTimeoutBuilder_ == null) {
        executionTimeout_ = null;
        onChanged();
      } else {
        executionTimeout_ = null;
        executionTimeoutBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Execution time out determines for how long the task should be kept waited on to accomplish its work.
     * NOTE: this time does not include the time the task was in the queue. This is determined independently.
     * </pre>
     *
     * <code>.google.protobuf.Duration execution_timeout = 4;</code>
     */
    public com.google.protobuf.Duration.Builder getExecutionTimeoutBuilder() {
      onChanged();
      return getExecutionTimeoutFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Execution time out determines for how long the task should be kept waited on to accomplish its work.
     * NOTE: this time does not include the time the task was in the queue. This is determined independently.
     * </pre>
     *
     * <code>.google.protobuf.Duration execution_timeout = 4;</code>
     */
    public com.google.protobuf.DurationOrBuilder getExecutionTimeoutOrBuilder() {
      if (executionTimeoutBuilder_ != null) {
        return executionTimeoutBuilder_.getMessageOrBuilder();
      } else {
        return executionTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : executionTimeout_;
      }
    }
    /**
     * <pre>
     * Execution time out determines for how long the task should be kept waited on to accomplish its work.
     * NOTE: this time does not include the time the task was in the queue. This is determined independently.
     * </pre>
     *
     * <code>.google.protobuf.Duration execution_timeout = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<com.google.protobuf.Duration, com.google.protobuf.Duration.Builder,
        com.google.protobuf.DurationOrBuilder>
    getExecutionTimeoutFieldBuilder() {
      if (executionTimeoutBuilder_ == null) {
        executionTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<com.google.protobuf.Duration,
            com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
            getExecutionTimeout(), getParentForChildren(), isClean());
        executionTimeout_ = null;
      }
      return executionTimeoutBuilder_;
    }

    private com.google.protobuf.MapField<java.lang.String, java.lang.String> expressions_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String> internalGetExpressions() {
      if (expressions_ == null) {
        return com.google.protobuf.MapField.emptyMapField(ExpressionsDefaultEntryHolder.defaultEntry);
      }
      return expressions_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String> internalGetMutableExpressions() {
      onChanged();
      ;
      if (expressions_ == null) {
        expressions_ = com.google.protobuf.MapField.newMapField(ExpressionsDefaultEntryHolder.defaultEntry);
      }
      if (!expressions_.isMutable()) {
        expressions_ = expressions_.copy();
      }
      return expressions_;
    }

    public int getExpressionsCount() {
      return internalGetExpressions().getMap().size();
    }
    /**
     * <pre>
     * Expressions a map between arbitrary keys and expression. Expression can contain secrets that the delegate system
     * will resolve. The consumer is responsible to apply the finalized expression values to their internal model before
     * task execution.
     * </pre>
     *
     * <code>map&lt;string, string&gt; expressions = 5;</code>
     */

    public boolean containsExpressions(java.lang.String key) {
      if (key == null) {
        throw new java.lang.NullPointerException();
      }
      return internalGetExpressions().getMap().containsKey(key);
    }
    /**
     * Use {@link #getExpressionsMap()} instead.
     */
    @java.
    lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getExpressions() {
      return getExpressionsMap();
    }
    /**
     * <pre>
     * Expressions a map between arbitrary keys and expression. Expression can contain secrets that the delegate system
     * will resolve. The consumer is responsible to apply the finalized expression values to their internal model before
     * task execution.
     * </pre>
     *
     * <code>map&lt;string, string&gt; expressions = 5;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getExpressionsMap() {
      return internalGetExpressions().getMap();
    }
    /**
     * <pre>
     * Expressions a map between arbitrary keys and expression. Expression can contain secrets that the delegate system
     * will resolve. The consumer is responsible to apply the finalized expression values to their internal model before
     * task execution.
     * </pre>
     *
     * <code>map&lt;string, string&gt; expressions = 5;</code>
     */

    public java.lang.String getExpressionsOrDefault(java.lang.String key, java.lang.String defaultValue) {
      if (key == null) {
        throw new java.lang.NullPointerException();
      }
      java.util.Map<java.lang.String, java.lang.String> map = internalGetExpressions().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Expressions a map between arbitrary keys and expression. Expression can contain secrets that the delegate system
     * will resolve. The consumer is responsible to apply the finalized expression values to their internal model before
     * task execution.
     * </pre>
     *
     * <code>map&lt;string, string&gt; expressions = 5;</code>
     */

    public java.lang.String getExpressionsOrThrow(java.lang.String key) {
      if (key == null) {
        throw new java.lang.NullPointerException();
      }
      java.util.Map<java.lang.String, java.lang.String> map = internalGetExpressions().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearExpressions() {
      internalGetMutableExpressions().getMutableMap().clear();
      return this;
    }
    /**
     * <pre>
     * Expressions a map between arbitrary keys and expression. Expression can contain secrets that the delegate system
     * will resolve. The consumer is responsible to apply the finalized expression values to their internal model before
     * task execution.
     * </pre>
     *
     * <code>map&lt;string, string&gt; expressions = 5;</code>
     */

    public Builder removeExpressions(java.lang.String key) {
      if (key == null) {
        throw new java.lang.NullPointerException();
      }
      internalGetMutableExpressions().getMutableMap().remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.
    lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMutableExpressions() {
      return internalGetMutableExpressions().getMutableMap();
    }
    /**
     * <pre>
     * Expressions a map between arbitrary keys and expression. Expression can contain secrets that the delegate system
     * will resolve. The consumer is responsible to apply the finalized expression values to their internal model before
     * task execution.
     * </pre>
     *
     * <code>map&lt;string, string&gt; expressions = 5;</code>
     */
    public Builder putExpressions(java.lang.String key, java.lang.String value) {
      if (key == null) {
        throw new java.lang.NullPointerException();
      }
      if (value == null) {
        throw new java.lang.NullPointerException();
      }
      internalGetMutableExpressions().getMutableMap().put(key, value);
      return this;
    }
    /**
     * <pre>
     * Expressions a map between arbitrary keys and expression. Expression can contain secrets that the delegate system
     * will resolve. The consumer is responsible to apply the finalized expression values to their internal model before
     * task execution.
     * </pre>
     *
     * <code>map&lt;string, string&gt; expressions = 5;</code>
     */

    public Builder putAllExpressions(java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableExpressions().getMutableMap().putAll(values);
      return this;
    }

    private long expressionFunctorToken_;
    /**
     * <pre>
     * The delegate system offers JIT secret decryption. This token allows for making sure that the expressions for
     * obtaining secrets are system generated, and not a hack from customers input.
     * </pre>
     *
     * <code>int64 expression_functor_token = 6;</code>
     */
    public long getExpressionFunctorToken() {
      return expressionFunctorToken_;
    }
    /**
     * <pre>
     * The delegate system offers JIT secret decryption. This token allows for making sure that the expressions for
     * obtaining secrets are system generated, and not a hack from customers input.
     * </pre>
     *
     * <code>int64 expression_functor_token = 6;</code>
     */
    public Builder setExpressionFunctorToken(long value) {
      expressionFunctorToken_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The delegate system offers JIT secret decryption. This token allows for making sure that the expressions for
     * obtaining secrets are system generated, and not a hack from customers input.
     * </pre>
     *
     * <code>int64 expression_functor_token = 6;</code>
     */
    public Builder clearExpressionFunctorToken() {
      expressionFunctorToken_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:io.harness.delegate.TaskDetails)
  }

  // @@protoc_insertion_point(class_scope:io.harness.delegate.TaskDetails)
  private static final io.harness.delegate.TaskDetails DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.harness.delegate.TaskDetails();
  }

  public static io.harness.delegate.TaskDetails getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TaskDetails> PARSER =
      new com.google.protobuf.AbstractParser<TaskDetails>() {
        @java.lang.Override
        public TaskDetails parsePartialFrom(
            com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TaskDetails(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<TaskDetails> parser() {
    return PARSER;
  }

  @java.
  lang.Override
  public com.google.protobuf.Parser<TaskDetails> getParserForType() {
    return PARSER;
  }

  @java.
  lang.Override
  public io.harness.delegate.TaskDetails getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
