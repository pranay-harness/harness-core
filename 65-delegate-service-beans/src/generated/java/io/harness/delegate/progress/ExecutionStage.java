// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: progress.proto

package io.harness.delegate.progress;

/**
 * Protobuf enum {@code io.harness.delegate.progress.ExecutionStage}
 */
@javax.annotation.Generated(value = "protoc", comments = "annotations:ExecutionStage.java.pb.meta")
public enum ExecutionStage implements com
.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>QUEUEING = 0;</code>
   */
  QUEUEING(0),
      /**
       * <code>VALIDATING = 1;</code>
       */
      VALIDATING(1),
      /**
       * <code>EXECUTING = 2;</code>
       */
      EXECUTING(2),
      /**
       * <code>FINISHED = 3;</code>
       */
      FINISHED(3), UNRECOGNIZED(-1),
      ;

  /**
   * <code>QUEUEING = 0;</code>
   */
  public static final int QUEUEING_VALUE = 0;
  /**
   * <code>VALIDATING = 1;</code>
   */
  public static final int VALIDATING_VALUE = 1;
  /**
   * <code>EXECUTING = 2;</code>
   */
  public static final int EXECUTING_VALUE = 2;
  /**
   * <code>FINISHED = 3;</code>
   */
  public static final int FINISHED_VALUE = 3;

  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException("Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ExecutionStage valueOf(int value) {
    return forNumber(value);
  }

  public static ExecutionStage forNumber(int value) {
    switch (value) {
      case 0:
        return QUEUEING;
      case 1:
        return VALIDATING;
      case 2:
        return EXECUTING;
      case 3:
        return FINISHED;
      default:
        return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ExecutionStage> internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<ExecutionStage> internalValueMap =
      new com.google.protobuf.Internal.EnumLiteMap<ExecutionStage>() {
        public ExecutionStage findValueByNumber(int number) {
          return ExecutionStage.forNumber(number);
        }
      };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
    return io.harness.delegate.progress.Progress.getDescriptor().getEnumTypes().get(0);
  }

  private static final ExecutionStage[] VALUES = values();

  public static ExecutionStage valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ExecutionStage(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:io.harness.delegate.progress.ExecutionStage)
}
