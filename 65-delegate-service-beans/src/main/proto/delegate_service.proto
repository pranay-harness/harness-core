syntax = "proto3";

package io.harness.delegate.progress;

option java_multiple_files = true;

import "task.proto";
import "progress.proto";

service DelegateService {
  rpc SubmitTask(SubmitTaskRequest) returns (SubmitTaskResponse);
  rpc CancelTask(CancelTaskRequest) returns (CancelTaskResponse);
  rpc TaskProgress(TaskProgressRequest) returns (TaskProgressResponse);
}

message SubmitTaskRequest {
  task.SetupAbstractions setup_abstractions = 1;
  task.Details details = 2;
  task.Capabilities capabilities = 3;
}

message SubmitTaskResponse {
  task.Id taskId = 1;
}

message CancelTaskRequest {
  task.Id taskId = 1;
}

message CancelTaskResponse {
  progress.ExecutionStage canceled_at_stage = 1;
}

message TaskProgressRequest {
  task.Id taskId = 1;
}

message TaskProgressResponse {
  progress.ExecutionStage currently_at_stage = 1;
}