# Copyright 2021 Harness Inc. All rights reserved.
# Use of this source code is governed by the PolyForm Shield 1.0.0 license
# that can be found in the licenses directory at the root of this repository, also available at
# https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt.

extend type Query {
  # Get details about a Harness Environment.
  environment(environmentId: String!): Environment @dataFetcher(name: environment)

  # Get details about one or multiple Harness Environments.
  environments(filters: [EnvironmentFilter], limit: Int!, offset: Int): EnvironmentConnection
    @dataFetcher(name: environmentConnection)
}

input infraDefConnectionData {
  InfrastructureId: String
  EnvironmentId: String
}

input EnvironmentFilter {
  application: IdFilter
  environment: IdFilter
  environmentType: EnvironmentTypeFilter
  tag: EnvironmentTagFilter
}

input EnvironmentTypeFilter {
  operator: EnumOperator
  values: [EnvironmentType]
}

enum EnvironmentTagType {
  APPLICATION
}

input EnvironmentTagFilter {
  entityType: EnvironmentTagType
  tags: [TagInput]
}

type Environment {
  id: String
  name: String
  description: String
  type: EnvironmentType
  createdAt: DateTime
  createdBy: User
  application: Application
    @dataFetcher(name: application, useBatch: false, contextFieldArgsMap: "{ \"applicationId\": \"appId\"}")
  infrastructureDefinitions(
    filters: [InfrastructureDefinitionFilter]
    limit: Int!
    offset: Int
  ): InfrastructureDefinitionConnection
    @dataFetcher(name: infrastructureDefinitionConnection, contextFieldArgsMap: "{ \"Environment\": \"id\"}")
}

type EnvironmentConnection {
  pageInfo: PageInfo
  nodes: [Environment]
}

enum EnvironmentType {
  PROD
  NON_PROD
}

input EnvFilterInput {
  filterTypes: EnvFilterType
  envIds: String
}

type EnvFilter {
  filterTypes: [EnvFilterType]
  envIds: [String]
}
