# Copyright 2021 Harness Inc. All rights reserved.
# Use of this source code is governed by the PolyForm Shield 1.0.0 license
# that can be found in the licenses directory at the root of this repository, also available at
# https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt.

extend type Mutation {
  # Beta: Create a secret.
  createSecret(input: CreateSecretInput!): CreateSecretPayload @dataFetcher(name: createSecret)
  # Beta: Update a secret.
  updateSecret(input: UpdateSecretInput!): UpdateSecretPayload @dataFetcher(name: updateSecret)
  # Beta: Delete a secret.
  deleteSecret(input: DeleteSecretInput!): DeleteSecretPayload @dataFetcher(name: deleteSecret)
}

input CreateSecretInput {
  clientMutationId: String
  secretType: SecretType!
  encryptedText: EncryptedTextInput
  winRMCredential: WinRMCredentialInput
  sshCredential: SSHCredentialInput
  encryptedFile: EncryptedFileInput
}

input DeleteSecretInput {
  clientMutationId: String
  secretId: String!
  secretType: SecretType!
}

type DeleteSecretPayload {
  clientMutationId: String
}

enum SecretType {
  ENCRYPTED_TEXT
  ENCRYPTED_FILE
  WINRM_CREDENTIAL
  SSH_CREDENTIAL
}

type CreateSecretPayload {
  clientMutationId: String
  secret: Secret
}

interface Secret {
  id: String
  secretType: SecretType
  name: String
  usageScope: UsageScope
  secretReference: String
}

input UpdateSecretInput {
  clientMutationId: String
  secretId: String!
  secretType: SecretType!
  encryptedText: UpdateEncryptedText
  winRMCredential: UpdateWinRMCredential
  sshCredential: UpdateSSHCredential
  encryptedFile: EncryptedFileInput
}

type UpdateSecretPayload {
  clientMutationId: String
  secret: Secret
}

extend type Query {
  # Beta: Get details about secret.
  secret(secretId: String!, secretType: SecretType!): Secret @dataFetcher(name: getSecret)
  # Beta: Get details about secret by name.
  secretByName(name: String!, secretType: SecretType!): Secret @dataFetcher(name: getSecret)
}
