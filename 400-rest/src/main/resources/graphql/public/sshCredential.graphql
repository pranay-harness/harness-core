# Copyright 2021 Harness Inc. All rights reserved.
# Use of this source code is governed by the PolyForm Shield 1.0.0 license
# that can be found in the licenses directory at the root of this repository, also available at
# https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt.

input SSHCredentialInput {
  name: String!
  authenticationScheme: SSHAuthenticationScheme!
  sshAuthentication: SSHAuthenticationInput
  kerberosAuthentication: KerberosAuthenticationInput
  usageScope: UsageScopeInput
}

input UpdateSSHCredential {
  name: String
  authenticationScheme: SSHAuthenticationScheme
  sshAuthentication: SSHAuthenticationInput
  kerberosAuthentication: KerberosAuthenticationInput
  usageScope: UsageScopeInput
}

input SSHAuthenticationInput {
  userName: String!
  port: Int!
  sshAuthenticationMethod: SSHAuthenticationMethod!
}

input SSHAuthenticationMethod {
  sshCredentialType: SSHCredentialType!
  inlineSSHKey: InlineSSHKey
  sshKeyFile: SSHKeyFile
  serverPassword: SSHPassword
}

type SSHAuthenticationMethodOutput {
  sshCredentialType: String
  inlineSSHKey: InlineSSHKeyOutput
  sshKeyFile: SSHKeyFileOutput
  serverPassword: SSHPasswordOutput
}

input InlineSSHKey {
  sshKeySecretFileId: String!
  passphraseSecretId: String
}

type InlineSSHKeyOutput {
  sshKeySecretFileId: String
  passphraseSecretId: String
}

input SSHKeyFile {
  path: String!
  passphraseSecretId: String
}

type SSHKeyFileOutput {
  path: String
  passphraseSecretId: String
}

input SSHPassword {
  passwordSecretId: String!
}

type SSHPasswordOutput {
  passwordSecretId: String
}

input KerberosAuthenticationInput {
  principal: String!
  realm: String!
  port: Int!
  tgtGenerationMethod: TGTGenerationMethod
}

input TGTGenerationMethod {
  tgtGenerationUsing: TGTGenerationUsing!
  keyTabFile: KeyTabFile
  kerberosPassword: KerberosPassword
}

input KeyTabFile {
  filePath: String!
}

input KerberosPassword {
  passwordSecretId: String!
}

enum SSHAuthenticationScheme {
  SSH
  KERBEROS
}

enum SSHCredentialType {
  SSH_KEY
  SSH_KEY_FILE_PATH
  PASSWORD
}

enum SSHCredentialTypeOutput {
  SSH_KEY
  SSH_KEY_FILE_PATH
  PASSWORD
}

type SSHCredential implements Secret {
  id: String
  name: String
  secretType: SecretType
  authenticationType: SSHAuthenticationType
  usageScope: UsageScope
  secretReference: String
}

union SSHAuthenticationType = SSHAuthentication | KerberosAuthentication

type SSHAuthentication {
  userName: String
  port: Int
  sshAuthenticationMethod: SSHAuthenticationMethodOutput
}

type KerberosAuthentication {
  principal: String
  realm: String
  port: Int
}

enum TGTGenerationUsing {
  KEY_TAB_FILE
  PASSWORD
}
