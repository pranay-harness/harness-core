
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: harness-default-cluster-admin
subjects:
- kind: ServiceAccount
  name: default
  namespace: {{ .Values.kubernetesClusterNamespace }}
roleRef:
  kind: Role
  name: admin
  apiGroup: rbac.authorization.k8s.io

---



apiVersion: v1
kind: Service
metadata:
  name: harness-manager
  namespace: {{ .Values.kubernetesClusterNamespace }}
spec:
  ports:
  - port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    harness-service: manager
  sessionAffinity: None
  type: ClusterIP

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels:
    harness-app: harness
    harness-service: manager
  annotations:
    kubernetes.io/ingress.class: {{ .Values.kubernetesClusterNamespace }}
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  name: harness-manager
  namespace: {{ .Values.kubernetesClusterNamespace }}
spec:
  rules:
  - host: {{ .Values.inframapping.lbhost }}
    http:
      paths:
      - backend:
          serviceName: harness-manager
          servicePort: 9090
        path: /api
      - backend:
          serviceName: harness-manager
          servicePort: 9090
        path: /stream

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: harness-manager
  namespace: {{ .Values.kubernetesClusterNamespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      harness-app: harness
      harness-service: manager
  template:
    metadata:
      annotations:
        harness.io/application: harness
        harness.io/service: manager
      labels:
        harness-app: harness
        harness-service: manager
    spec:
      containers:
      - env:
        - name: jwtPasswordSecret
          valueFrom:
            secretKeyRef:
              key: jwtPasswordSecret
              name: harness-manager
        - name: jwtSsoRedirectSecret
          valueFrom:
            secretKeyRef:
              key: jwtSsoRedirectSecret
              name: harness-manager
        - name: jwtZendeskSecret
          valueFrom:
            secretKeyRef:
              key: jwtZendeskSecret
              name: harness-manager
        - name: MONGO_URI
          valueFrom:
            secretKeyRef:
              key: MONGO_URI
              name: harness-manager
        - name: jwtMultiAuthSecret
          valueFrom:
            secretKeyRef:
              key: jwtMultiAuthSecret
              name: harness-manager
        - name: jwtAuthSecret
          valueFrom:
            secretKeyRef:
              key: jwtAuthSecret
              name: harness-manager
        - name: jwtExternalServiceSecret
          valueFrom:
            secretKeyRef:
              key: jwtExternalServiceSecret
              name: harness-manager
        - name: MONGO_DB_URL
          valueFrom:
            secretKeyRef:
              key: MONGO_DB_URL
              name: harness-manager
        envFrom:
        - configMapRef:
            name: harness-manager
        image: {{ .Values.images.manager.repository }}:{{ .Values.images.manager.tag }}
        imagePullPolicy: Always
        lifecycle:
          preStop:
            exec:
              command:
              - touch
              - shutdown
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /api/version
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 1200
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: manager
        ports:
        - containerPort: 5701
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/version
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 45
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "2"
            memory: 4096Mi
          requests:
            cpu: "2"
            memory: 4096Mi
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: regcred
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: harness-manager-nginx
  namespace: {{ .Values.kubernetesClusterNamespace }}
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    harness-service: harness-manager-nginx
  type: ClusterIP

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels:
    harness-app: harness
    harness-service: harness-manager-nginx
  annotations:
    kubernetes.io/ingress.class: {{ .Values.kubernetesClusterNamespace }}
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  name: harness-manager-nginx
  namespace: {{ .Values.kubernetesClusterNamespace }}
spec:
  rules:
  - host: {{ .Values.inframapping.lbhost }}
    http:
      paths:
      - backend:
          serviceName: harness-manager-nginx
          servicePort: 80
        path: /storage

---

## Nginx config map ###


apiVersion: v1
data:
  proxy.conf: |
    server {
    root /www/data;

    }
kind: ConfigMap
metadata:
  name: harness-nginx-conf
  namespace: {{ .Values.kubernetesClusterNamespace }}

---

apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: harness-manager-nginx
  namespace: {{ .Values.kubernetesClusterNamespace }}
spec:
  serviceName: harness-manager-nginx
  selector:
    matchLabels:
      harness-app: harness
      harness-service: harness-manager-nginx # has to match .spec.template.metadata.labels  template:
  template:
    metadata:
      labels:
        harness-app: harness
        harness-service: harness-manager-nginx
    spec:
      containers:
      - image: {{ .Values.images.nginx.repository }}:{{ .Values.images.nginx.tag }}
        imagePullPolicy: Always
        name: harness-manager-nginx
        volumeMounts:
        - mountPath: /www/data
          name: harness-data
        - mountPath: /etc/nginx/conf.d
          name: harness-nginx-conf
      volumes:
      - name: harness-nginx-conf
        configMap:
          name: harness-nginx-conf
      imagePullSecrets:
      - name: regcred
  volumeClaimTemplates:
  - metadata:
      name: harness-data
      namespace: {{ .Values.kubernetesClusterNamespace }}
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.services.manager.size }}
      storageClassName: {{ .Values.services.manager.storageClass }}
