/*
 * Copyright 2021 Harness Inc. All rights reserved.
 * Use of this source code is governed by the PolyForm Shield 1.0.0 license
 * that can be found in the licenses directory at the root of this repository, also available at
 * https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt.
 */

/*
 * This file is generated by jOOQ.
 */
package io.harness.timescaledb.routines;

import io.harness.timescaledb.Public;

import java.time.OffsetDateTime;
import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class IsAlive extends AbstractRoutine<Boolean> {
  private static final long serialVersionUID = 1L;

  /**
   * The parameter <code>public.is_alive.RETURN_VALUE</code>.
   */
  public static final Parameter<Boolean> RETURN_VALUE =
      Internal.createParameter("RETURN_VALUE", SQLDataType.BOOLEAN, false, false);

  /**
   * The parameter <code>public.is_alive.instancestarttime</code>.
   */
  public static final Parameter<OffsetDateTime> INSTANCESTARTTIME =
      Internal.createParameter("instancestarttime", SQLDataType.TIMESTAMPWITHTIMEZONE, false, false);

  /**
   * The parameter <code>public.is_alive.instancestoptime</code>.
   */
  public static final Parameter<OffsetDateTime> INSTANCESTOPTIME =
      Internal.createParameter("instancestoptime", SQLDataType.TIMESTAMPWITHTIMEZONE, false, false);

  /**
   * The parameter <code>public.is_alive.jobstarttime</code>.
   */
  public static final Parameter<OffsetDateTime> JOBSTARTTIME =
      Internal.createParameter("jobstarttime", SQLDataType.TIMESTAMPWITHTIMEZONE, false, false);

  /**
   * The parameter <code>public.is_alive.jobstoptime</code>.
   */
  public static final Parameter<OffsetDateTime> JOBSTOPTIME =
      Internal.createParameter("jobstoptime", SQLDataType.TIMESTAMPWITHTIMEZONE, false, false);

  /**
   * Create a new routine call instance
   */
  public IsAlive() {
    super("is_alive", Public.PUBLIC, SQLDataType.BOOLEAN);

    setReturnParameter(RETURN_VALUE);
    addInParameter(INSTANCESTARTTIME);
    addInParameter(INSTANCESTOPTIME);
    addInParameter(JOBSTARTTIME);
    addInParameter(JOBSTOPTIME);
  }

  /**
   * Set the <code>instancestarttime</code> parameter IN value to the routine
   */
  public void setInstancestarttime(OffsetDateTime value) {
    setValue(INSTANCESTARTTIME, value);
  }

  /**
   * Set the <code>instancestarttime</code> parameter to the function to be used with a {@link org.jooq.Select}
   * statement
   */
  public IsAlive setInstancestarttime(Field<OffsetDateTime> field) {
    setField(INSTANCESTARTTIME, field);
    return this;
  }

  /**
   * Set the <code>instancestoptime</code> parameter IN value to the routine
   */
  public void setInstancestoptime(OffsetDateTime value) {
    setValue(INSTANCESTOPTIME, value);
  }

  /**
   * Set the <code>instancestoptime</code> parameter to the function to be used with a {@link org.jooq.Select} statement
   */
  public IsAlive setInstancestoptime(Field<OffsetDateTime> field) {
    setField(INSTANCESTOPTIME, field);
    return this;
  }

  /**
   * Set the <code>jobstarttime</code> parameter IN value to the routine
   */
  public void setJobstarttime(OffsetDateTime value) {
    setValue(JOBSTARTTIME, value);
  }

  /**
   * Set the <code>jobstarttime</code> parameter to the function to be used with a {@link org.jooq.Select} statement
   */
  public IsAlive setJobstarttime(Field<OffsetDateTime> field) {
    setField(JOBSTARTTIME, field);
    return this;
  }

  /**
   * Set the <code>jobstoptime</code> parameter IN value to the routine
   */
  public void setJobstoptime(OffsetDateTime value) {
    setValue(JOBSTOPTIME, value);
  }

  /**
   * Set the <code>jobstoptime</code> parameter to the function to be used with a {@link org.jooq.Select} statement
   */
  public IsAlive setJobstoptime(Field<OffsetDateTime> field) {
    setField(JOBSTOPTIME, field);
    return this;
  }
}
