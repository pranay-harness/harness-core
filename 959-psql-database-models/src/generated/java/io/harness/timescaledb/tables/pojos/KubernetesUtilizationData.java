/*
 * Copyright 2021 Harness Inc. All rights reserved.
 * Use of this source code is governed by the PolyForm Shield 1.0.0 license
 * that can be found in the licenses directory at the root of this repository, also available at
 * https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt.
 */

/*
 * This file is generated by jOOQ.
 */
package io.harness.timescaledb.tables.pojos;

import java.io.Serializable;
import java.time.OffsetDateTime;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class KubernetesUtilizationData implements Serializable {
  private static final long serialVersionUID = 1L;

  private OffsetDateTime starttime;
  private OffsetDateTime endtime;
  private String accountid;
  private String settingid;
  private String instanceid;
  private String instancetype;
  private Double cpu;
  private Double memory;
  private String clusterid;
  private Double maxcpu;
  private Double maxmemory;
  private Double storagerequestvalue;
  private Double storageusagevalue;
  private String actualinstanceid;

  public KubernetesUtilizationData() {}

  public KubernetesUtilizationData(KubernetesUtilizationData value) {
    this.starttime = value.starttime;
    this.endtime = value.endtime;
    this.accountid = value.accountid;
    this.settingid = value.settingid;
    this.instanceid = value.instanceid;
    this.instancetype = value.instancetype;
    this.cpu = value.cpu;
    this.memory = value.memory;
    this.clusterid = value.clusterid;
    this.maxcpu = value.maxcpu;
    this.maxmemory = value.maxmemory;
    this.storagerequestvalue = value.storagerequestvalue;
    this.storageusagevalue = value.storageusagevalue;
    this.actualinstanceid = value.actualinstanceid;
  }

  public KubernetesUtilizationData(OffsetDateTime starttime, OffsetDateTime endtime, String accountid, String settingid,
      String instanceid, String instancetype, Double cpu, Double memory, String clusterid, Double maxcpu,
      Double maxmemory, Double storagerequestvalue, Double storageusagevalue, String actualinstanceid) {
    this.starttime = starttime;
    this.endtime = endtime;
    this.accountid = accountid;
    this.settingid = settingid;
    this.instanceid = instanceid;
    this.instancetype = instancetype;
    this.cpu = cpu;
    this.memory = memory;
    this.clusterid = clusterid;
    this.maxcpu = maxcpu;
    this.maxmemory = maxmemory;
    this.storagerequestvalue = storagerequestvalue;
    this.storageusagevalue = storageusagevalue;
    this.actualinstanceid = actualinstanceid;
  }

  /**
   * Getter for <code>public.kubernetes_utilization_data.starttime</code>.
   */
  public OffsetDateTime getStarttime() {
    return this.starttime;
  }

  /**
   * Setter for <code>public.kubernetes_utilization_data.starttime</code>.
   */
  public KubernetesUtilizationData setStarttime(OffsetDateTime starttime) {
    this.starttime = starttime;
    return this;
  }

  /**
   * Getter for <code>public.kubernetes_utilization_data.endtime</code>.
   */
  public OffsetDateTime getEndtime() {
    return this.endtime;
  }

  /**
   * Setter for <code>public.kubernetes_utilization_data.endtime</code>.
   */
  public KubernetesUtilizationData setEndtime(OffsetDateTime endtime) {
    this.endtime = endtime;
    return this;
  }

  /**
   * Getter for <code>public.kubernetes_utilization_data.accountid</code>.
   */
  public String getAccountid() {
    return this.accountid;
  }

  /**
   * Setter for <code>public.kubernetes_utilization_data.accountid</code>.
   */
  public KubernetesUtilizationData setAccountid(String accountid) {
    this.accountid = accountid;
    return this;
  }

  /**
   * Getter for <code>public.kubernetes_utilization_data.settingid</code>.
   */
  public String getSettingid() {
    return this.settingid;
  }

  /**
   * Setter for <code>public.kubernetes_utilization_data.settingid</code>.
   */
  public KubernetesUtilizationData setSettingid(String settingid) {
    this.settingid = settingid;
    return this;
  }

  /**
   * Getter for <code>public.kubernetes_utilization_data.instanceid</code>.
   */
  public String getInstanceid() {
    return this.instanceid;
  }

  /**
   * Setter for <code>public.kubernetes_utilization_data.instanceid</code>.
   */
  public KubernetesUtilizationData setInstanceid(String instanceid) {
    this.instanceid = instanceid;
    return this;
  }

  /**
   * Getter for <code>public.kubernetes_utilization_data.instancetype</code>.
   */
  public String getInstancetype() {
    return this.instancetype;
  }

  /**
   * Setter for <code>public.kubernetes_utilization_data.instancetype</code>.
   */
  public KubernetesUtilizationData setInstancetype(String instancetype) {
    this.instancetype = instancetype;
    return this;
  }

  /**
   * Getter for <code>public.kubernetes_utilization_data.cpu</code>.
   */
  public Double getCpu() {
    return this.cpu;
  }

  /**
   * Setter for <code>public.kubernetes_utilization_data.cpu</code>.
   */
  public KubernetesUtilizationData setCpu(Double cpu) {
    this.cpu = cpu;
    return this;
  }

  /**
   * Getter for <code>public.kubernetes_utilization_data.memory</code>.
   */
  public Double getMemory() {
    return this.memory;
  }

  /**
   * Setter for <code>public.kubernetes_utilization_data.memory</code>.
   */
  public KubernetesUtilizationData setMemory(Double memory) {
    this.memory = memory;
    return this;
  }

  /**
   * Getter for <code>public.kubernetes_utilization_data.clusterid</code>.
   */
  public String getClusterid() {
    return this.clusterid;
  }

  /**
   * Setter for <code>public.kubernetes_utilization_data.clusterid</code>.
   */
  public KubernetesUtilizationData setClusterid(String clusterid) {
    this.clusterid = clusterid;
    return this;
  }

  /**
   * Getter for <code>public.kubernetes_utilization_data.maxcpu</code>.
   */
  public Double getMaxcpu() {
    return this.maxcpu;
  }

  /**
   * Setter for <code>public.kubernetes_utilization_data.maxcpu</code>.
   */
  public KubernetesUtilizationData setMaxcpu(Double maxcpu) {
    this.maxcpu = maxcpu;
    return this;
  }

  /**
   * Getter for <code>public.kubernetes_utilization_data.maxmemory</code>.
   */
  public Double getMaxmemory() {
    return this.maxmemory;
  }

  /**
   * Setter for <code>public.kubernetes_utilization_data.maxmemory</code>.
   */
  public KubernetesUtilizationData setMaxmemory(Double maxmemory) {
    this.maxmemory = maxmemory;
    return this;
  }

  /**
   * Getter for <code>public.kubernetes_utilization_data.storagerequestvalue</code>.
   */
  public Double getStoragerequestvalue() {
    return this.storagerequestvalue;
  }

  /**
   * Setter for <code>public.kubernetes_utilization_data.storagerequestvalue</code>.
   */
  public KubernetesUtilizationData setStoragerequestvalue(Double storagerequestvalue) {
    this.storagerequestvalue = storagerequestvalue;
    return this;
  }

  /**
   * Getter for <code>public.kubernetes_utilization_data.storageusagevalue</code>.
   */
  public Double getStorageusagevalue() {
    return this.storageusagevalue;
  }

  /**
   * Setter for <code>public.kubernetes_utilization_data.storageusagevalue</code>.
   */
  public KubernetesUtilizationData setStorageusagevalue(Double storageusagevalue) {
    this.storageusagevalue = storageusagevalue;
    return this;
  }

  /**
   * Getter for <code>public.kubernetes_utilization_data.actualinstanceid</code>.
   */
  public String getActualinstanceid() {
    return this.actualinstanceid;
  }

  /**
   * Setter for <code>public.kubernetes_utilization_data.actualinstanceid</code>.
   */
  public KubernetesUtilizationData setActualinstanceid(String actualinstanceid) {
    this.actualinstanceid = actualinstanceid;
    return this;
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    if (obj == null)
      return false;
    if (getClass() != obj.getClass())
      return false;
    final KubernetesUtilizationData other = (KubernetesUtilizationData) obj;
    if (starttime == null) {
      if (other.starttime != null)
        return false;
    } else if (!starttime.equals(other.starttime))
      return false;
    if (endtime == null) {
      if (other.endtime != null)
        return false;
    } else if (!endtime.equals(other.endtime))
      return false;
    if (accountid == null) {
      if (other.accountid != null)
        return false;
    } else if (!accountid.equals(other.accountid))
      return false;
    if (settingid == null) {
      if (other.settingid != null)
        return false;
    } else if (!settingid.equals(other.settingid))
      return false;
    if (instanceid == null) {
      if (other.instanceid != null)
        return false;
    } else if (!instanceid.equals(other.instanceid))
      return false;
    if (instancetype == null) {
      if (other.instancetype != null)
        return false;
    } else if (!instancetype.equals(other.instancetype))
      return false;
    if (cpu == null) {
      if (other.cpu != null)
        return false;
    } else if (!cpu.equals(other.cpu))
      return false;
    if (memory == null) {
      if (other.memory != null)
        return false;
    } else if (!memory.equals(other.memory))
      return false;
    if (clusterid == null) {
      if (other.clusterid != null)
        return false;
    } else if (!clusterid.equals(other.clusterid))
      return false;
    if (maxcpu == null) {
      if (other.maxcpu != null)
        return false;
    } else if (!maxcpu.equals(other.maxcpu))
      return false;
    if (maxmemory == null) {
      if (other.maxmemory != null)
        return false;
    } else if (!maxmemory.equals(other.maxmemory))
      return false;
    if (storagerequestvalue == null) {
      if (other.storagerequestvalue != null)
        return false;
    } else if (!storagerequestvalue.equals(other.storagerequestvalue))
      return false;
    if (storageusagevalue == null) {
      if (other.storageusagevalue != null)
        return false;
    } else if (!storageusagevalue.equals(other.storageusagevalue))
      return false;
    if (actualinstanceid == null) {
      if (other.actualinstanceid != null)
        return false;
    } else if (!actualinstanceid.equals(other.actualinstanceid))
      return false;
    return true;
  }

  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((this.starttime == null) ? 0 : this.starttime.hashCode());
    result = prime * result + ((this.endtime == null) ? 0 : this.endtime.hashCode());
    result = prime * result + ((this.accountid == null) ? 0 : this.accountid.hashCode());
    result = prime * result + ((this.settingid == null) ? 0 : this.settingid.hashCode());
    result = prime * result + ((this.instanceid == null) ? 0 : this.instanceid.hashCode());
    result = prime * result + ((this.instancetype == null) ? 0 : this.instancetype.hashCode());
    result = prime * result + ((this.cpu == null) ? 0 : this.cpu.hashCode());
    result = prime * result + ((this.memory == null) ? 0 : this.memory.hashCode());
    result = prime * result + ((this.clusterid == null) ? 0 : this.clusterid.hashCode());
    result = prime * result + ((this.maxcpu == null) ? 0 : this.maxcpu.hashCode());
    result = prime * result + ((this.maxmemory == null) ? 0 : this.maxmemory.hashCode());
    result = prime * result + ((this.storagerequestvalue == null) ? 0 : this.storagerequestvalue.hashCode());
    result = prime * result + ((this.storageusagevalue == null) ? 0 : this.storageusagevalue.hashCode());
    result = prime * result + ((this.actualinstanceid == null) ? 0 : this.actualinstanceid.hashCode());
    return result;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("KubernetesUtilizationData (");

    sb.append(starttime);
    sb.append(", ").append(endtime);
    sb.append(", ").append(accountid);
    sb.append(", ").append(settingid);
    sb.append(", ").append(instanceid);
    sb.append(", ").append(instancetype);
    sb.append(", ").append(cpu);
    sb.append(", ").append(memory);
    sb.append(", ").append(clusterid);
    sb.append(", ").append(maxcpu);
    sb.append(", ").append(maxmemory);
    sb.append(", ").append(storagerequestvalue);
    sb.append(", ").append(storageusagevalue);
    sb.append(", ").append(actualinstanceid);

    sb.append(")");
    return sb.toString();
  }
}
