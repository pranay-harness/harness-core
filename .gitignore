# Please do not use recursive filters. They seem as a good idea at first, but they create issues on a long term.
#
# For example having iml files ignored form the root will cause when a module is removed or renamed the old module
# directory to leak, because the iml file in it is still ignored and git does not remove directories that have files
# in it.
#
# if you have a legacy files after obtaining a new version of the gitignore that have previously recursive patterns
# removed, you can use `git clean -df` to cleanup your repo.

.idea
portal.iml
/target

*.ipr
*.iws
*.orig
*.xml.bak
*/delegate*.log
*/upgrade.sh
.checkstyle
.classpath
.DS_Store
.project
.settings
setting.xml
access*gz
access.log
delegate-gc-logs.gc
delegate.*.log
delegate.log
dependency-reduced-pom.xml
dump.tar.gz
dump/
manager.lock
mygclogfilename.gc
portal-gc-logs.gc
portal.log
event-server*.log
batch-processing*.log
python/**/*-checkpoint.ipynb
python/**/*.pyc
python/**/.pyenv
python/splunk_intelligence/dist/
repository/
queue.db
node_modules/
package-lock.json
infer-out
infer-out/*
client-tools
delegate.lock
delegate_sequence_config
# The Terraform code in this app is just an example, so ignore any files that may store Terraform state from a real
# deployment. You may want to remove these gitignore entries for a real app.
**/terraform.tfvars
**/.terraform
**/*.tfstate
**/*.tfstate.backup
**/tfplan
**/*.lock.info
