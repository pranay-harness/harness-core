pipeline:
  identifier: Vistaar_Pipeline_2
  name: Vistaar Pipeline 2
  variables:
    - name: name
      value: value
      type: type
    - name: name2
      value: <+input>
      type: type
  stages:
    - stage:
        identifier: Test_Build_and_Push
        name: Test Build and Push jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj j
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: Run_Unit_Tests
                  type: Run
                  name: Run Unit Tests
                  spec:
                    connectorRef: account.harnessimage
                    image: golang:1.15
                    command: <+input>
                    reports:
                      type: JUnit
                      spec:
                        paths:
                        - file1.xml
              - step:
                  identifier: Build_and_push_image_to_DockerHub
                  type: BuildAndPushDockerRegistry
                  name: Build and push image to DockerHub
                  spec:
                    connectorRef: account.harnessimage
                    repo: <+input>
                    tags:
                      - latest
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.k8cidelegate
              namespace: <+input>
    - stage:
        identifier: Run_Integration_Test
        name: Run Integration Test
        type: CI
        spec:
          cloneCodebase: false
          execution:
            steps:
              - step:
                  identifier: test_connection_to_server
                  type: Run
                  name: test connection to server
                  spec:
                    connectorRef: account.harnessimage
                    image: curlimages/curl:7.73.0
                    command: <+input>
          serviceDependencies:
            - identifier: runhelloworldserver
              name: Run Hello World Server
              type: Service
              spec:
                connectorRef: account.harnessimage
                image: <+input>
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.k8cidelegate
              namespace: harness-delegate-qb
        description: running integ tests
  properties:
    ci:
      codebase:
        connectorRef: Nofar_github
        build: <+input>
